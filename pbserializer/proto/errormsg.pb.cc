// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: errormsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "errormsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Micro {
namespace Future {
namespace Message {
namespace Business {

namespace {

const ::google::protobuf::Descriptor* BizErrorMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BizErrorMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_errormsg_2eproto() {
  protobuf_AddDesc_errormsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "errormsg.proto");
  GOOGLE_CHECK(file != NULL);
  BizErrorMsg_descriptor_ = file->message_type(0);
  static const int BizErrorMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizErrorMsg, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizErrorMsg, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizErrorMsg, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizErrorMsg, syserrcode_),
  };
  BizErrorMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BizErrorMsg_descriptor_,
      BizErrorMsg::default_instance_,
      BizErrorMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizErrorMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(BizErrorMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizErrorMsg, _internal_metadata_),
      -1);
  Result_descriptor_ = file->message_type(1);
  static const int Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, code_),
  };
  Result_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Result_descriptor_,
      Result::default_instance_,
      Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, _has_bits_[0]),
      -1,
      -1,
      sizeof(Result),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_errormsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BizErrorMsg_descriptor_, &BizErrorMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Result_descriptor_, &Result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_errormsg_2eproto() {
  delete BizErrorMsg::default_instance_;
  delete BizErrorMsg_reflection_;
  delete Result::default_instance_;
  delete Result_reflection_;
}

void protobuf_AddDesc_errormsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016errormsg.proto\022\035Micro.Future.Message.B"
    "usiness\"\\\n\013BizErrorMsg\022\021\n\tmessageId\030\001 \002("
    "\r\022\021\n\terrorcode\030\002 \002(\005\022\023\n\013description\030\003 \002("
    "\014\022\022\n\nsyserrcode\030\004 \002(\005\"\026\n\006Result\022\014\n\004code\030"
    "\001 \002(\005", 165);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "errormsg.proto", &protobuf_RegisterTypes);
  BizErrorMsg::default_instance_ = new BizErrorMsg();
  Result::default_instance_ = new Result();
  BizErrorMsg::default_instance_->InitAsDefaultInstance();
  Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_errormsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_errormsg_2eproto {
  StaticDescriptorInitializer_errormsg_2eproto() {
    protobuf_AddDesc_errormsg_2eproto();
  }
} static_descriptor_initializer_errormsg_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int BizErrorMsg::kMessageIdFieldNumber;
const int BizErrorMsg::kErrorcodeFieldNumber;
const int BizErrorMsg::kDescriptionFieldNumber;
const int BizErrorMsg::kSyserrcodeFieldNumber;
#endif  // !_MSC_VER

BizErrorMsg::BizErrorMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.BizErrorMsg)
}

void BizErrorMsg::InitAsDefaultInstance() {
}

BizErrorMsg::BizErrorMsg(const BizErrorMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.BizErrorMsg)
}

void BizErrorMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  messageid_ = 0u;
  errorcode_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syserrcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BizErrorMsg::~BizErrorMsg() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.BizErrorMsg)
  SharedDtor();
}

void BizErrorMsg::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BizErrorMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizErrorMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BizErrorMsg_descriptor_;
}

const BizErrorMsg& BizErrorMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_errormsg_2eproto();
  return *default_instance_;
}

BizErrorMsg* BizErrorMsg::default_instance_ = NULL;

BizErrorMsg* BizErrorMsg::New(::google::protobuf::Arena* arena) const {
  BizErrorMsg* n = new BizErrorMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizErrorMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BizErrorMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(messageid_, errorcode_);
    if (has_description()) {
      description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    syserrcode_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BizErrorMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.BizErrorMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 messageId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messageid_)));
          set_has_messageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errorcode;
        break;
      }

      // required int32 errorcode = 2;
      case 2: {
        if (tag == 16) {
         parse_errorcode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // required bytes description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_syserrcode;
        break;
      }

      // required int32 syserrcode = 4;
      case 4: {
        if (tag == 32) {
         parse_syserrcode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &syserrcode_)));
          set_has_syserrcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.BizErrorMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.BizErrorMsg)
  return false;
#undef DO_
}

void BizErrorMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.BizErrorMsg)
  // required uint32 messageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->messageid(), output);
  }

  // required int32 errorcode = 2;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errorcode(), output);
  }

  // required bytes description = 3;
  if (has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->description(), output);
  }

  // required int32 syserrcode = 4;
  if (has_syserrcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->syserrcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.BizErrorMsg)
}

::google::protobuf::uint8* BizErrorMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.BizErrorMsg)
  // required uint32 messageId = 1;
  if (has_messageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->messageid(), target);
  }

  // required int32 errorcode = 2;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errorcode(), target);
  }

  // required bytes description = 3;
  if (has_description()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->description(), target);
  }

  // required int32 syserrcode = 4;
  if (has_syserrcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->syserrcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.BizErrorMsg)
  return target;
}

int BizErrorMsg::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_messageid()) {
    // required uint32 messageId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messageid());
  }

  if (has_errorcode()) {
    // required int32 errorcode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_description()) {
    // required bytes description = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());
  }

  if (has_syserrcode()) {
    // required int32 syserrcode = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->syserrcode());
  }

  return total_size;
}
int BizErrorMsg::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 messageId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messageid());

    // required int32 errorcode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required bytes description = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());

    // required int32 syserrcode = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->syserrcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizErrorMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BizErrorMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BizErrorMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BizErrorMsg::MergeFrom(const BizErrorMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_syserrcode()) {
      set_syserrcode(from.syserrcode());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BizErrorMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizErrorMsg::CopyFrom(const BizErrorMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizErrorMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void BizErrorMsg::Swap(BizErrorMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizErrorMsg::InternalSwap(BizErrorMsg* other) {
  std::swap(messageid_, other->messageid_);
  std::swap(errorcode_, other->errorcode_);
  description_.Swap(&other->description_);
  std::swap(syserrcode_, other->syserrcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizErrorMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BizErrorMsg_descriptor_;
  metadata.reflection = BizErrorMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizErrorMsg

// required uint32 messageId = 1;
bool BizErrorMsg::has_messageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizErrorMsg::set_has_messageid() {
  _has_bits_[0] |= 0x00000001u;
}
void BizErrorMsg::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizErrorMsg::clear_messageid() {
  messageid_ = 0u;
  clear_has_messageid();
}
 ::google::protobuf::uint32 BizErrorMsg::messageid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.BizErrorMsg.messageId)
  return messageid_;
}
 void BizErrorMsg::set_messageid(::google::protobuf::uint32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.BizErrorMsg.messageId)
}

// required int32 errorcode = 2;
bool BizErrorMsg::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizErrorMsg::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
void BizErrorMsg::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizErrorMsg::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 BizErrorMsg::errorcode() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.BizErrorMsg.errorcode)
  return errorcode_;
}
 void BizErrorMsg::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.BizErrorMsg.errorcode)
}

// required bytes description = 3;
bool BizErrorMsg::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizErrorMsg::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
void BizErrorMsg::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizErrorMsg::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
 const ::std::string& BizErrorMsg::description() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.BizErrorMsg.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BizErrorMsg::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.BizErrorMsg.description)
}
 void BizErrorMsg::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.BizErrorMsg.description)
}
 void BizErrorMsg::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.BizErrorMsg.description)
}
 ::std::string* BizErrorMsg::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.BizErrorMsg.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BizErrorMsg::release_description() {
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BizErrorMsg::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.BizErrorMsg.description)
}

// required int32 syserrcode = 4;
bool BizErrorMsg::has_syserrcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizErrorMsg::set_has_syserrcode() {
  _has_bits_[0] |= 0x00000008u;
}
void BizErrorMsg::clear_has_syserrcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizErrorMsg::clear_syserrcode() {
  syserrcode_ = 0;
  clear_has_syserrcode();
}
 ::google::protobuf::int32 BizErrorMsg::syserrcode() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.BizErrorMsg.syserrcode)
  return syserrcode_;
}
 void BizErrorMsg::set_syserrcode(::google::protobuf::int32 value) {
  set_has_syserrcode();
  syserrcode_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.BizErrorMsg.syserrcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Result::kCodeFieldNumber;
#endif  // !_MSC_VER

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.Result)
}

void Result::InitAsDefaultInstance() {
}

Result::Result(const Result& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.Result)
}

void Result::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.Result)
  SharedDtor();
}

void Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Result_descriptor_;
}

const Result& Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_errormsg_2eproto();
  return *default_instance_;
}

Result* Result::default_instance_ = NULL;

Result* Result::New(::google::protobuf::Arena* arena) const {
  Result* n = new Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Result::Clear() {
  code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.Result)
  // required int32 code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.Result)
}

::google::protobuf::uint8* Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.Result)
  // required int32 code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.Result)
  return target;
}

int Result::ByteSize() const {
  int total_size = 0;

  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Result* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  std::swap(code_, other->code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Result_descriptor_;
  metadata.reflection = Result_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Result

// required int32 code = 1;
bool Result::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Result::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void Result::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void Result::clear_code() {
  code_ = 0;
  clear_has_code();
}
 ::google::protobuf::int32 Result::code() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.Result.code)
  return code_;
}
 void Result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.Result.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Business
}  // namespace Message
}  // namespace Future
}  // namespace Micro

// @@protoc_insertion_point(global_scope)
