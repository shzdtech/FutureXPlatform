// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMsgMDA.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PBMsgMDA.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PBWrapMsgMDA {

namespace {

const ::google::protobuf::Descriptor* PBMsgEqtMD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgEqtMD_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMsgFutMD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgFutMD_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMsgMDAMD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMsgMDAMD_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DataType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* StatusDB_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_PBMsgMDA_2eproto() {
  protobuf_AddDesc_PBMsgMDA_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PBMsgMDA.proto");
  GOOGLE_CHECK(file != NULL);
  PBMsgEqtMD_descriptor_ = file->message_type(0);
  static const int PBMsgEqtMD_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, eof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, datatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, preclosevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, openvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, highvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, lowvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, latestindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, matchprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, askprice5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, askprice4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, askprice3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, askprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, askprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidprice3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidprice4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidprice5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, asksize5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, asksize4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, asksize3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, asksize2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, asksize1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidsize1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidsize2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidsize3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidsize4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, bidsize5_),
  };
  PBMsgEqtMD_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMsgEqtMD_descriptor_,
      PBMsgEqtMD::default_instance_,
      PBMsgEqtMD_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMsgEqtMD),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgEqtMD, _is_default_instance_));
  PBMsgFutMD_descriptor_ = file->message_type(1);
  static const int PBMsgFutMD_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, eof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, askprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, bidprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, precloseprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, presettleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, openprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, highprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, lowprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, matchprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, pricechange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, settleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, highlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, lowlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, asksize1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, bidsize1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, turnover_),
  };
  PBMsgFutMD_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMsgFutMD_descriptor_,
      PBMsgFutMD::default_instance_,
      PBMsgFutMD_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMsgFutMD),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgFutMD, _is_default_instance_));
  PBMsgMDAMD_descriptor_ = file->message_type(2);
  static const int PBMsgMDAMD_offsets_[38] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, eof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, requestsymbollist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, datatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, preclosevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, openvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, highvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, lowvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, latestindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, matchprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, askprice5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, asksize5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, askprice4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, asksize4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, askprice3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, asksize3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, askprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, asksize2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, askprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, asksize1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidsize1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidsize2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidprice3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidsize3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidprice4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidsize4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidprice5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, bidsize5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, presettleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, pricechange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, settleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, highlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, lowlimit_),
  };
  PBMsgMDAMD_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMsgMDAMD_descriptor_,
      PBMsgMDAMD::default_instance_,
      PBMsgMDAMD_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMsgMDAMD),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMsgMDAMD, _is_default_instance_));
  DataType_descriptor_ = file->enum_type(0);
  MessageType_descriptor_ = file->enum_type(1);
  StatusDB_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PBMsgMDA_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMsgEqtMD_descriptor_, &PBMsgEqtMD::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMsgFutMD_descriptor_, &PBMsgFutMD::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMsgMDAMD_descriptor_, &PBMsgMDAMD::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PBMsgMDA_2eproto() {
  delete PBMsgEqtMD::default_instance_;
  delete PBMsgEqtMD_reflection_;
  delete PBMsgFutMD::default_instance_;
  delete PBMsgFutMD_reflection_;
  delete PBMsgMDAMD::default_instance_;
  delete PBMsgMDAMD_reflection_;
}

void protobuf_AddDesc_PBMsgMDA_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016PBMsgMDA.proto\022\014PBWrapMsgMDA\"\202\005\n\nPBMsg"
    "EqtMD\022\013\n\003EOF\030\001 \001(\005\022\016\n\006source\030\003 \001(\t\022(\n\010da"
    "taType\030\004 \001(\0162\026.PBWrapMsgMDA.DataType\022\016\n\006"
    "symbol\030\005 \001(\t\022\021\n\ttimeStamp\030\006 \001(\t\022\025\n\rpreCl"
    "oseValue\030\007 \001(\003\022\021\n\topenValue\030\010 \001(\003\022\021\n\thig"
    "hValue\030\013 \001(\003\022\020\n\010lowValue\030\014 \001(\003\022\023\n\013latest"
    "Index\030\r \001(\003\022\022\n\nmatchPrice\030\016 \001(\003\022\021\n\taskPr"
    "ice5\030\017 \001(\003\022\021\n\taskPrice4\030\021 \001(\003\022\021\n\taskPric"
    "e3\030\023 \001(\003\022\021\n\taskPrice2\030\025 \001(\003\022\021\n\taskPrice1"
    "\030\027 \001(\003\022\021\n\tbidPrice1\030\031 \001(\003\022\021\n\tbidPrice2\030\033"
    " \001(\003\022\021\n\tbidPrice3\030\035 \001(\003\022\021\n\tbidPrice4\030\037 \001"
    "(\003\022\021\n\tbidPrice5\030! \001(\003\022\020\n\010turnover\030\t \001(\003\022"
    "\016\n\006volume\030\n \001(\003\022\020\n\010askSize5\030\020 \001(\003\022\020\n\010ask"
    "Size4\030\022 \001(\003\022\020\n\010askSize3\030\024 \001(\003\022\020\n\010askSize"
    "2\030\026 \001(\003\022\020\n\010askSize1\030\030 \001(\003\022\020\n\010bidSize1\030\032 "
    "\001(\003\022\020\n\010bidSize2\030\034 \001(\003\022\020\n\010bidSize3\030\036 \001(\003\022"
    "\020\n\010bidSize4\030  \001(\003\022\020\n\010bidSize5\030\" \001(\003\"\362\002\n\n"
    "PBMsgFutMD\022\013\n\003EOF\030\001 \001(\005\022\016\n\006symbol\030\005 \001(\t\022"
    "\021\n\ttimeStamp\030\006 \001(\t\022\021\n\taskPrice1\030\007 \001(\003\022\021\n"
    "\tbidPrice1\030\t \001(\003\022\025\n\rpreClosePrice\030\013 \001(\003\022"
    "\026\n\016preSettlePrice\030\014 \001(\003\022\021\n\topenPrice\030\r \001"
    "(\003\022\021\n\thighPrice\030\016 \001(\003\022\020\n\010lowPrice\030\017 \001(\003\022"
    "\022\n\nmatchPrice\030\020 \001(\003\022\023\n\013priceChange\030\021 \001(\003"
    "\022\023\n\013settlePrice\030\024 \001(\003\022\021\n\thighLimit\030\025 \001(\003"
    "\022\020\n\010lowLimit\030\026 \001(\003\022\020\n\010askSize1\030\010 \001(\003\022\020\n\010"
    "bidSize1\030\n \001(\003\022\016\n\006volume\030\022 \001(\003\022\020\n\010turnov"
    "er\030\023 \001(\003\"\364\005\n\nPBMsgMDAMD\022\013\n\003EOF\030\001 \001(\005\022\031\n\021"
    "requestSymbolList\030\005 \003(\t\022(\n\010dataType\030\006 \001("
    "\0162\026.PBWrapMsgMDA.DataType\022\016\n\006symbol\030\007 \001("
    "\t\022\021\n\ttimeStamp\030\010 \001(\t\022\025\n\rpreCloseValue\030\t "
    "\001(\003\022\021\n\topenValue\030\n \001(\003\022\020\n\010turnover\030\013 \001(\003"
    "\022\016\n\006volume\030\014 \001(\003\022\021\n\thighValue\030\r \001(\003\022\020\n\010l"
    "owValue\030\016 \001(\003\022\023\n\013latestIndex\030\017 \001(\003\022\022\n\nma"
    "tchPrice\030\020 \001(\003\022\021\n\taskPrice5\030\021 \001(\003\022\020\n\010ask"
    "Size5\030\022 \001(\003\022\021\n\taskPrice4\030\023 \001(\003\022\020\n\010askSiz"
    "e4\030\024 \001(\003\022\021\n\taskPrice3\030\025 \001(\003\022\020\n\010askSize3\030"
    "\026 \001(\003\022\021\n\taskPrice2\030\027 \001(\003\022\020\n\010askSize2\030\030 \001"
    "(\003\022\021\n\taskPrice1\030\031 \001(\003\022\020\n\010askSize1\030\032 \001(\003\022"
    "\021\n\tbidPrice1\030\033 \001(\003\022\020\n\010bidSize1\030\034 \001(\003\022\021\n\t"
    "bidPrice2\030\035 \001(\003\022\020\n\010bidSize2\030\036 \001(\003\022\021\n\tbid"
    "Price3\030\037 \001(\003\022\020\n\010bidSize3\030  \001(\003\022\021\n\tbidPri"
    "ce4\030! \001(\003\022\020\n\010bidSize4\030\" \001(\003\022\021\n\tbidPrice5"
    "\030# \001(\003\022\020\n\010bidSize5\030$ \001(\003\022\026\n\016preSettlePri"
    "ce\030% \001(\003\022\023\n\013priceChange\030& \001(\003\022\023\n\013settleP"
    "rice\030\' \001(\003\022\021\n\thighLimit\030( \001(\003\022\020\n\010lowLimi"
    "t\030) \001(\003*n\n\010DataType\022\016\n\nDataType_0\020\000\022\n\n\006E"
    "QUITY\020\001\022\t\n\005INDEX\020\002\022\020\n\014INDEX_FUTURE\020\003\022\024\n\020"
    "COMMODITY_FUTURE\020\004\022\023\n\017INDEX_FORCASTER\020\005*"
    "W\n\013MessageType\022\021\n\rMessageType_0\020\000\022\017\n\013INF"
    "ORMATION\020\001\022\013\n\007REQUEST\020\002\022\t\n\005IMAGE\020\003\022\014\n\010DA"
    "TABASE\020\004*5\n\010StatusDB\022\016\n\nStatusDB_0\020\000\022\n\n\006"
    "NORMAL\020\001\022\r\n\tSUSPENDED\020\002B\037\n\017ProtoBufMessa"
    "geB\014PBWrapMsgMDAb\006proto3", 2104);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PBMsgMDA.proto", &protobuf_RegisterTypes);
  PBMsgEqtMD::default_instance_ = new PBMsgEqtMD();
  PBMsgFutMD::default_instance_ = new PBMsgFutMD();
  PBMsgMDAMD::default_instance_ = new PBMsgMDAMD();
  PBMsgEqtMD::default_instance_->InitAsDefaultInstance();
  PBMsgFutMD::default_instance_->InitAsDefaultInstance();
  PBMsgMDAMD::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PBMsgMDA_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PBMsgMDA_2eproto {
  StaticDescriptorInitializer_PBMsgMDA_2eproto() {
    protobuf_AddDesc_PBMsgMDA_2eproto();
  }
} static_descriptor_initializer_PBMsgMDA_2eproto_;
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}
bool DataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StatusDB_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatusDB_descriptor_;
}
bool StatusDB_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMsgEqtMD::kEOFFieldNumber;
const int PBMsgEqtMD::kSourceFieldNumber;
const int PBMsgEqtMD::kDataTypeFieldNumber;
const int PBMsgEqtMD::kSymbolFieldNumber;
const int PBMsgEqtMD::kTimeStampFieldNumber;
const int PBMsgEqtMD::kPreCloseValueFieldNumber;
const int PBMsgEqtMD::kOpenValueFieldNumber;
const int PBMsgEqtMD::kHighValueFieldNumber;
const int PBMsgEqtMD::kLowValueFieldNumber;
const int PBMsgEqtMD::kLatestIndexFieldNumber;
const int PBMsgEqtMD::kMatchPriceFieldNumber;
const int PBMsgEqtMD::kAskPrice5FieldNumber;
const int PBMsgEqtMD::kAskPrice4FieldNumber;
const int PBMsgEqtMD::kAskPrice3FieldNumber;
const int PBMsgEqtMD::kAskPrice2FieldNumber;
const int PBMsgEqtMD::kAskPrice1FieldNumber;
const int PBMsgEqtMD::kBidPrice1FieldNumber;
const int PBMsgEqtMD::kBidPrice2FieldNumber;
const int PBMsgEqtMD::kBidPrice3FieldNumber;
const int PBMsgEqtMD::kBidPrice4FieldNumber;
const int PBMsgEqtMD::kBidPrice5FieldNumber;
const int PBMsgEqtMD::kTurnoverFieldNumber;
const int PBMsgEqtMD::kVolumeFieldNumber;
const int PBMsgEqtMD::kAskSize5FieldNumber;
const int PBMsgEqtMD::kAskSize4FieldNumber;
const int PBMsgEqtMD::kAskSize3FieldNumber;
const int PBMsgEqtMD::kAskSize2FieldNumber;
const int PBMsgEqtMD::kAskSize1FieldNumber;
const int PBMsgEqtMD::kBidSize1FieldNumber;
const int PBMsgEqtMD::kBidSize2FieldNumber;
const int PBMsgEqtMD::kBidSize3FieldNumber;
const int PBMsgEqtMD::kBidSize4FieldNumber;
const int PBMsgEqtMD::kBidSize5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMsgEqtMD::PBMsgEqtMD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBWrapMsgMDA.PBMsgEqtMD)
}

void PBMsgEqtMD::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBMsgEqtMD::PBMsgEqtMD(const PBMsgEqtMD& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBWrapMsgMDA.PBMsgEqtMD)
}

void PBMsgEqtMD::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eof_ = 0;
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datatype_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preclosevalue_ = GOOGLE_LONGLONG(0);
  openvalue_ = GOOGLE_LONGLONG(0);
  highvalue_ = GOOGLE_LONGLONG(0);
  lowvalue_ = GOOGLE_LONGLONG(0);
  latestindex_ = GOOGLE_LONGLONG(0);
  matchprice_ = GOOGLE_LONGLONG(0);
  askprice5_ = GOOGLE_LONGLONG(0);
  askprice4_ = GOOGLE_LONGLONG(0);
  askprice3_ = GOOGLE_LONGLONG(0);
  askprice2_ = GOOGLE_LONGLONG(0);
  askprice1_ = GOOGLE_LONGLONG(0);
  bidprice1_ = GOOGLE_LONGLONG(0);
  bidprice2_ = GOOGLE_LONGLONG(0);
  bidprice3_ = GOOGLE_LONGLONG(0);
  bidprice4_ = GOOGLE_LONGLONG(0);
  bidprice5_ = GOOGLE_LONGLONG(0);
  turnover_ = GOOGLE_LONGLONG(0);
  volume_ = GOOGLE_LONGLONG(0);
  asksize5_ = GOOGLE_LONGLONG(0);
  asksize4_ = GOOGLE_LONGLONG(0);
  asksize3_ = GOOGLE_LONGLONG(0);
  asksize2_ = GOOGLE_LONGLONG(0);
  asksize1_ = GOOGLE_LONGLONG(0);
  bidsize1_ = GOOGLE_LONGLONG(0);
  bidsize2_ = GOOGLE_LONGLONG(0);
  bidsize3_ = GOOGLE_LONGLONG(0);
  bidsize4_ = GOOGLE_LONGLONG(0);
  bidsize5_ = GOOGLE_LONGLONG(0);
}

PBMsgEqtMD::~PBMsgEqtMD() {
  // @@protoc_insertion_point(destructor:PBWrapMsgMDA.PBMsgEqtMD)
  SharedDtor();
}

void PBMsgEqtMD::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBMsgEqtMD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgEqtMD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgEqtMD_descriptor_;
}

const PBMsgEqtMD& PBMsgEqtMD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgMDA_2eproto();
  return *default_instance_;
}

PBMsgEqtMD* PBMsgEqtMD::default_instance_ = NULL;

PBMsgEqtMD* PBMsgEqtMD::New(::google::protobuf::Arena* arena) const {
  PBMsgEqtMD* n = new PBMsgEqtMD;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMsgEqtMD::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBMsgEqtMD*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(eof_, datatype_);
  ZR_(preclosevalue_, highvalue_);
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(lowvalue_, askprice1_);
  ZR_(bidprice1_, asksize5_);
  ZR_(asksize4_, bidsize4_);
  bidsize5_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool PBMsgEqtMD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBWrapMsgMDA.PBMsgEqtMD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 EOF = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eof_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source;
        break;
      }

      // optional string source = 3;
      case 3: {
        if (tag == 26) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgEqtMD.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dataType;
        break;
      }

      // optional .PBWrapMsgMDA.DataType dataType = 4;
      case 4: {
        if (tag == 32) {
         parse_dataType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datatype(static_cast< ::PBWrapMsgMDA::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_symbol;
        break;
      }

      // optional string symbol = 5;
      case 5: {
        if (tag == 42) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgEqtMD.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_timeStamp;
        break;
      }

      // optional string timeStamp = 6;
      case 6: {
        if (tag == 50) {
         parse_timeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgEqtMD.timeStamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_preCloseValue;
        break;
      }

      // optional int64 preCloseValue = 7;
      case 7: {
        if (tag == 56) {
         parse_preCloseValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &preclosevalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_openValue;
        break;
      }

      // optional int64 openValue = 8;
      case 8: {
        if (tag == 64) {
         parse_openValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &openvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_turnover;
        break;
      }

      // optional int64 turnover = 9;
      case 9: {
        if (tag == 72) {
         parse_turnover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &turnover_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_volume;
        break;
      }

      // optional int64 volume = 10;
      case 10: {
        if (tag == 80) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_highValue;
        break;
      }

      // optional int64 highValue = 11;
      case 11: {
        if (tag == 88) {
         parse_highValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_lowValue;
        break;
      }

      // optional int64 lowValue = 12;
      case 12: {
        if (tag == 96) {
         parse_lowValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_latestIndex;
        break;
      }

      // optional int64 latestIndex = 13;
      case 13: {
        if (tag == 104) {
         parse_latestIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latestindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_matchPrice;
        break;
      }

      // optional int64 matchPrice = 14;
      case 14: {
        if (tag == 112) {
         parse_matchPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &matchprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_askPrice5;
        break;
      }

      // optional int64 askPrice5 = 15;
      case 15: {
        if (tag == 120) {
         parse_askPrice5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_askSize5;
        break;
      }

      // optional int64 askSize5 = 16;
      case 16: {
        if (tag == 128) {
         parse_askSize5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_askPrice4;
        break;
      }

      // optional int64 askPrice4 = 17;
      case 17: {
        if (tag == 136) {
         parse_askPrice4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_askSize4;
        break;
      }

      // optional int64 askSize4 = 18;
      case 18: {
        if (tag == 144) {
         parse_askSize4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_askPrice3;
        break;
      }

      // optional int64 askPrice3 = 19;
      case 19: {
        if (tag == 152) {
         parse_askPrice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_askSize3;
        break;
      }

      // optional int64 askSize3 = 20;
      case 20: {
        if (tag == 160) {
         parse_askSize3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_askPrice2;
        break;
      }

      // optional int64 askPrice2 = 21;
      case 21: {
        if (tag == 168) {
         parse_askPrice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_askSize2;
        break;
      }

      // optional int64 askSize2 = 22;
      case 22: {
        if (tag == 176) {
         parse_askSize2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_askPrice1;
        break;
      }

      // optional int64 askPrice1 = 23;
      case 23: {
        if (tag == 184) {
         parse_askPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_askSize1;
        break;
      }

      // optional int64 askSize1 = 24;
      case 24: {
        if (tag == 192) {
         parse_askSize1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_bidPrice1;
        break;
      }

      // optional int64 bidPrice1 = 25;
      case 25: {
        if (tag == 200) {
         parse_bidPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_bidSize1;
        break;
      }

      // optional int64 bidSize1 = 26;
      case 26: {
        if (tag == 208) {
         parse_bidSize1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_bidPrice2;
        break;
      }

      // optional int64 bidPrice2 = 27;
      case 27: {
        if (tag == 216) {
         parse_bidPrice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_bidSize2;
        break;
      }

      // optional int64 bidSize2 = 28;
      case 28: {
        if (tag == 224) {
         parse_bidSize2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_bidPrice3;
        break;
      }

      // optional int64 bidPrice3 = 29;
      case 29: {
        if (tag == 232) {
         parse_bidPrice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_bidSize3;
        break;
      }

      // optional int64 bidSize3 = 30;
      case 30: {
        if (tag == 240) {
         parse_bidSize3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_bidPrice4;
        break;
      }

      // optional int64 bidPrice4 = 31;
      case 31: {
        if (tag == 248) {
         parse_bidPrice4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_bidSize4;
        break;
      }

      // optional int64 bidSize4 = 32;
      case 32: {
        if (tag == 256) {
         parse_bidSize4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_bidPrice5;
        break;
      }

      // optional int64 bidPrice5 = 33;
      case 33: {
        if (tag == 264) {
         parse_bidPrice5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_bidSize5;
        break;
      }

      // optional int64 bidSize5 = 34;
      case 34: {
        if (tag == 272) {
         parse_bidSize5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBWrapMsgMDA.PBMsgEqtMD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBWrapMsgMDA.PBMsgEqtMD)
  return false;
#undef DO_
}

void PBMsgEqtMD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBWrapMsgMDA.PBMsgEqtMD)
  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eof(), output);
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgEqtMD.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source(), output);
  }

  // optional .PBWrapMsgMDA.DataType dataType = 4;
  if (this->datatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->datatype(), output);
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgEqtMD.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->symbol(), output);
  }

  // optional string timeStamp = 6;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgEqtMD.timeStamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->timestamp(), output);
  }

  // optional int64 preCloseValue = 7;
  if (this->preclosevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->preclosevalue(), output);
  }

  // optional int64 openValue = 8;
  if (this->openvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->openvalue(), output);
  }

  // optional int64 turnover = 9;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->turnover(), output);
  }

  // optional int64 volume = 10;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->volume(), output);
  }

  // optional int64 highValue = 11;
  if (this->highvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->highvalue(), output);
  }

  // optional int64 lowValue = 12;
  if (this->lowvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->lowvalue(), output);
  }

  // optional int64 latestIndex = 13;
  if (this->latestindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->latestindex(), output);
  }

  // optional int64 matchPrice = 14;
  if (this->matchprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->matchprice(), output);
  }

  // optional int64 askPrice5 = 15;
  if (this->askprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->askprice5(), output);
  }

  // optional int64 askSize5 = 16;
  if (this->asksize5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->asksize5(), output);
  }

  // optional int64 askPrice4 = 17;
  if (this->askprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->askprice4(), output);
  }

  // optional int64 askSize4 = 18;
  if (this->asksize4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->asksize4(), output);
  }

  // optional int64 askPrice3 = 19;
  if (this->askprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->askprice3(), output);
  }

  // optional int64 askSize3 = 20;
  if (this->asksize3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->asksize3(), output);
  }

  // optional int64 askPrice2 = 21;
  if (this->askprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->askprice2(), output);
  }

  // optional int64 askSize2 = 22;
  if (this->asksize2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->asksize2(), output);
  }

  // optional int64 askPrice1 = 23;
  if (this->askprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->askprice1(), output);
  }

  // optional int64 askSize1 = 24;
  if (this->asksize1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->asksize1(), output);
  }

  // optional int64 bidPrice1 = 25;
  if (this->bidprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->bidprice1(), output);
  }

  // optional int64 bidSize1 = 26;
  if (this->bidsize1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->bidsize1(), output);
  }

  // optional int64 bidPrice2 = 27;
  if (this->bidprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->bidprice2(), output);
  }

  // optional int64 bidSize2 = 28;
  if (this->bidsize2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->bidsize2(), output);
  }

  // optional int64 bidPrice3 = 29;
  if (this->bidprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(29, this->bidprice3(), output);
  }

  // optional int64 bidSize3 = 30;
  if (this->bidsize3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->bidsize3(), output);
  }

  // optional int64 bidPrice4 = 31;
  if (this->bidprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(31, this->bidprice4(), output);
  }

  // optional int64 bidSize4 = 32;
  if (this->bidsize4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(32, this->bidsize4(), output);
  }

  // optional int64 bidPrice5 = 33;
  if (this->bidprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(33, this->bidprice5(), output);
  }

  // optional int64 bidSize5 = 34;
  if (this->bidsize5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(34, this->bidsize5(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBWrapMsgMDA.PBMsgEqtMD)
}

::google::protobuf::uint8* PBMsgEqtMD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWrapMsgMDA.PBMsgEqtMD)
  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eof(), target);
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgEqtMD.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source(), target);
  }

  // optional .PBWrapMsgMDA.DataType dataType = 4;
  if (this->datatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->datatype(), target);
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgEqtMD.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->symbol(), target);
  }

  // optional string timeStamp = 6;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgEqtMD.timeStamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->timestamp(), target);
  }

  // optional int64 preCloseValue = 7;
  if (this->preclosevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->preclosevalue(), target);
  }

  // optional int64 openValue = 8;
  if (this->openvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->openvalue(), target);
  }

  // optional int64 turnover = 9;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->turnover(), target);
  }

  // optional int64 volume = 10;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->volume(), target);
  }

  // optional int64 highValue = 11;
  if (this->highvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->highvalue(), target);
  }

  // optional int64 lowValue = 12;
  if (this->lowvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->lowvalue(), target);
  }

  // optional int64 latestIndex = 13;
  if (this->latestindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->latestindex(), target);
  }

  // optional int64 matchPrice = 14;
  if (this->matchprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->matchprice(), target);
  }

  // optional int64 askPrice5 = 15;
  if (this->askprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->askprice5(), target);
  }

  // optional int64 askSize5 = 16;
  if (this->asksize5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->asksize5(), target);
  }

  // optional int64 askPrice4 = 17;
  if (this->askprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->askprice4(), target);
  }

  // optional int64 askSize4 = 18;
  if (this->asksize4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->asksize4(), target);
  }

  // optional int64 askPrice3 = 19;
  if (this->askprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->askprice3(), target);
  }

  // optional int64 askSize3 = 20;
  if (this->asksize3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->asksize3(), target);
  }

  // optional int64 askPrice2 = 21;
  if (this->askprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->askprice2(), target);
  }

  // optional int64 askSize2 = 22;
  if (this->asksize2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->asksize2(), target);
  }

  // optional int64 askPrice1 = 23;
  if (this->askprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->askprice1(), target);
  }

  // optional int64 askSize1 = 24;
  if (this->asksize1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->asksize1(), target);
  }

  // optional int64 bidPrice1 = 25;
  if (this->bidprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->bidprice1(), target);
  }

  // optional int64 bidSize1 = 26;
  if (this->bidsize1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->bidsize1(), target);
  }

  // optional int64 bidPrice2 = 27;
  if (this->bidprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->bidprice2(), target);
  }

  // optional int64 bidSize2 = 28;
  if (this->bidsize2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->bidsize2(), target);
  }

  // optional int64 bidPrice3 = 29;
  if (this->bidprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(29, this->bidprice3(), target);
  }

  // optional int64 bidSize3 = 30;
  if (this->bidsize3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->bidsize3(), target);
  }

  // optional int64 bidPrice4 = 31;
  if (this->bidprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(31, this->bidprice4(), target);
  }

  // optional int64 bidSize4 = 32;
  if (this->bidsize4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(32, this->bidsize4(), target);
  }

  // optional int64 bidPrice5 = 33;
  if (this->bidprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(33, this->bidprice5(), target);
  }

  // optional int64 bidSize5 = 34;
  if (this->bidsize5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(34, this->bidsize5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBWrapMsgMDA.PBMsgEqtMD)
  return target;
}

int PBMsgEqtMD::ByteSize() const {
  int total_size = 0;

  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eof());
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional .PBWrapMsgMDA.DataType dataType = 4;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datatype());
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string timeStamp = 6;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // optional int64 preCloseValue = 7;
  if (this->preclosevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->preclosevalue());
  }

  // optional int64 openValue = 8;
  if (this->openvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->openvalue());
  }

  // optional int64 highValue = 11;
  if (this->highvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highvalue());
  }

  // optional int64 lowValue = 12;
  if (this->lowvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowvalue());
  }

  // optional int64 latestIndex = 13;
  if (this->latestindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latestindex());
  }

  // optional int64 matchPrice = 14;
  if (this->matchprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->matchprice());
  }

  // optional int64 askPrice5 = 15;
  if (this->askprice5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice5());
  }

  // optional int64 askPrice4 = 17;
  if (this->askprice4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice4());
  }

  // optional int64 askPrice3 = 19;
  if (this->askprice3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice3());
  }

  // optional int64 askPrice2 = 21;
  if (this->askprice2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice2());
  }

  // optional int64 askPrice1 = 23;
  if (this->askprice1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice1());
  }

  // optional int64 bidPrice1 = 25;
  if (this->bidprice1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice1());
  }

  // optional int64 bidPrice2 = 27;
  if (this->bidprice2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice2());
  }

  // optional int64 bidPrice3 = 29;
  if (this->bidprice3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice3());
  }

  // optional int64 bidPrice4 = 31;
  if (this->bidprice4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice4());
  }

  // optional int64 bidPrice5 = 33;
  if (this->bidprice5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice5());
  }

  // optional int64 turnover = 9;
  if (this->turnover() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->turnover());
  }

  // optional int64 volume = 10;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  // optional int64 askSize5 = 16;
  if (this->asksize5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize5());
  }

  // optional int64 askSize4 = 18;
  if (this->asksize4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize4());
  }

  // optional int64 askSize3 = 20;
  if (this->asksize3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize3());
  }

  // optional int64 askSize2 = 22;
  if (this->asksize2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize2());
  }

  // optional int64 askSize1 = 24;
  if (this->asksize1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize1());
  }

  // optional int64 bidSize1 = 26;
  if (this->bidsize1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize1());
  }

  // optional int64 bidSize2 = 28;
  if (this->bidsize2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize2());
  }

  // optional int64 bidSize3 = 30;
  if (this->bidsize3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize3());
  }

  // optional int64 bidSize4 = 32;
  if (this->bidsize4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize4());
  }

  // optional int64 bidSize5 = 34;
  if (this->bidsize5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize5());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgEqtMD::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMsgEqtMD* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMsgEqtMD>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgEqtMD::MergeFrom(const PBMsgEqtMD& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.datatype() != 0) {
    set_datatype(from.datatype());
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.preclosevalue() != 0) {
    set_preclosevalue(from.preclosevalue());
  }
  if (from.openvalue() != 0) {
    set_openvalue(from.openvalue());
  }
  if (from.highvalue() != 0) {
    set_highvalue(from.highvalue());
  }
  if (from.lowvalue() != 0) {
    set_lowvalue(from.lowvalue());
  }
  if (from.latestindex() != 0) {
    set_latestindex(from.latestindex());
  }
  if (from.matchprice() != 0) {
    set_matchprice(from.matchprice());
  }
  if (from.askprice5() != 0) {
    set_askprice5(from.askprice5());
  }
  if (from.askprice4() != 0) {
    set_askprice4(from.askprice4());
  }
  if (from.askprice3() != 0) {
    set_askprice3(from.askprice3());
  }
  if (from.askprice2() != 0) {
    set_askprice2(from.askprice2());
  }
  if (from.askprice1() != 0) {
    set_askprice1(from.askprice1());
  }
  if (from.bidprice1() != 0) {
    set_bidprice1(from.bidprice1());
  }
  if (from.bidprice2() != 0) {
    set_bidprice2(from.bidprice2());
  }
  if (from.bidprice3() != 0) {
    set_bidprice3(from.bidprice3());
  }
  if (from.bidprice4() != 0) {
    set_bidprice4(from.bidprice4());
  }
  if (from.bidprice5() != 0) {
    set_bidprice5(from.bidprice5());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.asksize5() != 0) {
    set_asksize5(from.asksize5());
  }
  if (from.asksize4() != 0) {
    set_asksize4(from.asksize4());
  }
  if (from.asksize3() != 0) {
    set_asksize3(from.asksize3());
  }
  if (from.asksize2() != 0) {
    set_asksize2(from.asksize2());
  }
  if (from.asksize1() != 0) {
    set_asksize1(from.asksize1());
  }
  if (from.bidsize1() != 0) {
    set_bidsize1(from.bidsize1());
  }
  if (from.bidsize2() != 0) {
    set_bidsize2(from.bidsize2());
  }
  if (from.bidsize3() != 0) {
    set_bidsize3(from.bidsize3());
  }
  if (from.bidsize4() != 0) {
    set_bidsize4(from.bidsize4());
  }
  if (from.bidsize5() != 0) {
    set_bidsize5(from.bidsize5());
  }
}

void PBMsgEqtMD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgEqtMD::CopyFrom(const PBMsgEqtMD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgEqtMD::IsInitialized() const {

  return true;
}

void PBMsgEqtMD::Swap(PBMsgEqtMD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMsgEqtMD::InternalSwap(PBMsgEqtMD* other) {
  std::swap(eof_, other->eof_);
  source_.Swap(&other->source_);
  std::swap(datatype_, other->datatype_);
  symbol_.Swap(&other->symbol_);
  timestamp_.Swap(&other->timestamp_);
  std::swap(preclosevalue_, other->preclosevalue_);
  std::swap(openvalue_, other->openvalue_);
  std::swap(highvalue_, other->highvalue_);
  std::swap(lowvalue_, other->lowvalue_);
  std::swap(latestindex_, other->latestindex_);
  std::swap(matchprice_, other->matchprice_);
  std::swap(askprice5_, other->askprice5_);
  std::swap(askprice4_, other->askprice4_);
  std::swap(askprice3_, other->askprice3_);
  std::swap(askprice2_, other->askprice2_);
  std::swap(askprice1_, other->askprice1_);
  std::swap(bidprice1_, other->bidprice1_);
  std::swap(bidprice2_, other->bidprice2_);
  std::swap(bidprice3_, other->bidprice3_);
  std::swap(bidprice4_, other->bidprice4_);
  std::swap(bidprice5_, other->bidprice5_);
  std::swap(turnover_, other->turnover_);
  std::swap(volume_, other->volume_);
  std::swap(asksize5_, other->asksize5_);
  std::swap(asksize4_, other->asksize4_);
  std::swap(asksize3_, other->asksize3_);
  std::swap(asksize2_, other->asksize2_);
  std::swap(asksize1_, other->asksize1_);
  std::swap(bidsize1_, other->bidsize1_);
  std::swap(bidsize2_, other->bidsize2_);
  std::swap(bidsize3_, other->bidsize3_);
  std::swap(bidsize4_, other->bidsize4_);
  std::swap(bidsize5_, other->bidsize5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMsgEqtMD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgEqtMD_descriptor_;
  metadata.reflection = PBMsgEqtMD_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMsgEqtMD

// optional int32 EOF = 1;
void PBMsgEqtMD::clear_eof() {
  eof_ = 0;
}
 ::google::protobuf::int32 PBMsgEqtMD::eof() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.EOF)
  return eof_;
}
 void PBMsgEqtMD::set_eof(::google::protobuf::int32 value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.EOF)
}

// optional string source = 3;
void PBMsgEqtMD::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgEqtMD::source() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgEqtMD::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.source)
}
 void PBMsgEqtMD::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgEqtMD.source)
}
 void PBMsgEqtMD::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgEqtMD.source)
}
 ::std::string* PBMsgEqtMD::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgEqtMD.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgEqtMD::release_source() {
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgEqtMD::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgEqtMD.source)
}

// optional .PBWrapMsgMDA.DataType dataType = 4;
void PBMsgEqtMD::clear_datatype() {
  datatype_ = 0;
}
 ::PBWrapMsgMDA::DataType PBMsgEqtMD::datatype() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.dataType)
  return static_cast< ::PBWrapMsgMDA::DataType >(datatype_);
}
 void PBMsgEqtMD::set_datatype(::PBWrapMsgMDA::DataType value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.dataType)
}

// optional string symbol = 5;
void PBMsgEqtMD::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgEqtMD::symbol() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgEqtMD::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.symbol)
}
 void PBMsgEqtMD::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgEqtMD.symbol)
}
 void PBMsgEqtMD::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgEqtMD.symbol)
}
 ::std::string* PBMsgEqtMD::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgEqtMD.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgEqtMD::release_symbol() {
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgEqtMD::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgEqtMD.symbol)
}

// optional string timeStamp = 6;
void PBMsgEqtMD::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgEqtMD::timestamp() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.timeStamp)
  return timestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgEqtMD::set_timestamp(const ::std::string& value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.timeStamp)
}
 void PBMsgEqtMD::set_timestamp(const char* value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgEqtMD.timeStamp)
}
 void PBMsgEqtMD::set_timestamp(const char* value, size_t size) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgEqtMD.timeStamp)
}
 ::std::string* PBMsgEqtMD::mutable_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgEqtMD.timeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgEqtMD::release_timestamp() {
  
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgEqtMD::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    
  } else {
    
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgEqtMD.timeStamp)
}

// optional int64 preCloseValue = 7;
void PBMsgEqtMD::clear_preclosevalue() {
  preclosevalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::preclosevalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.preCloseValue)
  return preclosevalue_;
}
 void PBMsgEqtMD::set_preclosevalue(::google::protobuf::int64 value) {
  
  preclosevalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.preCloseValue)
}

// optional int64 openValue = 8;
void PBMsgEqtMD::clear_openvalue() {
  openvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::openvalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.openValue)
  return openvalue_;
}
 void PBMsgEqtMD::set_openvalue(::google::protobuf::int64 value) {
  
  openvalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.openValue)
}

// optional int64 highValue = 11;
void PBMsgEqtMD::clear_highvalue() {
  highvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::highvalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.highValue)
  return highvalue_;
}
 void PBMsgEqtMD::set_highvalue(::google::protobuf::int64 value) {
  
  highvalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.highValue)
}

// optional int64 lowValue = 12;
void PBMsgEqtMD::clear_lowvalue() {
  lowvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::lowvalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.lowValue)
  return lowvalue_;
}
 void PBMsgEqtMD::set_lowvalue(::google::protobuf::int64 value) {
  
  lowvalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.lowValue)
}

// optional int64 latestIndex = 13;
void PBMsgEqtMD::clear_latestindex() {
  latestindex_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::latestindex() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.latestIndex)
  return latestindex_;
}
 void PBMsgEqtMD::set_latestindex(::google::protobuf::int64 value) {
  
  latestindex_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.latestIndex)
}

// optional int64 matchPrice = 14;
void PBMsgEqtMD::clear_matchprice() {
  matchprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::matchprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.matchPrice)
  return matchprice_;
}
 void PBMsgEqtMD::set_matchprice(::google::protobuf::int64 value) {
  
  matchprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.matchPrice)
}

// optional int64 askPrice5 = 15;
void PBMsgEqtMD::clear_askprice5() {
  askprice5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::askprice5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askPrice5)
  return askprice5_;
}
 void PBMsgEqtMD::set_askprice5(::google::protobuf::int64 value) {
  
  askprice5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askPrice5)
}

// optional int64 askPrice4 = 17;
void PBMsgEqtMD::clear_askprice4() {
  askprice4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::askprice4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askPrice4)
  return askprice4_;
}
 void PBMsgEqtMD::set_askprice4(::google::protobuf::int64 value) {
  
  askprice4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askPrice4)
}

// optional int64 askPrice3 = 19;
void PBMsgEqtMD::clear_askprice3() {
  askprice3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::askprice3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askPrice3)
  return askprice3_;
}
 void PBMsgEqtMD::set_askprice3(::google::protobuf::int64 value) {
  
  askprice3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askPrice3)
}

// optional int64 askPrice2 = 21;
void PBMsgEqtMD::clear_askprice2() {
  askprice2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::askprice2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askPrice2)
  return askprice2_;
}
 void PBMsgEqtMD::set_askprice2(::google::protobuf::int64 value) {
  
  askprice2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askPrice2)
}

// optional int64 askPrice1 = 23;
void PBMsgEqtMD::clear_askprice1() {
  askprice1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::askprice1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askPrice1)
  return askprice1_;
}
 void PBMsgEqtMD::set_askprice1(::google::protobuf::int64 value) {
  
  askprice1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askPrice1)
}

// optional int64 bidPrice1 = 25;
void PBMsgEqtMD::clear_bidprice1() {
  bidprice1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidprice1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidPrice1)
  return bidprice1_;
}
 void PBMsgEqtMD::set_bidprice1(::google::protobuf::int64 value) {
  
  bidprice1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidPrice1)
}

// optional int64 bidPrice2 = 27;
void PBMsgEqtMD::clear_bidprice2() {
  bidprice2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidprice2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidPrice2)
  return bidprice2_;
}
 void PBMsgEqtMD::set_bidprice2(::google::protobuf::int64 value) {
  
  bidprice2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidPrice2)
}

// optional int64 bidPrice3 = 29;
void PBMsgEqtMD::clear_bidprice3() {
  bidprice3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidprice3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidPrice3)
  return bidprice3_;
}
 void PBMsgEqtMD::set_bidprice3(::google::protobuf::int64 value) {
  
  bidprice3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidPrice3)
}

// optional int64 bidPrice4 = 31;
void PBMsgEqtMD::clear_bidprice4() {
  bidprice4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidprice4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidPrice4)
  return bidprice4_;
}
 void PBMsgEqtMD::set_bidprice4(::google::protobuf::int64 value) {
  
  bidprice4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidPrice4)
}

// optional int64 bidPrice5 = 33;
void PBMsgEqtMD::clear_bidprice5() {
  bidprice5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidprice5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidPrice5)
  return bidprice5_;
}
 void PBMsgEqtMD::set_bidprice5(::google::protobuf::int64 value) {
  
  bidprice5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidPrice5)
}

// optional int64 turnover = 9;
void PBMsgEqtMD::clear_turnover() {
  turnover_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::turnover() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.turnover)
  return turnover_;
}
 void PBMsgEqtMD::set_turnover(::google::protobuf::int64 value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.turnover)
}

// optional int64 volume = 10;
void PBMsgEqtMD::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::volume() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.volume)
  return volume_;
}
 void PBMsgEqtMD::set_volume(::google::protobuf::int64 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.volume)
}

// optional int64 askSize5 = 16;
void PBMsgEqtMD::clear_asksize5() {
  asksize5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::asksize5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askSize5)
  return asksize5_;
}
 void PBMsgEqtMD::set_asksize5(::google::protobuf::int64 value) {
  
  asksize5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askSize5)
}

// optional int64 askSize4 = 18;
void PBMsgEqtMD::clear_asksize4() {
  asksize4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::asksize4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askSize4)
  return asksize4_;
}
 void PBMsgEqtMD::set_asksize4(::google::protobuf::int64 value) {
  
  asksize4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askSize4)
}

// optional int64 askSize3 = 20;
void PBMsgEqtMD::clear_asksize3() {
  asksize3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::asksize3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askSize3)
  return asksize3_;
}
 void PBMsgEqtMD::set_asksize3(::google::protobuf::int64 value) {
  
  asksize3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askSize3)
}

// optional int64 askSize2 = 22;
void PBMsgEqtMD::clear_asksize2() {
  asksize2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::asksize2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askSize2)
  return asksize2_;
}
 void PBMsgEqtMD::set_asksize2(::google::protobuf::int64 value) {
  
  asksize2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askSize2)
}

// optional int64 askSize1 = 24;
void PBMsgEqtMD::clear_asksize1() {
  asksize1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::asksize1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.askSize1)
  return asksize1_;
}
 void PBMsgEqtMD::set_asksize1(::google::protobuf::int64 value) {
  
  asksize1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.askSize1)
}

// optional int64 bidSize1 = 26;
void PBMsgEqtMD::clear_bidsize1() {
  bidsize1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidsize1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidSize1)
  return bidsize1_;
}
 void PBMsgEqtMD::set_bidsize1(::google::protobuf::int64 value) {
  
  bidsize1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidSize1)
}

// optional int64 bidSize2 = 28;
void PBMsgEqtMD::clear_bidsize2() {
  bidsize2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidsize2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidSize2)
  return bidsize2_;
}
 void PBMsgEqtMD::set_bidsize2(::google::protobuf::int64 value) {
  
  bidsize2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidSize2)
}

// optional int64 bidSize3 = 30;
void PBMsgEqtMD::clear_bidsize3() {
  bidsize3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidsize3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidSize3)
  return bidsize3_;
}
 void PBMsgEqtMD::set_bidsize3(::google::protobuf::int64 value) {
  
  bidsize3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidSize3)
}

// optional int64 bidSize4 = 32;
void PBMsgEqtMD::clear_bidsize4() {
  bidsize4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidsize4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidSize4)
  return bidsize4_;
}
 void PBMsgEqtMD::set_bidsize4(::google::protobuf::int64 value) {
  
  bidsize4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidSize4)
}

// optional int64 bidSize5 = 34;
void PBMsgEqtMD::clear_bidsize5() {
  bidsize5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgEqtMD::bidsize5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgEqtMD.bidSize5)
  return bidsize5_;
}
 void PBMsgEqtMD::set_bidsize5(::google::protobuf::int64 value) {
  
  bidsize5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgEqtMD.bidSize5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMsgFutMD::kEOFFieldNumber;
const int PBMsgFutMD::kSymbolFieldNumber;
const int PBMsgFutMD::kTimeStampFieldNumber;
const int PBMsgFutMD::kAskPrice1FieldNumber;
const int PBMsgFutMD::kBidPrice1FieldNumber;
const int PBMsgFutMD::kPreClosePriceFieldNumber;
const int PBMsgFutMD::kPreSettlePriceFieldNumber;
const int PBMsgFutMD::kOpenPriceFieldNumber;
const int PBMsgFutMD::kHighPriceFieldNumber;
const int PBMsgFutMD::kLowPriceFieldNumber;
const int PBMsgFutMD::kMatchPriceFieldNumber;
const int PBMsgFutMD::kPriceChangeFieldNumber;
const int PBMsgFutMD::kSettlePriceFieldNumber;
const int PBMsgFutMD::kHighLimitFieldNumber;
const int PBMsgFutMD::kLowLimitFieldNumber;
const int PBMsgFutMD::kAskSize1FieldNumber;
const int PBMsgFutMD::kBidSize1FieldNumber;
const int PBMsgFutMD::kVolumeFieldNumber;
const int PBMsgFutMD::kTurnoverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMsgFutMD::PBMsgFutMD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBWrapMsgMDA.PBMsgFutMD)
}

void PBMsgFutMD::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBMsgFutMD::PBMsgFutMD(const PBMsgFutMD& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBWrapMsgMDA.PBMsgFutMD)
}

void PBMsgFutMD::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eof_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askprice1_ = GOOGLE_LONGLONG(0);
  bidprice1_ = GOOGLE_LONGLONG(0);
  precloseprice_ = GOOGLE_LONGLONG(0);
  presettleprice_ = GOOGLE_LONGLONG(0);
  openprice_ = GOOGLE_LONGLONG(0);
  highprice_ = GOOGLE_LONGLONG(0);
  lowprice_ = GOOGLE_LONGLONG(0);
  matchprice_ = GOOGLE_LONGLONG(0);
  pricechange_ = GOOGLE_LONGLONG(0);
  settleprice_ = GOOGLE_LONGLONG(0);
  highlimit_ = GOOGLE_LONGLONG(0);
  lowlimit_ = GOOGLE_LONGLONG(0);
  asksize1_ = GOOGLE_LONGLONG(0);
  bidsize1_ = GOOGLE_LONGLONG(0);
  volume_ = GOOGLE_LONGLONG(0);
  turnover_ = GOOGLE_LONGLONG(0);
}

PBMsgFutMD::~PBMsgFutMD() {
  // @@protoc_insertion_point(destructor:PBWrapMsgMDA.PBMsgFutMD)
  SharedDtor();
}

void PBMsgFutMD::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBMsgFutMD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgFutMD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgFutMD_descriptor_;
}

const PBMsgFutMD& PBMsgFutMD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgMDA_2eproto();
  return *default_instance_;
}

PBMsgFutMD* PBMsgFutMD::default_instance_ = NULL;

PBMsgFutMD* PBMsgFutMD::New(::google::protobuf::Arena* arena) const {
  PBMsgFutMD* n = new PBMsgFutMD;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMsgFutMD::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBMsgFutMD*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(askprice1_, openprice_);
  eof_ = 0;
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(highprice_, asksize1_);
  ZR_(bidsize1_, turnover_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBMsgFutMD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBWrapMsgMDA.PBMsgFutMD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 EOF = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eof_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_symbol;
        break;
      }

      // optional string symbol = 5;
      case 5: {
        if (tag == 42) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgFutMD.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_timeStamp;
        break;
      }

      // optional string timeStamp = 6;
      case 6: {
        if (tag == 50) {
         parse_timeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgFutMD.timeStamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_askPrice1;
        break;
      }

      // optional int64 askPrice1 = 7;
      case 7: {
        if (tag == 56) {
         parse_askPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_askSize1;
        break;
      }

      // optional int64 askSize1 = 8;
      case 8: {
        if (tag == 64) {
         parse_askSize1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_bidPrice1;
        break;
      }

      // optional int64 bidPrice1 = 9;
      case 9: {
        if (tag == 72) {
         parse_bidPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_bidSize1;
        break;
      }

      // optional int64 bidSize1 = 10;
      case 10: {
        if (tag == 80) {
         parse_bidSize1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_preClosePrice;
        break;
      }

      // optional int64 preClosePrice = 11;
      case 11: {
        if (tag == 88) {
         parse_preClosePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &precloseprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_preSettlePrice;
        break;
      }

      // optional int64 preSettlePrice = 12;
      case 12: {
        if (tag == 96) {
         parse_preSettlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &presettleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_openPrice;
        break;
      }

      // optional int64 openPrice = 13;
      case 13: {
        if (tag == 104) {
         parse_openPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &openprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_highPrice;
        break;
      }

      // optional int64 highPrice = 14;
      case 14: {
        if (tag == 112) {
         parse_highPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_lowPrice;
        break;
      }

      // optional int64 lowPrice = 15;
      case 15: {
        if (tag == 120) {
         parse_lowPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_matchPrice;
        break;
      }

      // optional int64 matchPrice = 16;
      case 16: {
        if (tag == 128) {
         parse_matchPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &matchprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_priceChange;
        break;
      }

      // optional int64 priceChange = 17;
      case 17: {
        if (tag == 136) {
         parse_priceChange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pricechange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_volume;
        break;
      }

      // optional int64 volume = 18;
      case 18: {
        if (tag == 144) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_turnover;
        break;
      }

      // optional int64 turnover = 19;
      case 19: {
        if (tag == 152) {
         parse_turnover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &turnover_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_settlePrice;
        break;
      }

      // optional int64 settlePrice = 20;
      case 20: {
        if (tag == 160) {
         parse_settlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &settleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_highLimit;
        break;
      }

      // optional int64 highLimit = 21;
      case 21: {
        if (tag == 168) {
         parse_highLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_lowLimit;
        break;
      }

      // optional int64 lowLimit = 22;
      case 22: {
        if (tag == 176) {
         parse_lowLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBWrapMsgMDA.PBMsgFutMD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBWrapMsgMDA.PBMsgFutMD)
  return false;
#undef DO_
}

void PBMsgFutMD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBWrapMsgMDA.PBMsgFutMD)
  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eof(), output);
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgFutMD.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->symbol(), output);
  }

  // optional string timeStamp = 6;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgFutMD.timeStamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->timestamp(), output);
  }

  // optional int64 askPrice1 = 7;
  if (this->askprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->askprice1(), output);
  }

  // optional int64 askSize1 = 8;
  if (this->asksize1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->asksize1(), output);
  }

  // optional int64 bidPrice1 = 9;
  if (this->bidprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->bidprice1(), output);
  }

  // optional int64 bidSize1 = 10;
  if (this->bidsize1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->bidsize1(), output);
  }

  // optional int64 preClosePrice = 11;
  if (this->precloseprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->precloseprice(), output);
  }

  // optional int64 preSettlePrice = 12;
  if (this->presettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->presettleprice(), output);
  }

  // optional int64 openPrice = 13;
  if (this->openprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->openprice(), output);
  }

  // optional int64 highPrice = 14;
  if (this->highprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->highprice(), output);
  }

  // optional int64 lowPrice = 15;
  if (this->lowprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->lowprice(), output);
  }

  // optional int64 matchPrice = 16;
  if (this->matchprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->matchprice(), output);
  }

  // optional int64 priceChange = 17;
  if (this->pricechange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->pricechange(), output);
  }

  // optional int64 volume = 18;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->volume(), output);
  }

  // optional int64 turnover = 19;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->turnover(), output);
  }

  // optional int64 settlePrice = 20;
  if (this->settleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->settleprice(), output);
  }

  // optional int64 highLimit = 21;
  if (this->highlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->highlimit(), output);
  }

  // optional int64 lowLimit = 22;
  if (this->lowlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->lowlimit(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBWrapMsgMDA.PBMsgFutMD)
}

::google::protobuf::uint8* PBMsgFutMD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWrapMsgMDA.PBMsgFutMD)
  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eof(), target);
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgFutMD.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->symbol(), target);
  }

  // optional string timeStamp = 6;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgFutMD.timeStamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->timestamp(), target);
  }

  // optional int64 askPrice1 = 7;
  if (this->askprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->askprice1(), target);
  }

  // optional int64 askSize1 = 8;
  if (this->asksize1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->asksize1(), target);
  }

  // optional int64 bidPrice1 = 9;
  if (this->bidprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->bidprice1(), target);
  }

  // optional int64 bidSize1 = 10;
  if (this->bidsize1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->bidsize1(), target);
  }

  // optional int64 preClosePrice = 11;
  if (this->precloseprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->precloseprice(), target);
  }

  // optional int64 preSettlePrice = 12;
  if (this->presettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->presettleprice(), target);
  }

  // optional int64 openPrice = 13;
  if (this->openprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->openprice(), target);
  }

  // optional int64 highPrice = 14;
  if (this->highprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->highprice(), target);
  }

  // optional int64 lowPrice = 15;
  if (this->lowprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->lowprice(), target);
  }

  // optional int64 matchPrice = 16;
  if (this->matchprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->matchprice(), target);
  }

  // optional int64 priceChange = 17;
  if (this->pricechange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->pricechange(), target);
  }

  // optional int64 volume = 18;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->volume(), target);
  }

  // optional int64 turnover = 19;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->turnover(), target);
  }

  // optional int64 settlePrice = 20;
  if (this->settleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->settleprice(), target);
  }

  // optional int64 highLimit = 21;
  if (this->highlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->highlimit(), target);
  }

  // optional int64 lowLimit = 22;
  if (this->lowlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->lowlimit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBWrapMsgMDA.PBMsgFutMD)
  return target;
}

int PBMsgFutMD::ByteSize() const {
  int total_size = 0;

  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eof());
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string timeStamp = 6;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // optional int64 askPrice1 = 7;
  if (this->askprice1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice1());
  }

  // optional int64 bidPrice1 = 9;
  if (this->bidprice1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice1());
  }

  // optional int64 preClosePrice = 11;
  if (this->precloseprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->precloseprice());
  }

  // optional int64 preSettlePrice = 12;
  if (this->presettleprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->presettleprice());
  }

  // optional int64 openPrice = 13;
  if (this->openprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->openprice());
  }

  // optional int64 highPrice = 14;
  if (this->highprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highprice());
  }

  // optional int64 lowPrice = 15;
  if (this->lowprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowprice());
  }

  // optional int64 matchPrice = 16;
  if (this->matchprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->matchprice());
  }

  // optional int64 priceChange = 17;
  if (this->pricechange() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pricechange());
  }

  // optional int64 settlePrice = 20;
  if (this->settleprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->settleprice());
  }

  // optional int64 highLimit = 21;
  if (this->highlimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highlimit());
  }

  // optional int64 lowLimit = 22;
  if (this->lowlimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowlimit());
  }

  // optional int64 askSize1 = 8;
  if (this->asksize1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize1());
  }

  // optional int64 bidSize1 = 10;
  if (this->bidsize1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize1());
  }

  // optional int64 volume = 18;
  if (this->volume() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  // optional int64 turnover = 19;
  if (this->turnover() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->turnover());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgFutMD::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMsgFutMD* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMsgFutMD>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgFutMD::MergeFrom(const PBMsgFutMD& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.askprice1() != 0) {
    set_askprice1(from.askprice1());
  }
  if (from.bidprice1() != 0) {
    set_bidprice1(from.bidprice1());
  }
  if (from.precloseprice() != 0) {
    set_precloseprice(from.precloseprice());
  }
  if (from.presettleprice() != 0) {
    set_presettleprice(from.presettleprice());
  }
  if (from.openprice() != 0) {
    set_openprice(from.openprice());
  }
  if (from.highprice() != 0) {
    set_highprice(from.highprice());
  }
  if (from.lowprice() != 0) {
    set_lowprice(from.lowprice());
  }
  if (from.matchprice() != 0) {
    set_matchprice(from.matchprice());
  }
  if (from.pricechange() != 0) {
    set_pricechange(from.pricechange());
  }
  if (from.settleprice() != 0) {
    set_settleprice(from.settleprice());
  }
  if (from.highlimit() != 0) {
    set_highlimit(from.highlimit());
  }
  if (from.lowlimit() != 0) {
    set_lowlimit(from.lowlimit());
  }
  if (from.asksize1() != 0) {
    set_asksize1(from.asksize1());
  }
  if (from.bidsize1() != 0) {
    set_bidsize1(from.bidsize1());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
}

void PBMsgFutMD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgFutMD::CopyFrom(const PBMsgFutMD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgFutMD::IsInitialized() const {

  return true;
}

void PBMsgFutMD::Swap(PBMsgFutMD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMsgFutMD::InternalSwap(PBMsgFutMD* other) {
  std::swap(eof_, other->eof_);
  symbol_.Swap(&other->symbol_);
  timestamp_.Swap(&other->timestamp_);
  std::swap(askprice1_, other->askprice1_);
  std::swap(bidprice1_, other->bidprice1_);
  std::swap(precloseprice_, other->precloseprice_);
  std::swap(presettleprice_, other->presettleprice_);
  std::swap(openprice_, other->openprice_);
  std::swap(highprice_, other->highprice_);
  std::swap(lowprice_, other->lowprice_);
  std::swap(matchprice_, other->matchprice_);
  std::swap(pricechange_, other->pricechange_);
  std::swap(settleprice_, other->settleprice_);
  std::swap(highlimit_, other->highlimit_);
  std::swap(lowlimit_, other->lowlimit_);
  std::swap(asksize1_, other->asksize1_);
  std::swap(bidsize1_, other->bidsize1_);
  std::swap(volume_, other->volume_);
  std::swap(turnover_, other->turnover_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMsgFutMD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgFutMD_descriptor_;
  metadata.reflection = PBMsgFutMD_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMsgFutMD

// optional int32 EOF = 1;
void PBMsgFutMD::clear_eof() {
  eof_ = 0;
}
 ::google::protobuf::int32 PBMsgFutMD::eof() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.EOF)
  return eof_;
}
 void PBMsgFutMD::set_eof(::google::protobuf::int32 value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.EOF)
}

// optional string symbol = 5;
void PBMsgFutMD::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgFutMD::symbol() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgFutMD::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.symbol)
}
 void PBMsgFutMD::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgFutMD.symbol)
}
 void PBMsgFutMD::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgFutMD.symbol)
}
 ::std::string* PBMsgFutMD::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgFutMD.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgFutMD::release_symbol() {
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgFutMD::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgFutMD.symbol)
}

// optional string timeStamp = 6;
void PBMsgFutMD::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgFutMD::timestamp() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.timeStamp)
  return timestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgFutMD::set_timestamp(const ::std::string& value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.timeStamp)
}
 void PBMsgFutMD::set_timestamp(const char* value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgFutMD.timeStamp)
}
 void PBMsgFutMD::set_timestamp(const char* value, size_t size) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgFutMD.timeStamp)
}
 ::std::string* PBMsgFutMD::mutable_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgFutMD.timeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgFutMD::release_timestamp() {
  
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgFutMD::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    
  } else {
    
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgFutMD.timeStamp)
}

// optional int64 askPrice1 = 7;
void PBMsgFutMD::clear_askprice1() {
  askprice1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::askprice1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.askPrice1)
  return askprice1_;
}
 void PBMsgFutMD::set_askprice1(::google::protobuf::int64 value) {
  
  askprice1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.askPrice1)
}

// optional int64 bidPrice1 = 9;
void PBMsgFutMD::clear_bidprice1() {
  bidprice1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::bidprice1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.bidPrice1)
  return bidprice1_;
}
 void PBMsgFutMD::set_bidprice1(::google::protobuf::int64 value) {
  
  bidprice1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.bidPrice1)
}

// optional int64 preClosePrice = 11;
void PBMsgFutMD::clear_precloseprice() {
  precloseprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::precloseprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.preClosePrice)
  return precloseprice_;
}
 void PBMsgFutMD::set_precloseprice(::google::protobuf::int64 value) {
  
  precloseprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.preClosePrice)
}

// optional int64 preSettlePrice = 12;
void PBMsgFutMD::clear_presettleprice() {
  presettleprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::presettleprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.preSettlePrice)
  return presettleprice_;
}
 void PBMsgFutMD::set_presettleprice(::google::protobuf::int64 value) {
  
  presettleprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.preSettlePrice)
}

// optional int64 openPrice = 13;
void PBMsgFutMD::clear_openprice() {
  openprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::openprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.openPrice)
  return openprice_;
}
 void PBMsgFutMD::set_openprice(::google::protobuf::int64 value) {
  
  openprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.openPrice)
}

// optional int64 highPrice = 14;
void PBMsgFutMD::clear_highprice() {
  highprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::highprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.highPrice)
  return highprice_;
}
 void PBMsgFutMD::set_highprice(::google::protobuf::int64 value) {
  
  highprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.highPrice)
}

// optional int64 lowPrice = 15;
void PBMsgFutMD::clear_lowprice() {
  lowprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::lowprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.lowPrice)
  return lowprice_;
}
 void PBMsgFutMD::set_lowprice(::google::protobuf::int64 value) {
  
  lowprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.lowPrice)
}

// optional int64 matchPrice = 16;
void PBMsgFutMD::clear_matchprice() {
  matchprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::matchprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.matchPrice)
  return matchprice_;
}
 void PBMsgFutMD::set_matchprice(::google::protobuf::int64 value) {
  
  matchprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.matchPrice)
}

// optional int64 priceChange = 17;
void PBMsgFutMD::clear_pricechange() {
  pricechange_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::pricechange() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.priceChange)
  return pricechange_;
}
 void PBMsgFutMD::set_pricechange(::google::protobuf::int64 value) {
  
  pricechange_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.priceChange)
}

// optional int64 settlePrice = 20;
void PBMsgFutMD::clear_settleprice() {
  settleprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::settleprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.settlePrice)
  return settleprice_;
}
 void PBMsgFutMD::set_settleprice(::google::protobuf::int64 value) {
  
  settleprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.settlePrice)
}

// optional int64 highLimit = 21;
void PBMsgFutMD::clear_highlimit() {
  highlimit_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::highlimit() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.highLimit)
  return highlimit_;
}
 void PBMsgFutMD::set_highlimit(::google::protobuf::int64 value) {
  
  highlimit_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.highLimit)
}

// optional int64 lowLimit = 22;
void PBMsgFutMD::clear_lowlimit() {
  lowlimit_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::lowlimit() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.lowLimit)
  return lowlimit_;
}
 void PBMsgFutMD::set_lowlimit(::google::protobuf::int64 value) {
  
  lowlimit_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.lowLimit)
}

// optional int64 askSize1 = 8;
void PBMsgFutMD::clear_asksize1() {
  asksize1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::asksize1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.askSize1)
  return asksize1_;
}
 void PBMsgFutMD::set_asksize1(::google::protobuf::int64 value) {
  
  asksize1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.askSize1)
}

// optional int64 bidSize1 = 10;
void PBMsgFutMD::clear_bidsize1() {
  bidsize1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::bidsize1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.bidSize1)
  return bidsize1_;
}
 void PBMsgFutMD::set_bidsize1(::google::protobuf::int64 value) {
  
  bidsize1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.bidSize1)
}

// optional int64 volume = 18;
void PBMsgFutMD::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::volume() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.volume)
  return volume_;
}
 void PBMsgFutMD::set_volume(::google::protobuf::int64 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.volume)
}

// optional int64 turnover = 19;
void PBMsgFutMD::clear_turnover() {
  turnover_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgFutMD::turnover() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgFutMD.turnover)
  return turnover_;
}
 void PBMsgFutMD::set_turnover(::google::protobuf::int64 value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgFutMD.turnover)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMsgMDAMD::kEOFFieldNumber;
const int PBMsgMDAMD::kRequestSymbolListFieldNumber;
const int PBMsgMDAMD::kDataTypeFieldNumber;
const int PBMsgMDAMD::kSymbolFieldNumber;
const int PBMsgMDAMD::kTimeStampFieldNumber;
const int PBMsgMDAMD::kPreCloseValueFieldNumber;
const int PBMsgMDAMD::kOpenValueFieldNumber;
const int PBMsgMDAMD::kTurnoverFieldNumber;
const int PBMsgMDAMD::kVolumeFieldNumber;
const int PBMsgMDAMD::kHighValueFieldNumber;
const int PBMsgMDAMD::kLowValueFieldNumber;
const int PBMsgMDAMD::kLatestIndexFieldNumber;
const int PBMsgMDAMD::kMatchPriceFieldNumber;
const int PBMsgMDAMD::kAskPrice5FieldNumber;
const int PBMsgMDAMD::kAskSize5FieldNumber;
const int PBMsgMDAMD::kAskPrice4FieldNumber;
const int PBMsgMDAMD::kAskSize4FieldNumber;
const int PBMsgMDAMD::kAskPrice3FieldNumber;
const int PBMsgMDAMD::kAskSize3FieldNumber;
const int PBMsgMDAMD::kAskPrice2FieldNumber;
const int PBMsgMDAMD::kAskSize2FieldNumber;
const int PBMsgMDAMD::kAskPrice1FieldNumber;
const int PBMsgMDAMD::kAskSize1FieldNumber;
const int PBMsgMDAMD::kBidPrice1FieldNumber;
const int PBMsgMDAMD::kBidSize1FieldNumber;
const int PBMsgMDAMD::kBidPrice2FieldNumber;
const int PBMsgMDAMD::kBidSize2FieldNumber;
const int PBMsgMDAMD::kBidPrice3FieldNumber;
const int PBMsgMDAMD::kBidSize3FieldNumber;
const int PBMsgMDAMD::kBidPrice4FieldNumber;
const int PBMsgMDAMD::kBidSize4FieldNumber;
const int PBMsgMDAMD::kBidPrice5FieldNumber;
const int PBMsgMDAMD::kBidSize5FieldNumber;
const int PBMsgMDAMD::kPreSettlePriceFieldNumber;
const int PBMsgMDAMD::kPriceChangeFieldNumber;
const int PBMsgMDAMD::kSettlePriceFieldNumber;
const int PBMsgMDAMD::kHighLimitFieldNumber;
const int PBMsgMDAMD::kLowLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMsgMDAMD::PBMsgMDAMD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBWrapMsgMDA.PBMsgMDAMD)
}

void PBMsgMDAMD::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBMsgMDAMD::PBMsgMDAMD(const PBMsgMDAMD& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBWrapMsgMDA.PBMsgMDAMD)
}

void PBMsgMDAMD::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eof_ = 0;
  datatype_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preclosevalue_ = GOOGLE_LONGLONG(0);
  openvalue_ = GOOGLE_LONGLONG(0);
  turnover_ = GOOGLE_LONGLONG(0);
  volume_ = GOOGLE_LONGLONG(0);
  highvalue_ = GOOGLE_LONGLONG(0);
  lowvalue_ = GOOGLE_LONGLONG(0);
  latestindex_ = GOOGLE_LONGLONG(0);
  matchprice_ = GOOGLE_LONGLONG(0);
  askprice5_ = GOOGLE_LONGLONG(0);
  asksize5_ = GOOGLE_LONGLONG(0);
  askprice4_ = GOOGLE_LONGLONG(0);
  asksize4_ = GOOGLE_LONGLONG(0);
  askprice3_ = GOOGLE_LONGLONG(0);
  asksize3_ = GOOGLE_LONGLONG(0);
  askprice2_ = GOOGLE_LONGLONG(0);
  asksize2_ = GOOGLE_LONGLONG(0);
  askprice1_ = GOOGLE_LONGLONG(0);
  asksize1_ = GOOGLE_LONGLONG(0);
  bidprice1_ = GOOGLE_LONGLONG(0);
  bidsize1_ = GOOGLE_LONGLONG(0);
  bidprice2_ = GOOGLE_LONGLONG(0);
  bidsize2_ = GOOGLE_LONGLONG(0);
  bidprice3_ = GOOGLE_LONGLONG(0);
  bidsize3_ = GOOGLE_LONGLONG(0);
  bidprice4_ = GOOGLE_LONGLONG(0);
  bidsize4_ = GOOGLE_LONGLONG(0);
  bidprice5_ = GOOGLE_LONGLONG(0);
  bidsize5_ = GOOGLE_LONGLONG(0);
  presettleprice_ = GOOGLE_LONGLONG(0);
  pricechange_ = GOOGLE_LONGLONG(0);
  settleprice_ = GOOGLE_LONGLONG(0);
  highlimit_ = GOOGLE_LONGLONG(0);
  lowlimit_ = GOOGLE_LONGLONG(0);
}

PBMsgMDAMD::~PBMsgMDAMD() {
  // @@protoc_insertion_point(destructor:PBWrapMsgMDA.PBMsgMDAMD)
  SharedDtor();
}

void PBMsgMDAMD::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBMsgMDAMD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMsgMDAMD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMsgMDAMD_descriptor_;
}

const PBMsgMDAMD& PBMsgMDAMD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PBMsgMDA_2eproto();
  return *default_instance_;
}

PBMsgMDAMD* PBMsgMDAMD::default_instance_ = NULL;

PBMsgMDAMD* PBMsgMDAMD::New(::google::protobuf::Arena* arena) const {
  PBMsgMDAMD* n = new PBMsgMDAMD;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMsgMDAMD::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBMsgMDAMD*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(eof_, datatype_);
  ZR_(preclosevalue_, turnover_);
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(volume_, askprice4_);
  ZR_(asksize4_, bidprice1_);
  ZR_(bidsize1_, bidprice5_);
  ZR_(bidsize5_, lowlimit_);

#undef ZR_HELPER_
#undef ZR_

  requestsymbollist_.Clear();
}

bool PBMsgMDAMD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBWrapMsgMDA.PBMsgMDAMD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 EOF = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eof_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_requestSymbolList;
        break;
      }

      // repeated string requestSymbolList = 5;
      case 5: {
        if (tag == 42) {
         parse_requestSymbolList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_requestsymbollist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requestsymbollist(this->requestsymbollist_size() - 1).data(),
            this->requestsymbollist(this->requestsymbollist_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_requestSymbolList;
        if (input->ExpectTag(48)) goto parse_dataType;
        break;
      }

      // optional .PBWrapMsgMDA.DataType dataType = 6;
      case 6: {
        if (tag == 48) {
         parse_dataType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datatype(static_cast< ::PBWrapMsgMDA::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_symbol;
        break;
      }

      // optional string symbol = 7;
      case 7: {
        if (tag == 58) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgMDAMD.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_timeStamp;
        break;
      }

      // optional string timeStamp = 8;
      case 8: {
        if (tag == 66) {
         parse_timeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBWrapMsgMDA.PBMsgMDAMD.timeStamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_preCloseValue;
        break;
      }

      // optional int64 preCloseValue = 9;
      case 9: {
        if (tag == 72) {
         parse_preCloseValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &preclosevalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_openValue;
        break;
      }

      // optional int64 openValue = 10;
      case 10: {
        if (tag == 80) {
         parse_openValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &openvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_turnover;
        break;
      }

      // optional int64 turnover = 11;
      case 11: {
        if (tag == 88) {
         parse_turnover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &turnover_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_volume;
        break;
      }

      // optional int64 volume = 12;
      case 12: {
        if (tag == 96) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_highValue;
        break;
      }

      // optional int64 highValue = 13;
      case 13: {
        if (tag == 104) {
         parse_highValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_lowValue;
        break;
      }

      // optional int64 lowValue = 14;
      case 14: {
        if (tag == 112) {
         parse_lowValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_latestIndex;
        break;
      }

      // optional int64 latestIndex = 15;
      case 15: {
        if (tag == 120) {
         parse_latestIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latestindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_matchPrice;
        break;
      }

      // optional int64 matchPrice = 16;
      case 16: {
        if (tag == 128) {
         parse_matchPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &matchprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_askPrice5;
        break;
      }

      // optional int64 askPrice5 = 17;
      case 17: {
        if (tag == 136) {
         parse_askPrice5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_askSize5;
        break;
      }

      // optional int64 askSize5 = 18;
      case 18: {
        if (tag == 144) {
         parse_askSize5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_askPrice4;
        break;
      }

      // optional int64 askPrice4 = 19;
      case 19: {
        if (tag == 152) {
         parse_askPrice4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_askSize4;
        break;
      }

      // optional int64 askSize4 = 20;
      case 20: {
        if (tag == 160) {
         parse_askSize4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_askPrice3;
        break;
      }

      // optional int64 askPrice3 = 21;
      case 21: {
        if (tag == 168) {
         parse_askPrice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_askSize3;
        break;
      }

      // optional int64 askSize3 = 22;
      case 22: {
        if (tag == 176) {
         parse_askSize3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_askPrice2;
        break;
      }

      // optional int64 askPrice2 = 23;
      case 23: {
        if (tag == 184) {
         parse_askPrice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_askSize2;
        break;
      }

      // optional int64 askSize2 = 24;
      case 24: {
        if (tag == 192) {
         parse_askSize2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_askPrice1;
        break;
      }

      // optional int64 askPrice1 = 25;
      case 25: {
        if (tag == 200) {
         parse_askPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &askprice1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_askSize1;
        break;
      }

      // optional int64 askSize1 = 26;
      case 26: {
        if (tag == 208) {
         parse_askSize1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &asksize1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_bidPrice1;
        break;
      }

      // optional int64 bidPrice1 = 27;
      case 27: {
        if (tag == 216) {
         parse_bidPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_bidSize1;
        break;
      }

      // optional int64 bidSize1 = 28;
      case 28: {
        if (tag == 224) {
         parse_bidSize1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_bidPrice2;
        break;
      }

      // optional int64 bidPrice2 = 29;
      case 29: {
        if (tag == 232) {
         parse_bidPrice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_bidSize2;
        break;
      }

      // optional int64 bidSize2 = 30;
      case 30: {
        if (tag == 240) {
         parse_bidSize2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_bidPrice3;
        break;
      }

      // optional int64 bidPrice3 = 31;
      case 31: {
        if (tag == 248) {
         parse_bidPrice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_bidSize3;
        break;
      }

      // optional int64 bidSize3 = 32;
      case 32: {
        if (tag == 256) {
         parse_bidSize3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_bidPrice4;
        break;
      }

      // optional int64 bidPrice4 = 33;
      case 33: {
        if (tag == 264) {
         parse_bidPrice4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_bidSize4;
        break;
      }

      // optional int64 bidSize4 = 34;
      case 34: {
        if (tag == 272) {
         parse_bidSize4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_bidPrice5;
        break;
      }

      // optional int64 bidPrice5 = 35;
      case 35: {
        if (tag == 280) {
         parse_bidPrice5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidprice5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_bidSize5;
        break;
      }

      // optional int64 bidSize5 = 36;
      case 36: {
        if (tag == 288) {
         parse_bidSize5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bidsize5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_preSettlePrice;
        break;
      }

      // optional int64 preSettlePrice = 37;
      case 37: {
        if (tag == 296) {
         parse_preSettlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &presettleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_priceChange;
        break;
      }

      // optional int64 priceChange = 38;
      case 38: {
        if (tag == 304) {
         parse_priceChange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pricechange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_settlePrice;
        break;
      }

      // optional int64 settlePrice = 39;
      case 39: {
        if (tag == 312) {
         parse_settlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &settleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_highLimit;
        break;
      }

      // optional int64 highLimit = 40;
      case 40: {
        if (tag == 320) {
         parse_highLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &highlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_lowLimit;
        break;
      }

      // optional int64 lowLimit = 41;
      case 41: {
        if (tag == 328) {
         parse_lowLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBWrapMsgMDA.PBMsgMDAMD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBWrapMsgMDA.PBMsgMDAMD)
  return false;
#undef DO_
}

void PBMsgMDAMD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBWrapMsgMDA.PBMsgMDAMD)
  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eof(), output);
  }

  // repeated string requestSymbolList = 5;
  for (int i = 0; i < this->requestsymbollist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestsymbollist(i).data(), this->requestsymbollist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->requestsymbollist(i), output);
  }

  // optional .PBWrapMsgMDA.DataType dataType = 6;
  if (this->datatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->datatype(), output);
  }

  // optional string symbol = 7;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgMDAMD.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->symbol(), output);
  }

  // optional string timeStamp = 8;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgMDAMD.timeStamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->timestamp(), output);
  }

  // optional int64 preCloseValue = 9;
  if (this->preclosevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->preclosevalue(), output);
  }

  // optional int64 openValue = 10;
  if (this->openvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->openvalue(), output);
  }

  // optional int64 turnover = 11;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->turnover(), output);
  }

  // optional int64 volume = 12;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->volume(), output);
  }

  // optional int64 highValue = 13;
  if (this->highvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->highvalue(), output);
  }

  // optional int64 lowValue = 14;
  if (this->lowvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->lowvalue(), output);
  }

  // optional int64 latestIndex = 15;
  if (this->latestindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->latestindex(), output);
  }

  // optional int64 matchPrice = 16;
  if (this->matchprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->matchprice(), output);
  }

  // optional int64 askPrice5 = 17;
  if (this->askprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->askprice5(), output);
  }

  // optional int64 askSize5 = 18;
  if (this->asksize5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->asksize5(), output);
  }

  // optional int64 askPrice4 = 19;
  if (this->askprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->askprice4(), output);
  }

  // optional int64 askSize4 = 20;
  if (this->asksize4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->asksize4(), output);
  }

  // optional int64 askPrice3 = 21;
  if (this->askprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->askprice3(), output);
  }

  // optional int64 askSize3 = 22;
  if (this->asksize3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->asksize3(), output);
  }

  // optional int64 askPrice2 = 23;
  if (this->askprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->askprice2(), output);
  }

  // optional int64 askSize2 = 24;
  if (this->asksize2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->asksize2(), output);
  }

  // optional int64 askPrice1 = 25;
  if (this->askprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->askprice1(), output);
  }

  // optional int64 askSize1 = 26;
  if (this->asksize1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->asksize1(), output);
  }

  // optional int64 bidPrice1 = 27;
  if (this->bidprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->bidprice1(), output);
  }

  // optional int64 bidSize1 = 28;
  if (this->bidsize1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->bidsize1(), output);
  }

  // optional int64 bidPrice2 = 29;
  if (this->bidprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(29, this->bidprice2(), output);
  }

  // optional int64 bidSize2 = 30;
  if (this->bidsize2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->bidsize2(), output);
  }

  // optional int64 bidPrice3 = 31;
  if (this->bidprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(31, this->bidprice3(), output);
  }

  // optional int64 bidSize3 = 32;
  if (this->bidsize3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(32, this->bidsize3(), output);
  }

  // optional int64 bidPrice4 = 33;
  if (this->bidprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(33, this->bidprice4(), output);
  }

  // optional int64 bidSize4 = 34;
  if (this->bidsize4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(34, this->bidsize4(), output);
  }

  // optional int64 bidPrice5 = 35;
  if (this->bidprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(35, this->bidprice5(), output);
  }

  // optional int64 bidSize5 = 36;
  if (this->bidsize5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(36, this->bidsize5(), output);
  }

  // optional int64 preSettlePrice = 37;
  if (this->presettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(37, this->presettleprice(), output);
  }

  // optional int64 priceChange = 38;
  if (this->pricechange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(38, this->pricechange(), output);
  }

  // optional int64 settlePrice = 39;
  if (this->settleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(39, this->settleprice(), output);
  }

  // optional int64 highLimit = 40;
  if (this->highlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(40, this->highlimit(), output);
  }

  // optional int64 lowLimit = 41;
  if (this->lowlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(41, this->lowlimit(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBWrapMsgMDA.PBMsgMDAMD)
}

::google::protobuf::uint8* PBMsgMDAMD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWrapMsgMDA.PBMsgMDAMD)
  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eof(), target);
  }

  // repeated string requestSymbolList = 5;
  for (int i = 0; i < this->requestsymbollist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestsymbollist(i).data(), this->requestsymbollist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->requestsymbollist(i), target);
  }

  // optional .PBWrapMsgMDA.DataType dataType = 6;
  if (this->datatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->datatype(), target);
  }

  // optional string symbol = 7;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgMDAMD.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->symbol(), target);
  }

  // optional string timeStamp = 8;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBWrapMsgMDA.PBMsgMDAMD.timeStamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->timestamp(), target);
  }

  // optional int64 preCloseValue = 9;
  if (this->preclosevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->preclosevalue(), target);
  }

  // optional int64 openValue = 10;
  if (this->openvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->openvalue(), target);
  }

  // optional int64 turnover = 11;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->turnover(), target);
  }

  // optional int64 volume = 12;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->volume(), target);
  }

  // optional int64 highValue = 13;
  if (this->highvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->highvalue(), target);
  }

  // optional int64 lowValue = 14;
  if (this->lowvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->lowvalue(), target);
  }

  // optional int64 latestIndex = 15;
  if (this->latestindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->latestindex(), target);
  }

  // optional int64 matchPrice = 16;
  if (this->matchprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->matchprice(), target);
  }

  // optional int64 askPrice5 = 17;
  if (this->askprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->askprice5(), target);
  }

  // optional int64 askSize5 = 18;
  if (this->asksize5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->asksize5(), target);
  }

  // optional int64 askPrice4 = 19;
  if (this->askprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->askprice4(), target);
  }

  // optional int64 askSize4 = 20;
  if (this->asksize4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->asksize4(), target);
  }

  // optional int64 askPrice3 = 21;
  if (this->askprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->askprice3(), target);
  }

  // optional int64 askSize3 = 22;
  if (this->asksize3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->asksize3(), target);
  }

  // optional int64 askPrice2 = 23;
  if (this->askprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->askprice2(), target);
  }

  // optional int64 askSize2 = 24;
  if (this->asksize2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->asksize2(), target);
  }

  // optional int64 askPrice1 = 25;
  if (this->askprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->askprice1(), target);
  }

  // optional int64 askSize1 = 26;
  if (this->asksize1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->asksize1(), target);
  }

  // optional int64 bidPrice1 = 27;
  if (this->bidprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->bidprice1(), target);
  }

  // optional int64 bidSize1 = 28;
  if (this->bidsize1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->bidsize1(), target);
  }

  // optional int64 bidPrice2 = 29;
  if (this->bidprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(29, this->bidprice2(), target);
  }

  // optional int64 bidSize2 = 30;
  if (this->bidsize2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->bidsize2(), target);
  }

  // optional int64 bidPrice3 = 31;
  if (this->bidprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(31, this->bidprice3(), target);
  }

  // optional int64 bidSize3 = 32;
  if (this->bidsize3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(32, this->bidsize3(), target);
  }

  // optional int64 bidPrice4 = 33;
  if (this->bidprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(33, this->bidprice4(), target);
  }

  // optional int64 bidSize4 = 34;
  if (this->bidsize4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(34, this->bidsize4(), target);
  }

  // optional int64 bidPrice5 = 35;
  if (this->bidprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(35, this->bidprice5(), target);
  }

  // optional int64 bidSize5 = 36;
  if (this->bidsize5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(36, this->bidsize5(), target);
  }

  // optional int64 preSettlePrice = 37;
  if (this->presettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(37, this->presettleprice(), target);
  }

  // optional int64 priceChange = 38;
  if (this->pricechange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(38, this->pricechange(), target);
  }

  // optional int64 settlePrice = 39;
  if (this->settleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(39, this->settleprice(), target);
  }

  // optional int64 highLimit = 40;
  if (this->highlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(40, this->highlimit(), target);
  }

  // optional int64 lowLimit = 41;
  if (this->lowlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(41, this->lowlimit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBWrapMsgMDA.PBMsgMDAMD)
  return target;
}

int PBMsgMDAMD::ByteSize() const {
  int total_size = 0;

  // optional int32 EOF = 1;
  if (this->eof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eof());
  }

  // optional .PBWrapMsgMDA.DataType dataType = 6;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datatype());
  }

  // optional string symbol = 7;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string timeStamp = 8;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // optional int64 preCloseValue = 9;
  if (this->preclosevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->preclosevalue());
  }

  // optional int64 openValue = 10;
  if (this->openvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->openvalue());
  }

  // optional int64 turnover = 11;
  if (this->turnover() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->turnover());
  }

  // optional int64 volume = 12;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  // optional int64 highValue = 13;
  if (this->highvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highvalue());
  }

  // optional int64 lowValue = 14;
  if (this->lowvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowvalue());
  }

  // optional int64 latestIndex = 15;
  if (this->latestindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latestindex());
  }

  // optional int64 matchPrice = 16;
  if (this->matchprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->matchprice());
  }

  // optional int64 askPrice5 = 17;
  if (this->askprice5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice5());
  }

  // optional int64 askSize5 = 18;
  if (this->asksize5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize5());
  }

  // optional int64 askPrice4 = 19;
  if (this->askprice4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice4());
  }

  // optional int64 askSize4 = 20;
  if (this->asksize4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize4());
  }

  // optional int64 askPrice3 = 21;
  if (this->askprice3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice3());
  }

  // optional int64 askSize3 = 22;
  if (this->asksize3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize3());
  }

  // optional int64 askPrice2 = 23;
  if (this->askprice2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice2());
  }

  // optional int64 askSize2 = 24;
  if (this->asksize2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize2());
  }

  // optional int64 askPrice1 = 25;
  if (this->askprice1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->askprice1());
  }

  // optional int64 askSize1 = 26;
  if (this->asksize1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->asksize1());
  }

  // optional int64 bidPrice1 = 27;
  if (this->bidprice1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice1());
  }

  // optional int64 bidSize1 = 28;
  if (this->bidsize1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize1());
  }

  // optional int64 bidPrice2 = 29;
  if (this->bidprice2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice2());
  }

  // optional int64 bidSize2 = 30;
  if (this->bidsize2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize2());
  }

  // optional int64 bidPrice3 = 31;
  if (this->bidprice3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice3());
  }

  // optional int64 bidSize3 = 32;
  if (this->bidsize3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize3());
  }

  // optional int64 bidPrice4 = 33;
  if (this->bidprice4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice4());
  }

  // optional int64 bidSize4 = 34;
  if (this->bidsize4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize4());
  }

  // optional int64 bidPrice5 = 35;
  if (this->bidprice5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidprice5());
  }

  // optional int64 bidSize5 = 36;
  if (this->bidsize5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bidsize5());
  }

  // optional int64 preSettlePrice = 37;
  if (this->presettleprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->presettleprice());
  }

  // optional int64 priceChange = 38;
  if (this->pricechange() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pricechange());
  }

  // optional int64 settlePrice = 39;
  if (this->settleprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->settleprice());
  }

  // optional int64 highLimit = 40;
  if (this->highlimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->highlimit());
  }

  // optional int64 lowLimit = 41;
  if (this->lowlimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lowlimit());
  }

  // repeated string requestSymbolList = 5;
  total_size += 1 * this->requestsymbollist_size();
  for (int i = 0; i < this->requestsymbollist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->requestsymbollist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMsgMDAMD::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMsgMDAMD* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMsgMDAMD>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMsgMDAMD::MergeFrom(const PBMsgMDAMD& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  requestsymbollist_.MergeFrom(from.requestsymbollist_);
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
  if (from.datatype() != 0) {
    set_datatype(from.datatype());
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.preclosevalue() != 0) {
    set_preclosevalue(from.preclosevalue());
  }
  if (from.openvalue() != 0) {
    set_openvalue(from.openvalue());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.highvalue() != 0) {
    set_highvalue(from.highvalue());
  }
  if (from.lowvalue() != 0) {
    set_lowvalue(from.lowvalue());
  }
  if (from.latestindex() != 0) {
    set_latestindex(from.latestindex());
  }
  if (from.matchprice() != 0) {
    set_matchprice(from.matchprice());
  }
  if (from.askprice5() != 0) {
    set_askprice5(from.askprice5());
  }
  if (from.asksize5() != 0) {
    set_asksize5(from.asksize5());
  }
  if (from.askprice4() != 0) {
    set_askprice4(from.askprice4());
  }
  if (from.asksize4() != 0) {
    set_asksize4(from.asksize4());
  }
  if (from.askprice3() != 0) {
    set_askprice3(from.askprice3());
  }
  if (from.asksize3() != 0) {
    set_asksize3(from.asksize3());
  }
  if (from.askprice2() != 0) {
    set_askprice2(from.askprice2());
  }
  if (from.asksize2() != 0) {
    set_asksize2(from.asksize2());
  }
  if (from.askprice1() != 0) {
    set_askprice1(from.askprice1());
  }
  if (from.asksize1() != 0) {
    set_asksize1(from.asksize1());
  }
  if (from.bidprice1() != 0) {
    set_bidprice1(from.bidprice1());
  }
  if (from.bidsize1() != 0) {
    set_bidsize1(from.bidsize1());
  }
  if (from.bidprice2() != 0) {
    set_bidprice2(from.bidprice2());
  }
  if (from.bidsize2() != 0) {
    set_bidsize2(from.bidsize2());
  }
  if (from.bidprice3() != 0) {
    set_bidprice3(from.bidprice3());
  }
  if (from.bidsize3() != 0) {
    set_bidsize3(from.bidsize3());
  }
  if (from.bidprice4() != 0) {
    set_bidprice4(from.bidprice4());
  }
  if (from.bidsize4() != 0) {
    set_bidsize4(from.bidsize4());
  }
  if (from.bidprice5() != 0) {
    set_bidprice5(from.bidprice5());
  }
  if (from.bidsize5() != 0) {
    set_bidsize5(from.bidsize5());
  }
  if (from.presettleprice() != 0) {
    set_presettleprice(from.presettleprice());
  }
  if (from.pricechange() != 0) {
    set_pricechange(from.pricechange());
  }
  if (from.settleprice() != 0) {
    set_settleprice(from.settleprice());
  }
  if (from.highlimit() != 0) {
    set_highlimit(from.highlimit());
  }
  if (from.lowlimit() != 0) {
    set_lowlimit(from.lowlimit());
  }
}

void PBMsgMDAMD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMsgMDAMD::CopyFrom(const PBMsgMDAMD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMsgMDAMD::IsInitialized() const {

  return true;
}

void PBMsgMDAMD::Swap(PBMsgMDAMD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMsgMDAMD::InternalSwap(PBMsgMDAMD* other) {
  std::swap(eof_, other->eof_);
  requestsymbollist_.UnsafeArenaSwap(&other->requestsymbollist_);
  std::swap(datatype_, other->datatype_);
  symbol_.Swap(&other->symbol_);
  timestamp_.Swap(&other->timestamp_);
  std::swap(preclosevalue_, other->preclosevalue_);
  std::swap(openvalue_, other->openvalue_);
  std::swap(turnover_, other->turnover_);
  std::swap(volume_, other->volume_);
  std::swap(highvalue_, other->highvalue_);
  std::swap(lowvalue_, other->lowvalue_);
  std::swap(latestindex_, other->latestindex_);
  std::swap(matchprice_, other->matchprice_);
  std::swap(askprice5_, other->askprice5_);
  std::swap(asksize5_, other->asksize5_);
  std::swap(askprice4_, other->askprice4_);
  std::swap(asksize4_, other->asksize4_);
  std::swap(askprice3_, other->askprice3_);
  std::swap(asksize3_, other->asksize3_);
  std::swap(askprice2_, other->askprice2_);
  std::swap(asksize2_, other->asksize2_);
  std::swap(askprice1_, other->askprice1_);
  std::swap(asksize1_, other->asksize1_);
  std::swap(bidprice1_, other->bidprice1_);
  std::swap(bidsize1_, other->bidsize1_);
  std::swap(bidprice2_, other->bidprice2_);
  std::swap(bidsize2_, other->bidsize2_);
  std::swap(bidprice3_, other->bidprice3_);
  std::swap(bidsize3_, other->bidsize3_);
  std::swap(bidprice4_, other->bidprice4_);
  std::swap(bidsize4_, other->bidsize4_);
  std::swap(bidprice5_, other->bidprice5_);
  std::swap(bidsize5_, other->bidsize5_);
  std::swap(presettleprice_, other->presettleprice_);
  std::swap(pricechange_, other->pricechange_);
  std::swap(settleprice_, other->settleprice_);
  std::swap(highlimit_, other->highlimit_);
  std::swap(lowlimit_, other->lowlimit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMsgMDAMD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMsgMDAMD_descriptor_;
  metadata.reflection = PBMsgMDAMD_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMsgMDAMD

// optional int32 EOF = 1;
void PBMsgMDAMD::clear_eof() {
  eof_ = 0;
}
 ::google::protobuf::int32 PBMsgMDAMD::eof() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.EOF)
  return eof_;
}
 void PBMsgMDAMD::set_eof(::google::protobuf::int32 value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.EOF)
}

// repeated string requestSymbolList = 5;
int PBMsgMDAMD::requestsymbollist_size() const {
  return requestsymbollist_.size();
}
void PBMsgMDAMD::clear_requestsymbollist() {
  requestsymbollist_.Clear();
}
 const ::std::string& PBMsgMDAMD::requestsymbollist(int index) const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
  return requestsymbollist_.Get(index);
}
 ::std::string* PBMsgMDAMD::mutable_requestsymbollist(int index) {
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
  return requestsymbollist_.Mutable(index);
}
 void PBMsgMDAMD::set_requestsymbollist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
  requestsymbollist_.Mutable(index)->assign(value);
}
 void PBMsgMDAMD::set_requestsymbollist(int index, const char* value) {
  requestsymbollist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
}
 void PBMsgMDAMD::set_requestsymbollist(int index, const char* value, size_t size) {
  requestsymbollist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
}
 ::std::string* PBMsgMDAMD::add_requestsymbollist() {
  return requestsymbollist_.Add();
}
 void PBMsgMDAMD::add_requestsymbollist(const ::std::string& value) {
  requestsymbollist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
}
 void PBMsgMDAMD::add_requestsymbollist(const char* value) {
  requestsymbollist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
}
 void PBMsgMDAMD::add_requestsymbollist(const char* value, size_t size) {
  requestsymbollist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBMsgMDAMD::requestsymbollist() const {
  // @@protoc_insertion_point(field_list:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
  return requestsymbollist_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PBMsgMDAMD::mutable_requestsymbollist() {
  // @@protoc_insertion_point(field_mutable_list:PBWrapMsgMDA.PBMsgMDAMD.requestSymbolList)
  return &requestsymbollist_;
}

// optional .PBWrapMsgMDA.DataType dataType = 6;
void PBMsgMDAMD::clear_datatype() {
  datatype_ = 0;
}
 ::PBWrapMsgMDA::DataType PBMsgMDAMD::datatype() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.dataType)
  return static_cast< ::PBWrapMsgMDA::DataType >(datatype_);
}
 void PBMsgMDAMD::set_datatype(::PBWrapMsgMDA::DataType value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.dataType)
}

// optional string symbol = 7;
void PBMsgMDAMD::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgMDAMD::symbol() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgMDAMD::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.symbol)
}
 void PBMsgMDAMD::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgMDAMD.symbol)
}
 void PBMsgMDAMD::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgMDAMD.symbol)
}
 ::std::string* PBMsgMDAMD::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgMDAMD.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgMDAMD::release_symbol() {
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgMDAMD::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgMDAMD.symbol)
}

// optional string timeStamp = 8;
void PBMsgMDAMD::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMsgMDAMD::timestamp() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.timeStamp)
  return timestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgMDAMD::set_timestamp(const ::std::string& value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.timeStamp)
}
 void PBMsgMDAMD::set_timestamp(const char* value) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBWrapMsgMDA.PBMsgMDAMD.timeStamp)
}
 void PBMsgMDAMD::set_timestamp(const char* value, size_t size) {
  
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBWrapMsgMDA.PBMsgMDAMD.timeStamp)
}
 ::std::string* PBMsgMDAMD::mutable_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:PBWrapMsgMDA.PBMsgMDAMD.timeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMsgMDAMD::release_timestamp() {
  
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMsgMDAMD::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    
  } else {
    
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:PBWrapMsgMDA.PBMsgMDAMD.timeStamp)
}

// optional int64 preCloseValue = 9;
void PBMsgMDAMD::clear_preclosevalue() {
  preclosevalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::preclosevalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.preCloseValue)
  return preclosevalue_;
}
 void PBMsgMDAMD::set_preclosevalue(::google::protobuf::int64 value) {
  
  preclosevalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.preCloseValue)
}

// optional int64 openValue = 10;
void PBMsgMDAMD::clear_openvalue() {
  openvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::openvalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.openValue)
  return openvalue_;
}
 void PBMsgMDAMD::set_openvalue(::google::protobuf::int64 value) {
  
  openvalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.openValue)
}

// optional int64 turnover = 11;
void PBMsgMDAMD::clear_turnover() {
  turnover_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::turnover() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.turnover)
  return turnover_;
}
 void PBMsgMDAMD::set_turnover(::google::protobuf::int64 value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.turnover)
}

// optional int64 volume = 12;
void PBMsgMDAMD::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::volume() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.volume)
  return volume_;
}
 void PBMsgMDAMD::set_volume(::google::protobuf::int64 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.volume)
}

// optional int64 highValue = 13;
void PBMsgMDAMD::clear_highvalue() {
  highvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::highvalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.highValue)
  return highvalue_;
}
 void PBMsgMDAMD::set_highvalue(::google::protobuf::int64 value) {
  
  highvalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.highValue)
}

// optional int64 lowValue = 14;
void PBMsgMDAMD::clear_lowvalue() {
  lowvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::lowvalue() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.lowValue)
  return lowvalue_;
}
 void PBMsgMDAMD::set_lowvalue(::google::protobuf::int64 value) {
  
  lowvalue_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.lowValue)
}

// optional int64 latestIndex = 15;
void PBMsgMDAMD::clear_latestindex() {
  latestindex_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::latestindex() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.latestIndex)
  return latestindex_;
}
 void PBMsgMDAMD::set_latestindex(::google::protobuf::int64 value) {
  
  latestindex_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.latestIndex)
}

// optional int64 matchPrice = 16;
void PBMsgMDAMD::clear_matchprice() {
  matchprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::matchprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.matchPrice)
  return matchprice_;
}
 void PBMsgMDAMD::set_matchprice(::google::protobuf::int64 value) {
  
  matchprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.matchPrice)
}

// optional int64 askPrice5 = 17;
void PBMsgMDAMD::clear_askprice5() {
  askprice5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::askprice5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askPrice5)
  return askprice5_;
}
 void PBMsgMDAMD::set_askprice5(::google::protobuf::int64 value) {
  
  askprice5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askPrice5)
}

// optional int64 askSize5 = 18;
void PBMsgMDAMD::clear_asksize5() {
  asksize5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::asksize5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askSize5)
  return asksize5_;
}
 void PBMsgMDAMD::set_asksize5(::google::protobuf::int64 value) {
  
  asksize5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askSize5)
}

// optional int64 askPrice4 = 19;
void PBMsgMDAMD::clear_askprice4() {
  askprice4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::askprice4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askPrice4)
  return askprice4_;
}
 void PBMsgMDAMD::set_askprice4(::google::protobuf::int64 value) {
  
  askprice4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askPrice4)
}

// optional int64 askSize4 = 20;
void PBMsgMDAMD::clear_asksize4() {
  asksize4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::asksize4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askSize4)
  return asksize4_;
}
 void PBMsgMDAMD::set_asksize4(::google::protobuf::int64 value) {
  
  asksize4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askSize4)
}

// optional int64 askPrice3 = 21;
void PBMsgMDAMD::clear_askprice3() {
  askprice3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::askprice3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askPrice3)
  return askprice3_;
}
 void PBMsgMDAMD::set_askprice3(::google::protobuf::int64 value) {
  
  askprice3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askPrice3)
}

// optional int64 askSize3 = 22;
void PBMsgMDAMD::clear_asksize3() {
  asksize3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::asksize3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askSize3)
  return asksize3_;
}
 void PBMsgMDAMD::set_asksize3(::google::protobuf::int64 value) {
  
  asksize3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askSize3)
}

// optional int64 askPrice2 = 23;
void PBMsgMDAMD::clear_askprice2() {
  askprice2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::askprice2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askPrice2)
  return askprice2_;
}
 void PBMsgMDAMD::set_askprice2(::google::protobuf::int64 value) {
  
  askprice2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askPrice2)
}

// optional int64 askSize2 = 24;
void PBMsgMDAMD::clear_asksize2() {
  asksize2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::asksize2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askSize2)
  return asksize2_;
}
 void PBMsgMDAMD::set_asksize2(::google::protobuf::int64 value) {
  
  asksize2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askSize2)
}

// optional int64 askPrice1 = 25;
void PBMsgMDAMD::clear_askprice1() {
  askprice1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::askprice1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askPrice1)
  return askprice1_;
}
 void PBMsgMDAMD::set_askprice1(::google::protobuf::int64 value) {
  
  askprice1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askPrice1)
}

// optional int64 askSize1 = 26;
void PBMsgMDAMD::clear_asksize1() {
  asksize1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::asksize1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.askSize1)
  return asksize1_;
}
 void PBMsgMDAMD::set_asksize1(::google::protobuf::int64 value) {
  
  asksize1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.askSize1)
}

// optional int64 bidPrice1 = 27;
void PBMsgMDAMD::clear_bidprice1() {
  bidprice1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidprice1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidPrice1)
  return bidprice1_;
}
 void PBMsgMDAMD::set_bidprice1(::google::protobuf::int64 value) {
  
  bidprice1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidPrice1)
}

// optional int64 bidSize1 = 28;
void PBMsgMDAMD::clear_bidsize1() {
  bidsize1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidsize1() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidSize1)
  return bidsize1_;
}
 void PBMsgMDAMD::set_bidsize1(::google::protobuf::int64 value) {
  
  bidsize1_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidSize1)
}

// optional int64 bidPrice2 = 29;
void PBMsgMDAMD::clear_bidprice2() {
  bidprice2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidprice2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidPrice2)
  return bidprice2_;
}
 void PBMsgMDAMD::set_bidprice2(::google::protobuf::int64 value) {
  
  bidprice2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidPrice2)
}

// optional int64 bidSize2 = 30;
void PBMsgMDAMD::clear_bidsize2() {
  bidsize2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidsize2() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidSize2)
  return bidsize2_;
}
 void PBMsgMDAMD::set_bidsize2(::google::protobuf::int64 value) {
  
  bidsize2_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidSize2)
}

// optional int64 bidPrice3 = 31;
void PBMsgMDAMD::clear_bidprice3() {
  bidprice3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidprice3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidPrice3)
  return bidprice3_;
}
 void PBMsgMDAMD::set_bidprice3(::google::protobuf::int64 value) {
  
  bidprice3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidPrice3)
}

// optional int64 bidSize3 = 32;
void PBMsgMDAMD::clear_bidsize3() {
  bidsize3_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidsize3() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidSize3)
  return bidsize3_;
}
 void PBMsgMDAMD::set_bidsize3(::google::protobuf::int64 value) {
  
  bidsize3_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidSize3)
}

// optional int64 bidPrice4 = 33;
void PBMsgMDAMD::clear_bidprice4() {
  bidprice4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidprice4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidPrice4)
  return bidprice4_;
}
 void PBMsgMDAMD::set_bidprice4(::google::protobuf::int64 value) {
  
  bidprice4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidPrice4)
}

// optional int64 bidSize4 = 34;
void PBMsgMDAMD::clear_bidsize4() {
  bidsize4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidsize4() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidSize4)
  return bidsize4_;
}
 void PBMsgMDAMD::set_bidsize4(::google::protobuf::int64 value) {
  
  bidsize4_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidSize4)
}

// optional int64 bidPrice5 = 35;
void PBMsgMDAMD::clear_bidprice5() {
  bidprice5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidprice5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidPrice5)
  return bidprice5_;
}
 void PBMsgMDAMD::set_bidprice5(::google::protobuf::int64 value) {
  
  bidprice5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidPrice5)
}

// optional int64 bidSize5 = 36;
void PBMsgMDAMD::clear_bidsize5() {
  bidsize5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::bidsize5() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.bidSize5)
  return bidsize5_;
}
 void PBMsgMDAMD::set_bidsize5(::google::protobuf::int64 value) {
  
  bidsize5_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.bidSize5)
}

// optional int64 preSettlePrice = 37;
void PBMsgMDAMD::clear_presettleprice() {
  presettleprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::presettleprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.preSettlePrice)
  return presettleprice_;
}
 void PBMsgMDAMD::set_presettleprice(::google::protobuf::int64 value) {
  
  presettleprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.preSettlePrice)
}

// optional int64 priceChange = 38;
void PBMsgMDAMD::clear_pricechange() {
  pricechange_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::pricechange() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.priceChange)
  return pricechange_;
}
 void PBMsgMDAMD::set_pricechange(::google::protobuf::int64 value) {
  
  pricechange_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.priceChange)
}

// optional int64 settlePrice = 39;
void PBMsgMDAMD::clear_settleprice() {
  settleprice_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::settleprice() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.settlePrice)
  return settleprice_;
}
 void PBMsgMDAMD::set_settleprice(::google::protobuf::int64 value) {
  
  settleprice_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.settlePrice)
}

// optional int64 highLimit = 40;
void PBMsgMDAMD::clear_highlimit() {
  highlimit_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::highlimit() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.highLimit)
  return highlimit_;
}
 void PBMsgMDAMD::set_highlimit(::google::protobuf::int64 value) {
  
  highlimit_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.highLimit)
}

// optional int64 lowLimit = 41;
void PBMsgMDAMD::clear_lowlimit() {
  lowlimit_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PBMsgMDAMD::lowlimit() const {
  // @@protoc_insertion_point(field_get:PBWrapMsgMDA.PBMsgMDAMD.lowLimit)
  return lowlimit_;
}
 void PBMsgMDAMD::set_lowlimit(::google::protobuf::int64 value) {
  
  lowlimit_ = value;
  // @@protoc_insertion_point(field_set:PBWrapMsgMDA.PBMsgMDAMD.lowLimit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PBWrapMsgMDA

// @@protoc_insertion_point(global_scope)
