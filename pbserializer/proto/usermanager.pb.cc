// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usermanager.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "usermanager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Micro {
namespace Future {
namespace Message {
namespace Business {

namespace {

const ::google::protobuf::Descriptor* PBUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBUserInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBUserInfoList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_usermanager_2eproto() {
  protobuf_AddDesc_usermanager_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "usermanager.proto");
  GOOGLE_CHECK(file != NULL);
  PBUserInfo_descriptor_ = file->message_type(0);
  static const int PBUserInfo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, firstname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, lastname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, company_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, contactnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, identitynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, zipcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, permission_),
  };
  PBUserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBUserInfo_descriptor_,
      PBUserInfo::default_instance_,
      PBUserInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBUserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfo, _is_default_instance_));
  PBUserInfoList_descriptor_ = file->message_type(1);
  static const int PBUserInfoList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfoList, userinfo_),
  };
  PBUserInfoList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBUserInfoList_descriptor_,
      PBUserInfoList::default_instance_,
      PBUserInfoList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBUserInfoList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfoList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserInfoList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_usermanager_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBUserInfo_descriptor_, &PBUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBUserInfoList_descriptor_, &PBUserInfoList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_usermanager_2eproto() {
  delete PBUserInfo::default_instance_;
  delete PBUserInfo_reflection_;
  delete PBUserInfoList::default_instance_;
  delete PBUserInfoList_reflection_;
}

void protobuf_AddDesc_usermanager_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021usermanager.proto\022\035Micro.Future.Messag"
    "e.Business\"\360\001\n\nPBUserInfo\022\016\n\006userId\030\001 \001("
    "\t\022\020\n\010password\030\002 \001(\t\022\021\n\tfirstName\030\003 \001(\t\022\020"
    "\n\010lastName\030\004 \001(\t\022\016\n\006gender\030\005 \001(\005\022\017\n\007comp"
    "any\030\006 \001(\t\022\r\n\005email\030\007 \001(\t\022\022\n\ncontactNum\030\010"
    " \001(\t\022\023\n\013identityNum\030\t \001(\t\022\017\n\007address\030\n \001"
    "(\t\022\017\n\007zipcode\030\013 \001(\t\022\014\n\004role\030\014 \001(\005\022\022\n\nper"
    "mission\030\r \001(\005\"M\n\016PBUserInfoList\022;\n\010userI"
    "nfo\030\001 \003(\0132).Micro.Future.Message.Busines"
    "s.PBUserInfob\006proto3", 380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "usermanager.proto", &protobuf_RegisterTypes);
  PBUserInfo::default_instance_ = new PBUserInfo();
  PBUserInfoList::default_instance_ = new PBUserInfoList();
  PBUserInfo::default_instance_->InitAsDefaultInstance();
  PBUserInfoList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_usermanager_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_usermanager_2eproto {
  StaticDescriptorInitializer_usermanager_2eproto() {
    protobuf_AddDesc_usermanager_2eproto();
  }
} static_descriptor_initializer_usermanager_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBUserInfo::kUserIdFieldNumber;
const int PBUserInfo::kPasswordFieldNumber;
const int PBUserInfo::kFirstNameFieldNumber;
const int PBUserInfo::kLastNameFieldNumber;
const int PBUserInfo::kGenderFieldNumber;
const int PBUserInfo::kCompanyFieldNumber;
const int PBUserInfo::kEmailFieldNumber;
const int PBUserInfo::kContactNumFieldNumber;
const int PBUserInfo::kIdentityNumFieldNumber;
const int PBUserInfo::kAddressFieldNumber;
const int PBUserInfo::kZipcodeFieldNumber;
const int PBUserInfo::kRoleFieldNumber;
const int PBUserInfo::kPermissionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBUserInfo::PBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBUserInfo)
}

void PBUserInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBUserInfo::PBUserInfo(const PBUserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBUserInfo)
}

void PBUserInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_ = 0;
  company_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contactnum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identitynum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_ = 0;
  permission_ = 0;
}

PBUserInfo::~PBUserInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBUserInfo)
  SharedDtor();
}

void PBUserInfo::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contactnum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identitynum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBUserInfo_descriptor_;
}

const PBUserInfo& PBUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_usermanager_2eproto();
  return *default_instance_;
}

PBUserInfo* PBUserInfo::default_instance_ = NULL;

PBUserInfo* PBUserInfo::New(::google::protobuf::Arena* arena) const {
  PBUserInfo* n = new PBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBUserInfo::Clear() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_ = 0;
  company_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contactnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identitynum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_ = 0;
  permission_ = 0;
}

bool PBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_firstName;
        break;
      }

      // optional string firstName = 3;
      case 3: {
        if (tag == 26) {
         parse_firstName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firstname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firstname().data(), this->firstname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.firstName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_lastName;
        break;
      }

      // optional string lastName = 4;
      case 4: {
        if (tag == 34) {
         parse_lastName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), this->lastname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.lastName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gender;
        break;
      }

      // optional int32 gender = 5;
      case 5: {
        if (tag == 40) {
         parse_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_company;
        break;
      }

      // optional string company = 6;
      case 6: {
        if (tag == 50) {
         parse_company:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_company()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->company().data(), this->company().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.company"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_email;
        break;
      }

      // optional string email = 7;
      case 7: {
        if (tag == 58) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_contactNum;
        break;
      }

      // optional string contactNum = 8;
      case 8: {
        if (tag == 66) {
         parse_contactNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contactnum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contactnum().data(), this->contactnum().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.contactNum"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_identityNum;
        break;
      }

      // optional string identityNum = 9;
      case 9: {
        if (tag == 74) {
         parse_identityNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identitynum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identitynum().data(), this->identitynum().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.identityNum"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_address;
        break;
      }

      // optional string address = 10;
      case 10: {
        if (tag == 82) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_zipcode;
        break;
      }

      // optional string zipcode = 11;
      case 11: {
        if (tag == 90) {
         parse_zipcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zipcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zipcode().data(), this->zipcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserInfo.zipcode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_role;
        break;
      }

      // optional int32 role = 12;
      case 12: {
        if (tag == 96) {
         parse_role:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_permission;
        break;
      }

      // optional int32 permission = 13;
      case 13: {
        if (tag == 104) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBUserInfo)
  return false;
#undef DO_
}

void PBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBUserInfo)
  // optional string userId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string firstName = 3;
  if (this->firstname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firstname().data(), this->firstname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.firstName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->firstname(), output);
  }

  // optional string lastName = 4;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.lastName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lastname(), output);
  }

  // optional int32 gender = 5;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gender(), output);
  }

  // optional string company = 6;
  if (this->company().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->company().data(), this->company().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.company");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->company(), output);
  }

  // optional string email = 7;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->email(), output);
  }

  // optional string contactNum = 8;
  if (this->contactnum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contactnum().data(), this->contactnum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.contactNum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->contactnum(), output);
  }

  // optional string identityNum = 9;
  if (this->identitynum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identitynum().data(), this->identitynum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.identityNum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->identitynum(), output);
  }

  // optional string address = 10;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->address(), output);
  }

  // optional string zipcode = 11;
  if (this->zipcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipcode().data(), this->zipcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.zipcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->zipcode(), output);
  }

  // optional int32 role = 12;
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->role(), output);
  }

  // optional int32 permission = 13;
  if (this->permission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->permission(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBUserInfo)
}

::google::protobuf::uint8* PBUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBUserInfo)
  // optional string userId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string firstName = 3;
  if (this->firstname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firstname().data(), this->firstname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.firstName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->firstname(), target);
  }

  // optional string lastName = 4;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.lastName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lastname(), target);
  }

  // optional int32 gender = 5;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gender(), target);
  }

  // optional string company = 6;
  if (this->company().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->company().data(), this->company().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.company");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->company(), target);
  }

  // optional string email = 7;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->email(), target);
  }

  // optional string contactNum = 8;
  if (this->contactnum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contactnum().data(), this->contactnum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.contactNum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->contactnum(), target);
  }

  // optional string identityNum = 9;
  if (this->identitynum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identitynum().data(), this->identitynum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.identityNum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->identitynum(), target);
  }

  // optional string address = 10;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->address(), target);
  }

  // optional string zipcode = 11;
  if (this->zipcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipcode().data(), this->zipcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserInfo.zipcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->zipcode(), target);
  }

  // optional int32 role = 12;
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->role(), target);
  }

  // optional int32 permission = 13;
  if (this->permission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->permission(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBUserInfo)
  return target;
}

int PBUserInfo::ByteSize() const {
  int total_size = 0;

  // optional string userId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string firstName = 3;
  if (this->firstname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firstname());
  }

  // optional string lastName = 4;
  if (this->lastname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  // optional int32 gender = 5;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gender());
  }

  // optional string company = 6;
  if (this->company().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->company());
  }

  // optional string email = 7;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string contactNum = 8;
  if (this->contactnum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contactnum());
  }

  // optional string identityNum = 9;
  if (this->identitynum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identitynum());
  }

  // optional string address = 10;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string zipcode = 11;
  if (this->zipcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zipcode());
  }

  // optional int32 role = 12;
  if (this->role() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role());
  }

  // optional int32 permission = 13;
  if (this->permission() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->permission());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBUserInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBUserInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBUserInfo::MergeFrom(const PBUserInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.firstname().size() > 0) {

    firstname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firstname_);
  }
  if (from.lastname().size() > 0) {

    lastname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastname_);
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.company().size() > 0) {

    company_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.contactnum().size() > 0) {

    contactnum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contactnum_);
  }
  if (from.identitynum().size() > 0) {

    identitynum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identitynum_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.zipcode().size() > 0) {

    zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
  if (from.permission() != 0) {
    set_permission(from.permission());
  }
}

void PBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBUserInfo::CopyFrom(const PBUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUserInfo::IsInitialized() const {

  return true;
}

void PBUserInfo::Swap(PBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBUserInfo::InternalSwap(PBUserInfo* other) {
  userid_.Swap(&other->userid_);
  password_.Swap(&other->password_);
  firstname_.Swap(&other->firstname_);
  lastname_.Swap(&other->lastname_);
  std::swap(gender_, other->gender_);
  company_.Swap(&other->company_);
  email_.Swap(&other->email_);
  contactnum_.Swap(&other->contactnum_);
  identitynum_.Swap(&other->identitynum_);
  address_.Swap(&other->address_);
  zipcode_.Swap(&other->zipcode_);
  std::swap(role_, other->role_);
  std::swap(permission_, other->permission_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBUserInfo_descriptor_;
  metadata.reflection = PBUserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBUserInfo

// optional string userId = 1;
void PBUserInfo::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::userid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.userId)
}
 void PBUserInfo::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.userId)
}
 void PBUserInfo::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.userId)
}
 ::std::string* PBUserInfo::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_userid() {
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.userId)
}

// optional string password = 2;
void PBUserInfo::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::password() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.password)
}
 void PBUserInfo::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.password)
}
 void PBUserInfo::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.password)
}
 ::std::string* PBUserInfo::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_password() {
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.password)
}

// optional string firstName = 3;
void PBUserInfo::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::firstname() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.firstName)
  return firstname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.firstName)
}
 void PBUserInfo::set_firstname(const char* value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.firstName)
}
 void PBUserInfo::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.firstName)
}
 ::std::string* PBUserInfo::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.firstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_firstname() {
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.firstName)
}

// optional string lastName = 4;
void PBUserInfo::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::lastname() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.lastName)
  return lastname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.lastName)
}
 void PBUserInfo::set_lastname(const char* value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.lastName)
}
 void PBUserInfo::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.lastName)
}
 ::std::string* PBUserInfo::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_lastname() {
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.lastName)
}

// optional int32 gender = 5;
void PBUserInfo::clear_gender() {
  gender_ = 0;
}
 ::google::protobuf::int32 PBUserInfo::gender() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.gender)
  return gender_;
}
 void PBUserInfo::set_gender(::google::protobuf::int32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.gender)
}

// optional string company = 6;
void PBUserInfo::clear_company() {
  company_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::company() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.company)
  return company_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_company(const ::std::string& value) {
  
  company_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.company)
}
 void PBUserInfo::set_company(const char* value) {
  
  company_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.company)
}
 void PBUserInfo::set_company(const char* value, size_t size) {
  
  company_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.company)
}
 ::std::string* PBUserInfo::mutable_company() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.company)
  return company_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_company() {
  
  return company_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_company(::std::string* company) {
  if (company != NULL) {
    
  } else {
    
  }
  company_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.company)
}

// optional string email = 7;
void PBUserInfo::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::email() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.email)
}
 void PBUserInfo::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.email)
}
 void PBUserInfo::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.email)
}
 ::std::string* PBUserInfo::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_email() {
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.email)
}

// optional string contactNum = 8;
void PBUserInfo::clear_contactnum() {
  contactnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::contactnum() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.contactNum)
  return contactnum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_contactnum(const ::std::string& value) {
  
  contactnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.contactNum)
}
 void PBUserInfo::set_contactnum(const char* value) {
  
  contactnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.contactNum)
}
 void PBUserInfo::set_contactnum(const char* value, size_t size) {
  
  contactnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.contactNum)
}
 ::std::string* PBUserInfo::mutable_contactnum() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.contactNum)
  return contactnum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_contactnum() {
  
  return contactnum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_contactnum(::std::string* contactnum) {
  if (contactnum != NULL) {
    
  } else {
    
  }
  contactnum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contactnum);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.contactNum)
}

// optional string identityNum = 9;
void PBUserInfo::clear_identitynum() {
  identitynum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::identitynum() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.identityNum)
  return identitynum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_identitynum(const ::std::string& value) {
  
  identitynum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.identityNum)
}
 void PBUserInfo::set_identitynum(const char* value) {
  
  identitynum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.identityNum)
}
 void PBUserInfo::set_identitynum(const char* value, size_t size) {
  
  identitynum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.identityNum)
}
 ::std::string* PBUserInfo::mutable_identitynum() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.identityNum)
  return identitynum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_identitynum() {
  
  return identitynum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_identitynum(::std::string* identitynum) {
  if (identitynum != NULL) {
    
  } else {
    
  }
  identitynum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identitynum);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.identityNum)
}

// optional string address = 10;
void PBUserInfo::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::address() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.address)
}
 void PBUserInfo::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.address)
}
 void PBUserInfo::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.address)
}
 ::std::string* PBUserInfo::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_address() {
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.address)
}

// optional string zipcode = 11;
void PBUserInfo::clear_zipcode() {
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserInfo::zipcode() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.zipcode)
  return zipcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_zipcode(const ::std::string& value) {
  
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.zipcode)
}
 void PBUserInfo::set_zipcode(const char* value) {
  
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserInfo.zipcode)
}
 void PBUserInfo::set_zipcode(const char* value, size_t size) {
  
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserInfo.zipcode)
}
 ::std::string* PBUserInfo::mutable_zipcode() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfo.zipcode)
  return zipcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserInfo::release_zipcode() {
  
  return zipcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserInfo::set_allocated_zipcode(::std::string* zipcode) {
  if (zipcode != NULL) {
    
  } else {
    
  }
  zipcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zipcode);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserInfo.zipcode)
}

// optional int32 role = 12;
void PBUserInfo::clear_role() {
  role_ = 0;
}
 ::google::protobuf::int32 PBUserInfo::role() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.role)
  return role_;
}
 void PBUserInfo::set_role(::google::protobuf::int32 value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.role)
}

// optional int32 permission = 13;
void PBUserInfo::clear_permission() {
  permission_ = 0;
}
 ::google::protobuf::int32 PBUserInfo::permission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfo.permission)
  return permission_;
}
 void PBUserInfo::set_permission(::google::protobuf::int32 value) {
  
  permission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserInfo.permission)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBUserInfoList::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBUserInfoList::PBUserInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBUserInfoList)
}

void PBUserInfoList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBUserInfoList::PBUserInfoList(const PBUserInfoList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBUserInfoList)
}

void PBUserInfoList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PBUserInfoList::~PBUserInfoList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBUserInfoList)
  SharedDtor();
}

void PBUserInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBUserInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBUserInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBUserInfoList_descriptor_;
}

const PBUserInfoList& PBUserInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_usermanager_2eproto();
  return *default_instance_;
}

PBUserInfoList* PBUserInfoList::default_instance_ = NULL;

PBUserInfoList* PBUserInfoList::New(::google::protobuf::Arena* arena) const {
  PBUserInfoList* n = new PBUserInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBUserInfoList::Clear() {
  userinfo_.Clear();
}

bool PBUserInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBUserInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBUserInfo userInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_userInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_userInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBUserInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBUserInfoList)
  return false;
#undef DO_
}

void PBUserInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBUserInfoList)
  // repeated .Micro.Future.Message.Business.PBUserInfo userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBUserInfoList)
}

::google::protobuf::uint8* PBUserInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBUserInfoList)
  // repeated .Micro.Future.Message.Business.PBUserInfo userInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBUserInfoList)
  return target;
}

int PBUserInfoList::ByteSize() const {
  int total_size = 0;

  // repeated .Micro.Future.Message.Business.PBUserInfo userInfo = 1;
  total_size += 1 * this->userinfo_size();
  for (int i = 0; i < this->userinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBUserInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBUserInfoList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBUserInfoList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBUserInfoList::MergeFrom(const PBUserInfoList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  userinfo_.MergeFrom(from.userinfo_);
}

void PBUserInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBUserInfoList::CopyFrom(const PBUserInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUserInfoList::IsInitialized() const {

  return true;
}

void PBUserInfoList::Swap(PBUserInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBUserInfoList::InternalSwap(PBUserInfoList* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBUserInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBUserInfoList_descriptor_;
  metadata.reflection = PBUserInfoList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBUserInfoList

// repeated .Micro.Future.Message.Business.PBUserInfo userInfo = 1;
int PBUserInfoList::userinfo_size() const {
  return userinfo_.size();
}
void PBUserInfoList::clear_userinfo() {
  userinfo_.Clear();
}
const ::Micro::Future::Message::Business::PBUserInfo& PBUserInfoList::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserInfoList.userInfo)
  return userinfo_.Get(index);
}
::Micro::Future::Message::Business::PBUserInfo* PBUserInfoList::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserInfoList.userInfo)
  return userinfo_.Mutable(index);
}
::Micro::Future::Message::Business::PBUserInfo* PBUserInfoList::add_userinfo() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBUserInfoList.userInfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBUserInfo >*
PBUserInfoList::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBUserInfoList.userInfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBUserInfo >&
PBUserInfoList::userinfo() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBUserInfoList.userInfo)
  return userinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Business
}  // namespace Message
}  // namespace Future
}  // namespace Micro

// @@protoc_insertion_point(global_scope)
