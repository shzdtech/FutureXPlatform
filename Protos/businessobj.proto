syntax = "proto3";

import "commondefine.proto";

package Micro.Future.Message.Business;

message PBMarketData {
	//MD Common Data
	string exchange = 1;
	string contract = 2;
	double preCloseValue = 3;
	double openValue = 4;
	double turnover = 5;
	int32  volume = 6;
	double highValue = 7;
	double lowValue = 8;

	//Equity Data
	double matchPrice = 9;
	repeated double askPrice = 10;
	repeated int32 askVolume = 11;
	repeated double bidPrice = 12;
	repeated int32 bidVolume = 13;
	
	//Index Data
	double preSettlePrice = 14;
	double priceChange = 15;
	double settlePrice = 16;
	int32 highLimit = 17;
	int32 lowLimit = 18;

	double preOpenInterest = 19;
	double openInterest = 20;
	double averagePrice = 21;

	// DataHeader header = 22;
}

message PBMarketDataList
{
	repeated PBMarketData marketData = 1;
	DataHeader header = 2;
}

message PBPricingData {
	//MD Common Data
	string exchange = 1;
	string contract = 2;

	//Equity Data
	double askPrice = 3;
	double bidPrice = 4;

	//DataHeader header = 5;
}

message PBPricingDataList
{
	repeated PBPricingData pricingData = 1;
	DataHeader header = 2;
}

message PBPricingContract
{
	string exchange = 1;
	string contract = 2;
	double weight = 3;	
}

message PBStrategy
{
	string exchange = 1;
	string contract = 2;
	string underlying = 3;
	string symbol = 4;
	string description = 5;
	bool allowTrading = 6;
	bool enabled = 7;
	int32 quantity = 8;
	int32 depth = 9;
	repeated PBPricingContract pricingContracts = 10;
	map<string,double> params = 11;
}

message PBStrategyList
{
	repeated PBStrategy strategy = 1;
	DataHeader header = 2;
}

message PBContractParam
{
	string exchange = 1;
	string contract = 2;
	int32 depthVol = 3;
	double gamma = 4;
}

message PBContractParamList
{
	repeated PBContractParam params = 1;
	DataHeader header = 2;
}

message PBOTCUserParam
{
	string exchange = 1;
	string contract = 2;
	double quantity = 3;
}

message PBOTCUserParamList
{
	repeated PBOTCUserParam params = 1;
	DataHeader header = 2;
}

///报单
message PBOrderRequest {
	DataHeader header = 1;
	///报单编号
	uint64 orderID = 2;
	///系统报单编号
	uint64 orderSysID = 3;
	///交易所代码
	string	exchange = 4;
	///合约代码
	string	contract = 5;
	///价格
	double limitPrice = 6;	
	///数量
	int32 volume = 7;
	///报单价格条件
	int32 execType = 8;
	///Time In Force
	int32 tif = 9;
	///买卖方向
	int32 direction = 10;
	// Call Put
	int32 callput = 11;
	///开平标志
	int32 openclose = 12;
}

message PBOrderInfo {
	///报单编号
	uint64 orderID = 1;
	///系统报单编号
	uint64	orderSysID = 2;	
	///经纪公司代码
	string	brokerID = 3;
	///投资者代码
	string	investorID = 4;
	///交易所代码
	string	exchange = 5;
	///合约代码
	string	contract = 6;
	///报单价格条件
	int32	execType = 7;
	///TIF
	int32	tif = 8;
	///交易类型
	int32	tradingType = 9;
	///买卖方向
	int32	direction = 10;
	///价格
	double	limitPrice = 11;
	///止损价
	double	stopPrice = 12;	
	///报单状态
	int32 orderStatus = 13;
	///报单类型
	int32	orderType = 14;
	///数量
	int32	volume = 15;
	///委托时间
	string insertTime = 17;
	///最后修改时间
	string	updateTime = 18;
	///撤销时间
	string	cancelTime = 19;
	///今成交数量
	int32 volumeTraded = 20;
	///剩余数量
	int32 volumeRemain = 21;
	///成交量类型
	int32 volumeCondition = 22;
	///交易日
	int32 tradingDay = 23;
	///活动状态
	bool active = 24;
	///开平标志
	int32 openclose = 25;
	///状态信息
	bytes message = 26;
	/// Session Id
	int32 sessionID = 27;

	DataHeader header = 28;
}

///成交
message PBTradeInfo {
	///成交编号
	uint64	tradeID = 1;
	///买卖方向
	int32 direction = 2;
	///开平标志
	int32 openclose = 3;
	///报单编号
	uint64	orderSysID = 4;
	///报单引用
	uint64 orderID = 5;
	///价格
	double	price = 6;
	///数量
	int32	volume = 7;
	///经纪公司代码
	string	brokerID = 8;
	///投资者代码
	string	investorID = 9;
	///交易所代码
	string	exchange = 10;
	///合约代码
	string	contract = 11;
	///用户代码
	string	userID = 12;
	///成交时期
	string	tradeDate = 13;
	///成交时间
	string	tradeTime = 14;
	///成交类型
	int32 tradeType = 15;
	///投机套保标志
	int32 hedgeFlag = 16;
	///手续费
	double	commission = 17;

	DataHeader header = 18;
}

message PBPosition {
	///交易所代码
	string	exchange = 1;
	///合约代码
	string	contract = 2;
	///持仓多空方向
	int32 direction = 3;
	///持仓
	int32 position = 5;
	///上日持仓
	int32 ydPosition = 4;
	///持仓日期
	string	positionDate = 6;	
	///开仓量
	int32 openVolume = 7;
	///平仓量
	int32 closeVolume = 8;
	///开仓金额
	double	openAmount = 9;
	///平仓金额
	double	closeAmount = 10;
	///持仓成本
	double	cost = 11;
	///开仓成本
	double	openCost = 12;
	///持仓盈亏
	double profit = 13;
	///平仓盈亏
	double	closeProfit = 14;
	///占用的保证金
	double	useMargin = 15;
	///投机套保标志
	int32 hedgeFlag = 16;

	DataHeader header = 17;
}

message PBAccountInfo {
	///经纪公司代码
	string	brokerID = 2;
	///投资者帐号
	string	accountID = 3;
	///上次质押金额
	double	preMortgage = 4;
	///上次信用额度
	double	preCredit = 5;
	///上次存款额
	double	preDeposit = 6;
	///上次结算准备金
	double	preBalance = 7;
	///上次占用的保证金
	double	preMargin = 8;
	///利息基数
	double	interestBase = 9;
	///利息收入
	double	interest = 10;
	///入金金额
	double	deposit = 11;
	///出金金额
	double	withdraw = 12;
	///冻结的保证金
	double	frozenMargin = 13;
	///冻结的资金
	double	frozenCash = 14;
	///冻结的手续费
	double	frozenCommission = 15;
	///当前保证金总额
	double	currMargin = 16;
	///资金差额
	double	cashIn = 17;
	///手续费
	double	commission = 18;
	///平仓盈亏
	double	closeProfit = 19;
	///持仓盈亏
	double	positionProfit = 20;
	///期货结算准备金
	double	balance = 21;
	///可用资金
	double	available = 22;
	///可取资金
	double	withdrawQuota = 23;
	///基本准备金
	double	reserve = 24;
	///交易日
	string	tradingDay = 25;
	///结算编号
	int32	settlementID = 26;
	///信用额度
	double	credit = 27;
	///质押金额
	double	mortgage = 28;
	///交易所保证金
	double	exchangeMargin = 29;
	///投资者交割保证金
	double	deliveryMargin = 30;
	///交易所交割保证金
	double	exchangeDeliveryMargin = 31;
	///保底期货结算准备金
	double	reserveBalance = 32;

	DataHeader header = 33;
}

message PBMarketInfo {
	//交易所代码
	string exchange = 1;
	//交易所名称
	bytes name = 2;
	//交易所属性
	bytes property = 3;

	DataHeader header = 4;
}

message PBContractInfo {
	///交易所代码
	string exchange  = 1;
	///合约代码
	string	contract = 2;
	///合约名称
	bytes name = 3;
	///产品代码
	string productID = 4;
	///产品类型
	int32 productType = 5;
	///交割年份
	int32 deliveryYear = 6;
	///交割月
	int32 deliveryMonth = 7;
	///市价单最大下单量
	int32 maxMarketOrderVolume = 8;
	///市价单最小下单量
	int32 minMarketOrderVolume = 9;
	///限价单最大下单量
	int32 maxLimitOrderVolume = 10;
	///限价单最小下单量
	int32 minLimitOrderVolume = 11;
	///合约数量乘数
	int32 volumeMultiple = 12;
	///最小变动价位
	int32 priceTick = 13;
	///创建日
	string createDate = 14;
	///上市日
	string openDate = 15;
	///到期日
	string expireDate = 16;
	///开始交割日
	string startDelivDate = 17;
	///结束交割日
	string endDelivDate = 18;
	///合约生命周期状态
	int32 lifePhase = 19;
	///当前是否交易
	int32 isTrading = 20;
	///持仓类型
	int32 positionType = 21;
	///持仓日期类型
	int32 positionDateType = 22;
	///多头保证金率
	double longMarginRatio = 23;
	///空头保证金率
	double shortMarginRatio = 24;
	///组名称
	string groupName = 25;

	//DataHeader header = 26;
}

message PBContractInfoList
{
	repeated PBContractInfo contractInfo = 1;
	DataHeader header = 2;
}

message PBOptionPricing
{
	DataHeader header = 1;
	string exchange = 2;
	string contract = 3;
	repeated double strikePrice = 4;
	repeated double putBidPrice = 5;
	repeated double putAskPrice = 6;
	repeated double callBidPrice = 7;
	repeated double callAskPrice = 8;
}