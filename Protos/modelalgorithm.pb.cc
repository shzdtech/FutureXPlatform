// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modelalgorithm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modelalgorithm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Micro {
namespace Future {
namespace Message {

namespace {

const ::google::protobuf::Descriptor* ModelParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModelParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModelParams_ParamsEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_modelalgorithm_2eproto() {
  protobuf_AddDesc_modelalgorithm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "modelalgorithm.proto");
  GOOGLE_CHECK(file != NULL);
  ModelParams_descriptor_ = file->message_type(0);
  static const int ModelParams_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, instancename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, params_),
  };
  ModelParams_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModelParams_descriptor_,
      ModelParams::default_instance_,
      ModelParams_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModelParams),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, _is_default_instance_));
  ModelParams_ParamsEntry_descriptor_ = ModelParams_descriptor_->nested_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_modelalgorithm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModelParams_descriptor_, &ModelParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ModelParams_ParamsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            double,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
            0>::CreateDefaultInstance(
                ModelParams_ParamsEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_modelalgorithm_2eproto() {
  delete ModelParams::default_instance_;
  delete ModelParams_reflection_;
}

void protobuf_AddDesc_modelalgorithm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Micro::Future::Message::protobuf_AddDesc_commondefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024modelalgorithm.proto\022\024Micro.Future.Mes"
    "sage\032\022commondefine.proto\"\322\001\n\013ModelParams"
    "\0220\n\006header\030\001 \001(\0132 .Micro.Future.Message."
    "DataHeader\022\024\n\014instanceName\030\002 \001(\t\022\r\n\005mode"
    "l\030\003 \001(\t\022=\n\006params\030\004 \003(\0132-.Micro.Future.M"
    "essage.ModelParams.ParamsEntry\032-\n\013Params"
    "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001b\006p"
    "roto3", 285);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modelalgorithm.proto", &protobuf_RegisterTypes);
  ModelParams::default_instance_ = new ModelParams();
  ModelParams::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_modelalgorithm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_modelalgorithm_2eproto {
  StaticDescriptorInitializer_modelalgorithm_2eproto() {
    protobuf_AddDesc_modelalgorithm_2eproto();
  }
} static_descriptor_initializer_modelalgorithm_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelParams::kHeaderFieldNumber;
const int ModelParams::kInstanceNameFieldNumber;
const int ModelParams::kModelFieldNumber;
const int ModelParams::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelParams::ModelParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.ModelParams)
}

void ModelParams::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

ModelParams::ModelParams(const ModelParams& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.ModelParams)
}

void ModelParams::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  instancename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  params_.SetEntryDescriptor(
      &::Micro::Future::Message::ModelParams_ParamsEntry_descriptor_);
}

ModelParams::~ModelParams() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.ModelParams)
  SharedDtor();
}

void ModelParams::SharedDtor() {
  instancename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void ModelParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModelParams_descriptor_;
}

const ModelParams& ModelParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_modelalgorithm_2eproto();
  return *default_instance_;
}

ModelParams* ModelParams::default_instance_ = NULL;

ModelParams* ModelParams::New(::google::protobuf::Arena* arena) const {
  ModelParams* n = new ModelParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelParams::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.ModelParams)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  instancename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.Clear();
}

bool ModelParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.ModelParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_instanceName;
        break;
      }

      // optional string instanceName = 2;
      case 2: {
        if (tag == 18) {
         parse_instanceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instancename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instancename().data(), this->instancename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.ModelParams.instanceName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_model;
        break;
      }

      // optional string model = 3;
      case 3: {
        if (tag == 26) {
         parse_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.ModelParams.model"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_params;
        break;
      }

      // map<string, double> params = 4;
      case 4: {
        if (tag == 34) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          ::google::protobuf::scoped_ptr<ModelParams_ParamsEntry> entry(params_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_params())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->key().data(), entry->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.ModelParams.ParamsEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.ModelParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.ModelParams)
  return false;
#undef DO_
}

void ModelParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.ModelParams)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string instanceName = 2;
  if (this->instancename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instancename().data(), this->instancename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.ModelParams.instanceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instancename(), output);
  }

  // optional string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.ModelParams.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model(), output);
  }

  // map<string, double> params = 4;
  {
    ::google::protobuf::scoped_ptr<ModelParams_ParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          4, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.ModelParams.ParamsEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.ModelParams)
}

::google::protobuf::uint8* ModelParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.ModelParams)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string instanceName = 2;
  if (this->instancename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instancename().data(), this->instancename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.ModelParams.instanceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instancename(), target);
  }

  // optional string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.ModelParams.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model(), target);
  }

  // map<string, double> params = 4;
  {
    ::google::protobuf::scoped_ptr<ModelParams_ParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              4, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.ModelParams.ParamsEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.ModelParams)
  return target;
}

int ModelParams::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.ModelParams)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string instanceName = 2;
  if (this->instancename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instancename());
  }

  // optional string model = 3;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // map<string, double> params = 4;
  total_size += 1 * this->params_size();
  {
    ::google::protobuf::scoped_ptr<ModelParams_ParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.ModelParams)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModelParams* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.ModelParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.ModelParams)
    MergeFrom(*source);
  }
}

void ModelParams::MergeFrom(const ModelParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.ModelParams)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  params_.MergeFrom(from.params_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.instancename().size() > 0) {

    instancename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instancename_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
}

void ModelParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.ModelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelParams::CopyFrom(const ModelParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.ModelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelParams::IsInitialized() const {

  return true;
}

void ModelParams::Swap(ModelParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelParams::InternalSwap(ModelParams* other) {
  std::swap(header_, other->header_);
  instancename_.Swap(&other->instancename_);
  model_.Swap(&other->model_);
  params_.Swap(&other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModelParams_descriptor_;
  metadata.reflection = ModelParams_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelParams

// optional .Micro.Future.Message.DataHeader header = 1;
bool ModelParams::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void ModelParams::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& ModelParams::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.ModelParams.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* ModelParams::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.ModelParams.header)
  return header_;
}
::Micro::Future::Message::DataHeader* ModelParams::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.ModelParams.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void ModelParams::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.ModelParams.header)
}

// optional string instanceName = 2;
void ModelParams::clear_instancename() {
  instancename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModelParams::instancename() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.ModelParams.instanceName)
  return instancename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModelParams::set_instancename(const ::std::string& value) {
  
  instancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.ModelParams.instanceName)
}
 void ModelParams::set_instancename(const char* value) {
  
  instancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.ModelParams.instanceName)
}
 void ModelParams::set_instancename(const char* value, size_t size) {
  
  instancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.ModelParams.instanceName)
}
 ::std::string* ModelParams::mutable_instancename() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.ModelParams.instanceName)
  return instancename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModelParams::release_instancename() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.ModelParams.instanceName)
  
  return instancename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModelParams::set_allocated_instancename(::std::string* instancename) {
  if (instancename != NULL) {
    
  } else {
    
  }
  instancename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instancename);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.ModelParams.instanceName)
}

// optional string model = 3;
void ModelParams::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModelParams::model() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.ModelParams.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModelParams::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.ModelParams.model)
}
 void ModelParams::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.ModelParams.model)
}
 void ModelParams::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.ModelParams.model)
}
 ::std::string* ModelParams::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.ModelParams.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModelParams::release_model() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.ModelParams.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModelParams::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.ModelParams.model)
}

// map<string, double> params = 4;
int ModelParams::params_size() const {
  return params_.size();
}
void ModelParams::clear_params() {
  params_.Clear();
}
 const ::google::protobuf::Map< ::std::string, double >&
ModelParams::params() const {
  // @@protoc_insertion_point(field_map:Micro.Future.Message.ModelParams.params)
  return params_.GetMap();
}
 ::google::protobuf::Map< ::std::string, double >*
ModelParams::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:Micro.Future.Message.ModelParams.params)
  return params_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Future
}  // namespace Micro

// @@protoc_insertion_point(global_scope)
