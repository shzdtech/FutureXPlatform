// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modelalgorithm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modelalgorithm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Micro {
namespace Future {
namespace Message {

namespace {

const ::google::protobuf::Descriptor* ModelParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModelParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModelParams_ScalaParamsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ModelParams_double_vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModelParams_double_vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModelParams_VectorParamsEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_modelalgorithm_2eproto() {
  protobuf_AddDesc_modelalgorithm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "modelalgorithm.proto");
  GOOGLE_CHECK(file != NULL);
  ModelParams_descriptor_ = file->message_type(0);
  static const int ModelParams_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, modelname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, scalaparams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, vectorparams_),
  };
  ModelParams_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModelParams_descriptor_,
      ModelParams::default_instance_,
      ModelParams_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModelParams),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams, _is_default_instance_));
  ModelParams_ScalaParamsEntry_descriptor_ = ModelParams_descriptor_->nested_type(0);
  ModelParams_double_vector_descriptor_ = ModelParams_descriptor_->nested_type(1);
  static const int ModelParams_double_vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams_double_vector, entry_),
  };
  ModelParams_double_vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModelParams_double_vector_descriptor_,
      ModelParams_double_vector::default_instance_,
      ModelParams_double_vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModelParams_double_vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams_double_vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelParams_double_vector, _is_default_instance_));
  ModelParams_VectorParamsEntry_descriptor_ = ModelParams_descriptor_->nested_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_modelalgorithm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModelParams_descriptor_, &ModelParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ModelParams_ScalaParamsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            double,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
            0>::CreateDefaultInstance(
                ModelParams_ScalaParamsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModelParams_double_vector_descriptor_, &ModelParams_double_vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ModelParams_VectorParamsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::Micro::Future::Message::ModelParams_double_vector,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                ModelParams_VectorParamsEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_modelalgorithm_2eproto() {
  delete ModelParams::default_instance_;
  delete ModelParams_reflection_;
  delete ModelParams_double_vector::default_instance_;
  delete ModelParams_double_vector_reflection_;
}

void protobuf_AddDesc_modelalgorithm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024modelalgorithm.proto\022\024Micro.Future.Mes"
    "sage\"\356\002\n\013ModelParams\022\021\n\tmodelName\030\001 \001(\t\022"
    "G\n\013scalaParams\030\002 \003(\01322.Micro.Future.Mess"
    "age.ModelParams.ScalaParamsEntry\022I\n\014vect"
    "orParams\030\005 \003(\01323.Micro.Future.Message.Mo"
    "delParams.VectorParamsEntry\0322\n\020ScalaPara"
    "msEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\032"
    "\036\n\rdouble_vector\022\r\n\005entry\030\001 \003(\001\032d\n\021Vecto"
    "rParamsEntry\022\013\n\003key\030\001 \001(\t\022>\n\005value\030\002 \001(\013"
    "2/.Micro.Future.Message.ModelParams.doub"
    "le_vector:\0028\001b\006proto3", 421);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modelalgorithm.proto", &protobuf_RegisterTypes);
  ModelParams::default_instance_ = new ModelParams();
  ModelParams_double_vector::default_instance_ = new ModelParams_double_vector();
  ModelParams::default_instance_->InitAsDefaultInstance();
  ModelParams_double_vector::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_modelalgorithm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_modelalgorithm_2eproto {
  StaticDescriptorInitializer_modelalgorithm_2eproto() {
    protobuf_AddDesc_modelalgorithm_2eproto();
  }
} static_descriptor_initializer_modelalgorithm_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelParams_double_vector::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelParams_double_vector::ModelParams_double_vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.ModelParams.double_vector)
}

void ModelParams_double_vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ModelParams_double_vector::ModelParams_double_vector(const ModelParams_double_vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.ModelParams.double_vector)
}

void ModelParams_double_vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ModelParams_double_vector::~ModelParams_double_vector() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.ModelParams.double_vector)
  SharedDtor();
}

void ModelParams_double_vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ModelParams_double_vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelParams_double_vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModelParams_double_vector_descriptor_;
}

const ModelParams_double_vector& ModelParams_double_vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_modelalgorithm_2eproto();
  return *default_instance_;
}

ModelParams_double_vector* ModelParams_double_vector::default_instance_ = NULL;

ModelParams_double_vector* ModelParams_double_vector::New(::google::protobuf::Arena* arena) const {
  ModelParams_double_vector* n = new ModelParams_double_vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelParams_double_vector::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.ModelParams.double_vector)
  entry_.Clear();
}

bool ModelParams_double_vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.ModelParams.double_vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double entry = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_entry())));
        } else if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10, input, this->mutable_entry())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.ModelParams.double_vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.ModelParams.double_vector)
  return false;
#undef DO_
}

void ModelParams_double_vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.ModelParams.double_vector)
  // repeated double entry = 1;
  if (this->entry_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_entry_cached_byte_size_);
  }
  for (int i = 0; i < this->entry_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->entry(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.ModelParams.double_vector)
}

::google::protobuf::uint8* ModelParams_double_vector::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.ModelParams.double_vector)
  // repeated double entry = 1;
  if (this->entry_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _entry_cached_byte_size_, target);
  }
  for (int i = 0; i < this->entry_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->entry(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.ModelParams.double_vector)
  return target;
}

int ModelParams_double_vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.ModelParams.double_vector)
  int total_size = 0;

  // repeated double entry = 1;
  {
    int data_size = 0;
    data_size = 8 * this->entry_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entry_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelParams_double_vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.ModelParams.double_vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModelParams_double_vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelParams_double_vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.ModelParams.double_vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.ModelParams.double_vector)
    MergeFrom(*source);
  }
}

void ModelParams_double_vector::MergeFrom(const ModelParams_double_vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.ModelParams.double_vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entry_.MergeFrom(from.entry_);
}

void ModelParams_double_vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.ModelParams.double_vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelParams_double_vector::CopyFrom(const ModelParams_double_vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.ModelParams.double_vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelParams_double_vector::IsInitialized() const {

  return true;
}

void ModelParams_double_vector::Swap(ModelParams_double_vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelParams_double_vector::InternalSwap(ModelParams_double_vector* other) {
  entry_.UnsafeArenaSwap(&other->entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelParams_double_vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModelParams_double_vector_descriptor_;
  metadata.reflection = ModelParams_double_vector_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelParams::kModelNameFieldNumber;
const int ModelParams::kScalaParamsFieldNumber;
const int ModelParams::kVectorParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelParams::ModelParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.ModelParams)
}

void ModelParams::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ModelParams::ModelParams(const ModelParams& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.ModelParams)
}

void ModelParams::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  modelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scalaparams_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  scalaparams_.SetEntryDescriptor(
      &::Micro::Future::Message::ModelParams_ScalaParamsEntry_descriptor_);
  vectorparams_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  vectorparams_.SetEntryDescriptor(
      &::Micro::Future::Message::ModelParams_VectorParamsEntry_descriptor_);
}

ModelParams::~ModelParams() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.ModelParams)
  SharedDtor();
}

void ModelParams::SharedDtor() {
  modelname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ModelParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModelParams_descriptor_;
}

const ModelParams& ModelParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_modelalgorithm_2eproto();
  return *default_instance_;
}

ModelParams* ModelParams::default_instance_ = NULL;

ModelParams* ModelParams::New(::google::protobuf::Arena* arena) const {
  ModelParams* n = new ModelParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelParams::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.ModelParams)
  modelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scalaparams_.Clear();
  vectorparams_.Clear();
}

bool ModelParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.ModelParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string modelName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modelname().data(), this->modelname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.ModelParams.modelName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_scalaParams;
        break;
      }

      // map<string, double> scalaParams = 2;
      case 2: {
        if (tag == 18) {
         parse_scalaParams:
          DO_(input->IncrementRecursionDepth());
         parse_loop_scalaParams:
          ::google::protobuf::scoped_ptr<ModelParams_ScalaParamsEntry> entry(scalaparams_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_scalaparams())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->key().data(), entry->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.ModelParams.ScalaParamsEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_scalaParams;
        if (input->ExpectTag(42)) goto parse_loop_vectorParams;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .Micro.Future.Message.ModelParams.double_vector> vectorParams = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_vectorParams:
          ::google::protobuf::scoped_ptr<ModelParams_VectorParamsEntry> entry(vectorparams_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_vectorparams())[entry->key()].Swap(entry->mutable_value());
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->key().data(), entry->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.ModelParams.VectorParamsEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_vectorParams;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.ModelParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.ModelParams)
  return false;
#undef DO_
}

void ModelParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.ModelParams)
  // optional string modelName = 1;
  if (this->modelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modelname().data(), this->modelname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.ModelParams.modelName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->modelname(), output);
  }

  // map<string, double> scalaParams = 2;
  {
    ::google::protobuf::scoped_ptr<ModelParams_ScalaParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->scalaparams().begin();
        it != this->scalaparams().end(); ++it) {
      entry.reset(scalaparams_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          2, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.ModelParams.ScalaParamsEntry.key");
    }
  }

  // map<string, .Micro.Future.Message.ModelParams.double_vector> vectorParams = 5;
  {
    ::google::protobuf::scoped_ptr<ModelParams_VectorParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::Micro::Future::Message::ModelParams_double_vector >::const_iterator
        it = this->vectorparams().begin();
        it != this->vectorparams().end(); ++it) {
      entry.reset(vectorparams_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          5, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.ModelParams.VectorParamsEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.ModelParams)
}

::google::protobuf::uint8* ModelParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.ModelParams)
  // optional string modelName = 1;
  if (this->modelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modelname().data(), this->modelname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.ModelParams.modelName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->modelname(), target);
  }

  // map<string, double> scalaParams = 2;
  {
    ::google::protobuf::scoped_ptr<ModelParams_ScalaParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->scalaparams().begin();
        it != this->scalaparams().end(); ++it) {
      entry.reset(scalaparams_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              2, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.ModelParams.ScalaParamsEntry.key");
    }
  }

  // map<string, .Micro.Future.Message.ModelParams.double_vector> vectorParams = 5;
  {
    ::google::protobuf::scoped_ptr<ModelParams_VectorParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::Micro::Future::Message::ModelParams_double_vector >::const_iterator
        it = this->vectorparams().begin();
        it != this->vectorparams().end(); ++it) {
      entry.reset(vectorparams_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              5, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.ModelParams.VectorParamsEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.ModelParams)
  return target;
}

int ModelParams::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.ModelParams)
  int total_size = 0;

  // optional string modelName = 1;
  if (this->modelname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modelname());
  }

  // map<string, double> scalaParams = 2;
  total_size += 1 * this->scalaparams_size();
  {
    ::google::protobuf::scoped_ptr<ModelParams_ScalaParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->scalaparams().begin();
        it != this->scalaparams().end(); ++it) {
      entry.reset(scalaparams_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .Micro.Future.Message.ModelParams.double_vector> vectorParams = 5;
  total_size += 1 * this->vectorparams_size();
  {
    ::google::protobuf::scoped_ptr<ModelParams_VectorParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::Micro::Future::Message::ModelParams_double_vector >::const_iterator
        it = this->vectorparams().begin();
        it != this->vectorparams().end(); ++it) {
      entry.reset(vectorparams_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.ModelParams)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModelParams* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.ModelParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.ModelParams)
    MergeFrom(*source);
  }
}

void ModelParams::MergeFrom(const ModelParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.ModelParams)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  scalaparams_.MergeFrom(from.scalaparams_);
  vectorparams_.MergeFrom(from.vectorparams_);
  if (from.modelname().size() > 0) {

    modelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelname_);
  }
}

void ModelParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.ModelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelParams::CopyFrom(const ModelParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.ModelParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelParams::IsInitialized() const {

  return true;
}

void ModelParams::Swap(ModelParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelParams::InternalSwap(ModelParams* other) {
  modelname_.Swap(&other->modelname_);
  scalaparams_.Swap(&other->scalaparams_);
  vectorparams_.Swap(&other->vectorparams_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModelParams_descriptor_;
  metadata.reflection = ModelParams_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelParams_double_vector

// repeated double entry = 1;
int ModelParams_double_vector::entry_size() const {
  return entry_.size();
}
void ModelParams_double_vector::clear_entry() {
  entry_.Clear();
}
 double ModelParams_double_vector::entry(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.ModelParams.double_vector.entry)
  return entry_.Get(index);
}
 void ModelParams_double_vector::set_entry(int index, double value) {
  entry_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.ModelParams.double_vector.entry)
}
 void ModelParams_double_vector::add_entry(double value) {
  entry_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.ModelParams.double_vector.entry)
}
 const ::google::protobuf::RepeatedField< double >&
ModelParams_double_vector::entry() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.ModelParams.double_vector.entry)
  return entry_;
}
 ::google::protobuf::RepeatedField< double >*
ModelParams_double_vector::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.ModelParams.double_vector.entry)
  return &entry_;
}

// -------------------------------------------------------------------

// ModelParams

// optional string modelName = 1;
void ModelParams::clear_modelname() {
  modelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ModelParams::modelname() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.ModelParams.modelName)
  return modelname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModelParams::set_modelname(const ::std::string& value) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.ModelParams.modelName)
}
 void ModelParams::set_modelname(const char* value) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.ModelParams.modelName)
}
 void ModelParams::set_modelname(const char* value, size_t size) {
  
  modelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.ModelParams.modelName)
}
 ::std::string* ModelParams::mutable_modelname() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.ModelParams.modelName)
  return modelname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModelParams::release_modelname() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.ModelParams.modelName)
  
  return modelname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModelParams::set_allocated_modelname(::std::string* modelname) {
  if (modelname != NULL) {
    
  } else {
    
  }
  modelname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modelname);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.ModelParams.modelName)
}

// map<string, double> scalaParams = 2;
int ModelParams::scalaparams_size() const {
  return scalaparams_.size();
}
void ModelParams::clear_scalaparams() {
  scalaparams_.Clear();
}
 const ::google::protobuf::Map< ::std::string, double >&
ModelParams::scalaparams() const {
  // @@protoc_insertion_point(field_map:Micro.Future.Message.ModelParams.scalaParams)
  return scalaparams_.GetMap();
}
 ::google::protobuf::Map< ::std::string, double >*
ModelParams::mutable_scalaparams() {
  // @@protoc_insertion_point(field_mutable_map:Micro.Future.Message.ModelParams.scalaParams)
  return scalaparams_.MutableMap();
}

// map<string, .Micro.Future.Message.ModelParams.double_vector> vectorParams = 5;
int ModelParams::vectorparams_size() const {
  return vectorparams_.size();
}
void ModelParams::clear_vectorparams() {
  vectorparams_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::Micro::Future::Message::ModelParams_double_vector >&
ModelParams::vectorparams() const {
  // @@protoc_insertion_point(field_map:Micro.Future.Message.ModelParams.vectorParams)
  return vectorparams_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::Micro::Future::Message::ModelParams_double_vector >*
ModelParams::mutable_vectorparams() {
  // @@protoc_insertion_point(field_mutable_map:Micro.Future.Message.ModelParams.vectorParams)
  return vectorparams_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Future
}  // namespace Micro

// @@protoc_insertion_point(global_scope)
