// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: businessobj.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "businessobj.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Micro {
namespace Future {
namespace Message {
namespace Business {

namespace {

const ::google::protobuf::Descriptor* PBMarketData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMarketData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMarketDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMarketDataList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPricingData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPricingData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPricingDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPricingDataList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPricingContract_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPricingContract_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBStrategy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBStrategy_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBStrategy_ParamsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PBStrategyList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBStrategyList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractParamList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractParamList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOTCUserParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOTCUserParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOTCUserParamList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOTCUserParamList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOrderRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOrderRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTradeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTradeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBAccountInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBAccountInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMarketInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMarketInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOptionPricing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOptionPricing_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_businessobj_2eproto() {
  protobuf_AddDesc_businessobj_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "businessobj.proto");
  GOOGLE_CHECK(file != NULL);
  PBMarketData_descriptor_ = file->message_type(0);
  static const int PBMarketData_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, preclosevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, openvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, highvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, lowvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, matchprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, askvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, bidvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, presettleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, pricechange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, settleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, highlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, lowlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, preopeninterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, openinterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, averageprice_),
  };
  PBMarketData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMarketData_descriptor_,
      PBMarketData::default_instance_,
      PBMarketData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMarketData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, _is_default_instance_));
  PBMarketDataList_descriptor_ = file->message_type(1);
  static const int PBMarketDataList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, marketdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, header_),
  };
  PBMarketDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMarketDataList_descriptor_,
      PBMarketDataList::default_instance_,
      PBMarketDataList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMarketDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, _is_default_instance_));
  PBPricingData_descriptor_ = file->message_type(2);
  static const int PBPricingData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, bidprice_),
  };
  PBPricingData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPricingData_descriptor_,
      PBPricingData::default_instance_,
      PBPricingData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPricingData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, _is_default_instance_));
  PBPricingDataList_descriptor_ = file->message_type(3);
  static const int PBPricingDataList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, pricingdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, header_),
  };
  PBPricingDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPricingDataList_descriptor_,
      PBPricingDataList::default_instance_,
      PBPricingDataList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPricingDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, _is_default_instance_));
  PBPricingContract_descriptor_ = file->message_type(4);
  static const int PBPricingContract_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, weight_),
  };
  PBPricingContract_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPricingContract_descriptor_,
      PBPricingContract::default_instance_,
      PBPricingContract_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPricingContract),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, _is_default_instance_));
  PBStrategy_descriptor_ = file->message_type(5);
  static const int PBStrategy_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, underlying_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, allowtrading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, enabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, pricingcontracts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, params_),
  };
  PBStrategy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBStrategy_descriptor_,
      PBStrategy::default_instance_,
      PBStrategy_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBStrategy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, _is_default_instance_));
  PBStrategy_ParamsEntry_descriptor_ = PBStrategy_descriptor_->nested_type(0);
  PBStrategyList_descriptor_ = file->message_type(6);
  static const int PBStrategyList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, strategy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, header_),
  };
  PBStrategyList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBStrategyList_descriptor_,
      PBStrategyList::default_instance_,
      PBStrategyList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBStrategyList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, _is_default_instance_));
  PBContractParam_descriptor_ = file->message_type(7);
  static const int PBContractParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, depthvol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, gamma_),
  };
  PBContractParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractParam_descriptor_,
      PBContractParam::default_instance_,
      PBContractParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, _is_default_instance_));
  PBContractParamList_descriptor_ = file->message_type(8);
  static const int PBContractParamList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, header_),
  };
  PBContractParamList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractParamList_descriptor_,
      PBContractParamList::default_instance_,
      PBContractParamList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractParamList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, _is_default_instance_));
  PBOTCUserParam_descriptor_ = file->message_type(9);
  static const int PBOTCUserParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, quantity_),
  };
  PBOTCUserParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOTCUserParam_descriptor_,
      PBOTCUserParam::default_instance_,
      PBOTCUserParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOTCUserParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, _is_default_instance_));
  PBOTCUserParamList_descriptor_ = file->message_type(10);
  static const int PBOTCUserParamList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, header_),
  };
  PBOTCUserParamList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOTCUserParamList_descriptor_,
      PBOTCUserParamList::default_instance_,
      PBOTCUserParamList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOTCUserParamList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, _is_default_instance_));
  PBOrderRequest_descriptor_ = file->message_type(11);
  static const int PBOrderRequest_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, ordersysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, limitprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, exectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, tif_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, callput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, openclose_),
  };
  PBOrderRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOrderRequest_descriptor_,
      PBOrderRequest::default_instance_,
      PBOrderRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOrderRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, _is_default_instance_));
  PBOrderInfo_descriptor_ = file->message_type(12);
  static const int PBOrderInfo_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, ordersysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, investorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, exectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, tif_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, tradingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, limitprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, stopprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, orderstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, ordertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, inserttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, canceltime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volumetraded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volumeremain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volumecondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, tradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, openclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, header_),
  };
  PBOrderInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOrderInfo_descriptor_,
      PBOrderInfo::default_instance_,
      PBOrderInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOrderInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, _is_default_instance_));
  PBTradeInfo_descriptor_ = file->message_type(13);
  static const int PBTradeInfo_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, openclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, ordersysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, investorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, hedgeflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, commission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, header_),
  };
  PBTradeInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTradeInfo_descriptor_,
      PBTradeInfo::default_instance_,
      PBTradeInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTradeInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, _is_default_instance_));
  PBPosition_descriptor_ = file->message_type(14);
  static const int PBPosition_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, ydposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, positiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, openvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, closevolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, openamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, closeamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, opencost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, profit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, closeprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, usemargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, hedgeflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, header_),
  };
  PBPosition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPosition_descriptor_,
      PBPosition::default_instance_,
      PBPosition_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPosition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _is_default_instance_));
  PBAccountInfo_descriptor_ = file->message_type(15);
  static const int PBAccountInfo_offsets_[32] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, premortgage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, precredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, predeposit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, prebalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, premargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, interestbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, interest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, deposit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, withdraw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, frozenmargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, frozencash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, frozencommission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, currmargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, cashin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, commission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, closeprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, positionprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, available_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, withdrawquota_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, reserve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, tradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, settlementid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, credit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, mortgage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, exchangemargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, deliverymargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, exchangedeliverymargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, reservebalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, header_),
  };
  PBAccountInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBAccountInfo_descriptor_,
      PBAccountInfo::default_instance_,
      PBAccountInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBAccountInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, _is_default_instance_));
  PBMarketInfo_descriptor_ = file->message_type(16);
  static const int PBMarketInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, property_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, header_),
  };
  PBMarketInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMarketInfo_descriptor_,
      PBMarketInfo::default_instance_,
      PBMarketInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMarketInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, _is_default_instance_));
  PBContractInfo_descriptor_ = file->message_type(17);
  static const int PBContractInfo_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, producttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, deliveryyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, deliverymonth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, maxmarketordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, minmarketordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, maxlimitordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, minlimitordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, volumemultiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, pricetick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, createdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, opendate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, expiredate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, startdelivdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, enddelivdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, lifephase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, istrading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, positiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, positiondatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, longmarginratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, shortmarginratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, groupname_),
  };
  PBContractInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractInfo_descriptor_,
      PBContractInfo::default_instance_,
      PBContractInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, _is_default_instance_));
  PBContractInfoList_descriptor_ = file->message_type(18);
  static const int PBContractInfoList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, contractinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, header_),
  };
  PBContractInfoList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractInfoList_descriptor_,
      PBContractInfoList::default_instance_,
      PBContractInfoList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractInfoList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, _is_default_instance_));
  PBOptionPricing_descriptor_ = file->message_type(19);
  static const int PBOptionPricing_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, strikeprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, putbidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, putaskprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, callbidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, callaskprice_),
  };
  PBOptionPricing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOptionPricing_descriptor_,
      PBOptionPricing::default_instance_,
      PBOptionPricing_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOptionPricing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionPricing, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_businessobj_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMarketData_descriptor_, &PBMarketData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMarketDataList_descriptor_, &PBMarketDataList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPricingData_descriptor_, &PBPricingData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPricingDataList_descriptor_, &PBPricingDataList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPricingContract_descriptor_, &PBPricingContract::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBStrategy_descriptor_, &PBStrategy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        PBStrategy_ParamsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            double,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
            0>::CreateDefaultInstance(
                PBStrategy_ParamsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBStrategyList_descriptor_, &PBStrategyList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractParam_descriptor_, &PBContractParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractParamList_descriptor_, &PBContractParamList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOTCUserParam_descriptor_, &PBOTCUserParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOTCUserParamList_descriptor_, &PBOTCUserParamList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOrderRequest_descriptor_, &PBOrderRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOrderInfo_descriptor_, &PBOrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTradeInfo_descriptor_, &PBTradeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPosition_descriptor_, &PBPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBAccountInfo_descriptor_, &PBAccountInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMarketInfo_descriptor_, &PBMarketInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractInfo_descriptor_, &PBContractInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractInfoList_descriptor_, &PBContractInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOptionPricing_descriptor_, &PBOptionPricing::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_businessobj_2eproto() {
  delete PBMarketData::default_instance_;
  delete PBMarketData_reflection_;
  delete PBMarketDataList::default_instance_;
  delete PBMarketDataList_reflection_;
  delete PBPricingData::default_instance_;
  delete PBPricingData_reflection_;
  delete PBPricingDataList::default_instance_;
  delete PBPricingDataList_reflection_;
  delete PBPricingContract::default_instance_;
  delete PBPricingContract_reflection_;
  delete PBStrategy::default_instance_;
  delete PBStrategy_reflection_;
  delete PBStrategyList::default_instance_;
  delete PBStrategyList_reflection_;
  delete PBContractParam::default_instance_;
  delete PBContractParam_reflection_;
  delete PBContractParamList::default_instance_;
  delete PBContractParamList_reflection_;
  delete PBOTCUserParam::default_instance_;
  delete PBOTCUserParam_reflection_;
  delete PBOTCUserParamList::default_instance_;
  delete PBOTCUserParamList_reflection_;
  delete PBOrderRequest::default_instance_;
  delete PBOrderRequest_reflection_;
  delete PBOrderInfo::default_instance_;
  delete PBOrderInfo_reflection_;
  delete PBTradeInfo::default_instance_;
  delete PBTradeInfo_reflection_;
  delete PBPosition::default_instance_;
  delete PBPosition_reflection_;
  delete PBAccountInfo::default_instance_;
  delete PBAccountInfo_reflection_;
  delete PBMarketInfo::default_instance_;
  delete PBMarketInfo_reflection_;
  delete PBContractInfo::default_instance_;
  delete PBContractInfo_reflection_;
  delete PBContractInfoList::default_instance_;
  delete PBContractInfoList_reflection_;
  delete PBOptionPricing::default_instance_;
  delete PBOptionPricing_reflection_;
}

void protobuf_AddDesc_businessobj_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Micro::Future::Message::protobuf_AddDesc_commondefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021businessobj.proto\022\035Micro.Future.Messag"
    "e.Business\032\022commondefine.proto\"\255\003\n\014PBMar"
    "ketData\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 "
    "\001(\t\022\025\n\rpreCloseValue\030\003 \001(\001\022\021\n\topenValue\030"
    "\004 \001(\001\022\020\n\010turnover\030\005 \001(\001\022\016\n\006volume\030\006 \001(\005\022"
    "\021\n\thighValue\030\007 \001(\001\022\020\n\010lowValue\030\010 \001(\001\022\022\n\n"
    "matchPrice\030\t \001(\001\022\020\n\010askPrice\030\n \003(\001\022\021\n\tas"
    "kVolume\030\013 \003(\005\022\020\n\010bidPrice\030\014 \003(\001\022\021\n\tbidVo"
    "lume\030\r \003(\005\022\026\n\016preSettlePrice\030\016 \001(\001\022\023\n\013pr"
    "iceChange\030\017 \001(\001\022\023\n\013settlePrice\030\020 \001(\001\022\021\n\t"
    "highLimit\030\021 \001(\005\022\020\n\010lowLimit\030\022 \001(\005\022\027\n\017pre"
    "OpenInterest\030\023 \001(\001\022\024\n\014openInterest\030\024 \001(\001"
    "\022\024\n\014averagePrice\030\025 \001(\001\"\205\001\n\020PBMarketDataL"
    "ist\022\?\n\nmarketData\030\001 \003(\0132+.Micro.Future.M"
    "essage.Business.PBMarketData\0220\n\006header\030\002"
    " \001(\0132 .Micro.Future.Message.DataHeader\"W"
    "\n\rPBPricingData\022\020\n\010exchange\030\001 \001(\t\022\020\n\010con"
    "tract\030\002 \001(\t\022\020\n\010askPrice\030\003 \001(\001\022\020\n\010bidPric"
    "e\030\004 \001(\001\"\210\001\n\021PBPricingDataList\022A\n\013pricing"
    "Data\030\001 \003(\0132,.Micro.Future.Message.Busine"
    "ss.PBPricingData\0220\n\006header\030\002 \001(\0132 .Micro"
    ".Future.Message.DataHeader\"G\n\021PBPricingC"
    "ontract\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 "
    "\001(\t\022\016\n\006weight\030\003 \001(\001\"\363\002\n\nPBStrategy\022\020\n\010ex"
    "change\030\001 \001(\t\022\020\n\010contract\030\002 \001(\t\022\022\n\nunderl"
    "ying\030\003 \001(\t\022\016\n\006symbol\030\004 \001(\t\022\023\n\013descriptio"
    "n\030\005 \001(\t\022\024\n\014allowTrading\030\006 \001(\010\022\017\n\007enabled"
    "\030\007 \001(\010\022\020\n\010quantity\030\010 \001(\005\022\r\n\005depth\030\t \001(\005\022"
    "J\n\020pricingContracts\030\n \003(\01320.Micro.Future"
    ".Message.Business.PBPricingContract\022E\n\006p"
    "arams\030\013 \003(\01325.Micro.Future.Message.Busin"
    "ess.PBStrategy.ParamsEntry\032-\n\013ParamsEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"\177\n\016PBS"
    "trategyList\022;\n\010strategy\030\001 \003(\0132).Micro.Fu"
    "ture.Message.Business.PBStrategy\0220\n\006head"
    "er\030\002 \001(\0132 .Micro.Future.Message.DataHead"
    "er\"V\n\017PBContractParam\022\020\n\010exchange\030\001 \001(\t\022"
    "\020\n\010contract\030\002 \001(\t\022\020\n\010depthVol\030\003 \001(\005\022\r\n\005g"
    "amma\030\004 \001(\001\"\207\001\n\023PBContractParamList\022>\n\006pa"
    "rams\030\001 \003(\0132..Micro.Future.Message.Busine"
    "ss.PBContractParam\0220\n\006header\030\002 \001(\0132 .Mic"
    "ro.Future.Message.DataHeader\"F\n\016PBOTCUse"
    "rParam\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 \001"
    "(\t\022\020\n\010quantity\030\003 \001(\001\"\205\001\n\022PBOTCUserParamL"
    "ist\022=\n\006params\030\001 \003(\0132-.Micro.Future.Messa"
    "ge.Business.PBOTCUserParam\0220\n\006header\030\002 \001"
    "(\0132 .Micro.Future.Message.DataHeader\"\205\002\n"
    "\016PBOrderRequest\0220\n\006header\030\001 \001(\0132 .Micro."
    "Future.Message.DataHeader\022\017\n\007orderID\030\002 \001"
    "(\004\022\022\n\norderSysID\030\003 \001(\004\022\020\n\010exchange\030\004 \001(\t"
    "\022\020\n\010contract\030\005 \001(\t\022\022\n\nlimitPrice\030\006 \001(\001\022\016"
    "\n\006volume\030\007 \001(\005\022\020\n\010execType\030\010 \001(\005\022\013\n\003tif\030"
    "\t \001(\005\022\021\n\tdirection\030\n \001(\005\022\017\n\007callput\030\013 \001("
    "\005\022\021\n\topenclose\030\014 \001(\005\"\260\004\n\013PBOrderInfo\022\017\n\007"
    "orderID\030\001 \001(\004\022\022\n\norderSysID\030\002 \001(\004\022\020\n\010bro"
    "kerID\030\003 \001(\t\022\022\n\ninvestorID\030\004 \001(\t\022\020\n\010excha"
    "nge\030\005 \001(\t\022\020\n\010contract\030\006 \001(\t\022\020\n\010execType\030"
    "\007 \001(\005\022\013\n\003tif\030\010 \001(\005\022\023\n\013tradingType\030\t \001(\005\022"
    "\021\n\tdirection\030\n \001(\005\022\022\n\nlimitPrice\030\013 \001(\001\022\021"
    "\n\tstopPrice\030\014 \001(\001\022\023\n\013orderStatus\030\r \001(\005\022\021"
    "\n\torderType\030\016 \001(\005\022\016\n\006volume\030\017 \001(\005\022\022\n\nins"
    "ertTime\030\021 \001(\t\022\022\n\nupdateTime\030\022 \001(\t\022\022\n\ncan"
    "celTime\030\023 \001(\t\022\024\n\014volumeTraded\030\024 \001(\005\022\024\n\014v"
    "olumeRemain\030\025 \001(\005\022\027\n\017volumeCondition\030\026 \001"
    "(\005\022\022\n\ntradingDay\030\027 \001(\005\022\016\n\006active\030\030 \001(\010\022\021"
    "\n\topenclose\030\031 \001(\005\022\017\n\007message\030\032 \001(\014\022\021\n\tse"
    "ssionID\030\033 \001(\005\0220\n\006header\030\034 \001(\0132 .Micro.Fu"
    "ture.Message.DataHeader\"\364\002\n\013PBTradeInfo\022"
    "\017\n\007tradeID\030\001 \001(\004\022\021\n\tdirection\030\002 \001(\005\022\021\n\to"
    "penclose\030\003 \001(\005\022\022\n\norderSysID\030\004 \001(\004\022\017\n\007or"
    "derID\030\005 \001(\004\022\r\n\005price\030\006 \001(\001\022\016\n\006volume\030\007 \001"
    "(\005\022\020\n\010brokerID\030\010 \001(\t\022\022\n\ninvestorID\030\t \001(\t"
    "\022\020\n\010exchange\030\n \001(\t\022\020\n\010contract\030\013 \001(\t\022\016\n\006"
    "userID\030\014 \001(\t\022\021\n\ttradeDate\030\r \001(\t\022\021\n\ttrade"
    "Time\030\016 \001(\t\022\021\n\ttradeType\030\017 \001(\005\022\021\n\thedgeFl"
    "ag\030\020 \001(\005\022\022\n\ncommission\030\021 \001(\001\0220\n\006header\030\022"
    " \001(\0132 .Micro.Future.Message.DataHeader\"\356"
    "\002\n\nPBPosition\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contr"
    "act\030\002 \001(\t\022\021\n\tdirection\030\003 \001(\005\022\020\n\010position"
    "\030\005 \001(\005\022\022\n\nydPosition\030\004 \001(\005\022\024\n\014positionDa"
    "te\030\006 \001(\t\022\022\n\nopenVolume\030\007 \001(\005\022\023\n\013closeVol"
    "ume\030\010 \001(\005\022\022\n\nopenAmount\030\t \001(\001\022\023\n\013closeAm"
    "ount\030\n \001(\001\022\014\n\004cost\030\013 \001(\001\022\020\n\010openCost\030\014 \001"
    "(\001\022\016\n\006profit\030\r \001(\001\022\023\n\013closeProfit\030\016 \001(\001\022"
    "\021\n\tuseMargin\030\017 \001(\001\022\021\n\thedgeFlag\030\020 \001(\005\0220\n"
    "\006header\030\021 \001(\0132 .Micro.Future.Message.Dat"
    "aHeader\"\275\005\n\rPBAccountInfo\022\020\n\010brokerID\030\002 "
    "\001(\t\022\021\n\taccountID\030\003 \001(\t\022\023\n\013preMortgage\030\004 "
    "\001(\001\022\021\n\tpreCredit\030\005 \001(\001\022\022\n\npreDeposit\030\006 \001"
    "(\001\022\022\n\npreBalance\030\007 \001(\001\022\021\n\tpreMargin\030\010 \001("
    "\001\022\024\n\014interestBase\030\t \001(\001\022\020\n\010interest\030\n \001("
    "\001\022\017\n\007deposit\030\013 \001(\001\022\020\n\010withdraw\030\014 \001(\001\022\024\n\014"
    "frozenMargin\030\r \001(\001\022\022\n\nfrozenCash\030\016 \001(\001\022\030"
    "\n\020frozenCommission\030\017 \001(\001\022\022\n\ncurrMargin\030\020"
    " \001(\001\022\016\n\006cashIn\030\021 \001(\001\022\022\n\ncommission\030\022 \001(\001"
    "\022\023\n\013closeProfit\030\023 \001(\001\022\026\n\016positionProfit\030"
    "\024 \001(\001\022\017\n\007balance\030\025 \001(\001\022\021\n\tavailable\030\026 \001("
    "\001\022\025\n\rwithdrawQuota\030\027 \001(\001\022\017\n\007reserve\030\030 \001("
    "\001\022\022\n\ntradingDay\030\031 \001(\t\022\024\n\014settlementID\030\032 "
    "\001(\005\022\016\n\006credit\030\033 \001(\001\022\020\n\010mortgage\030\034 \001(\001\022\026\n"
    "\016exchangeMargin\030\035 \001(\001\022\026\n\016deliveryMargin\030"
    "\036 \001(\001\022\036\n\026exchangeDeliveryMargin\030\037 \001(\001\022\026\n"
    "\016reserveBalance\030  \001(\001\0220\n\006header\030! \001(\0132 ."
    "Micro.Future.Message.DataHeader\"r\n\014PBMar"
    "ketInfo\022\020\n\010exchange\030\001 \001(\t\022\014\n\004name\030\002 \001(\014\022"
    "\020\n\010property\030\003 \001(\014\0220\n\006header\030\004 \001(\0132 .Micr"
    "o.Future.Message.DataHeader\"\274\004\n\016PBContra"
    "ctInfo\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 \001"
    "(\t\022\014\n\004name\030\003 \001(\014\022\021\n\tproductID\030\004 \001(\t\022\023\n\013p"
    "roductType\030\005 \001(\005\022\024\n\014deliveryYear\030\006 \001(\005\022\025"
    "\n\rdeliveryMonth\030\007 \001(\005\022\034\n\024maxMarketOrderV"
    "olume\030\010 \001(\005\022\034\n\024minMarketOrderVolume\030\t \001("
    "\005\022\033\n\023maxLimitOrderVolume\030\n \001(\005\022\033\n\023minLim"
    "itOrderVolume\030\013 \001(\005\022\026\n\016volumeMultiple\030\014 "
    "\001(\005\022\021\n\tpriceTick\030\r \001(\005\022\022\n\ncreateDate\030\016 \001"
    "(\t\022\020\n\010openDate\030\017 \001(\t\022\022\n\nexpireDate\030\020 \001(\t"
    "\022\026\n\016startDelivDate\030\021 \001(\t\022\024\n\014endDelivDate"
    "\030\022 \001(\t\022\021\n\tlifePhase\030\023 \001(\005\022\021\n\tisTrading\030\024"
    " \001(\005\022\024\n\014positionType\030\025 \001(\005\022\030\n\020positionDa"
    "teType\030\026 \001(\005\022\027\n\017longMarginRatio\030\027 \001(\001\022\030\n"
    "\020shortMarginRatio\030\030 \001(\001\022\021\n\tgroupName\030\031 \001"
    "(\t\"\213\001\n\022PBContractInfoList\022C\n\014contractInf"
    "o\030\001 \003(\0132-.Micro.Future.Message.Business."
    "PBContractInfo\0220\n\006header\030\002 \001(\0132 .Micro.F"
    "uture.Message.DataHeader\"\322\001\n\017PBOptionPri"
    "cing\0220\n\006header\030\001 \001(\0132 .Micro.Future.Mess"
    "age.DataHeader\022\020\n\010exchange\030\002 \001(\t\022\020\n\010cont"
    "ract\030\003 \001(\t\022\023\n\013strikePrice\030\004 \003(\001\022\023\n\013putBi"
    "dPrice\030\005 \003(\001\022\023\n\013putAskPrice\030\006 \003(\001\022\024\n\014cal"
    "lBidPrice\030\007 \003(\001\022\024\n\014callAskPrice\030\010 \003(\001b\006p"
    "roto3", 5205);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "businessobj.proto", &protobuf_RegisterTypes);
  PBMarketData::default_instance_ = new PBMarketData();
  PBMarketDataList::default_instance_ = new PBMarketDataList();
  PBPricingData::default_instance_ = new PBPricingData();
  PBPricingDataList::default_instance_ = new PBPricingDataList();
  PBPricingContract::default_instance_ = new PBPricingContract();
  PBStrategy::default_instance_ = new PBStrategy();
  PBStrategyList::default_instance_ = new PBStrategyList();
  PBContractParam::default_instance_ = new PBContractParam();
  PBContractParamList::default_instance_ = new PBContractParamList();
  PBOTCUserParam::default_instance_ = new PBOTCUserParam();
  PBOTCUserParamList::default_instance_ = new PBOTCUserParamList();
  PBOrderRequest::default_instance_ = new PBOrderRequest();
  PBOrderInfo::default_instance_ = new PBOrderInfo();
  PBTradeInfo::default_instance_ = new PBTradeInfo();
  PBPosition::default_instance_ = new PBPosition();
  PBAccountInfo::default_instance_ = new PBAccountInfo();
  PBMarketInfo::default_instance_ = new PBMarketInfo();
  PBContractInfo::default_instance_ = new PBContractInfo();
  PBContractInfoList::default_instance_ = new PBContractInfoList();
  PBOptionPricing::default_instance_ = new PBOptionPricing();
  PBMarketData::default_instance_->InitAsDefaultInstance();
  PBMarketDataList::default_instance_->InitAsDefaultInstance();
  PBPricingData::default_instance_->InitAsDefaultInstance();
  PBPricingDataList::default_instance_->InitAsDefaultInstance();
  PBPricingContract::default_instance_->InitAsDefaultInstance();
  PBStrategy::default_instance_->InitAsDefaultInstance();
  PBStrategyList::default_instance_->InitAsDefaultInstance();
  PBContractParam::default_instance_->InitAsDefaultInstance();
  PBContractParamList::default_instance_->InitAsDefaultInstance();
  PBOTCUserParam::default_instance_->InitAsDefaultInstance();
  PBOTCUserParamList::default_instance_->InitAsDefaultInstance();
  PBOrderRequest::default_instance_->InitAsDefaultInstance();
  PBOrderInfo::default_instance_->InitAsDefaultInstance();
  PBTradeInfo::default_instance_->InitAsDefaultInstance();
  PBPosition::default_instance_->InitAsDefaultInstance();
  PBAccountInfo::default_instance_->InitAsDefaultInstance();
  PBMarketInfo::default_instance_->InitAsDefaultInstance();
  PBContractInfo::default_instance_->InitAsDefaultInstance();
  PBContractInfoList::default_instance_->InitAsDefaultInstance();
  PBOptionPricing::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_businessobj_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_businessobj_2eproto {
  StaticDescriptorInitializer_businessobj_2eproto() {
    protobuf_AddDesc_businessobj_2eproto();
  }
} static_descriptor_initializer_businessobj_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMarketData::kExchangeFieldNumber;
const int PBMarketData::kContractFieldNumber;
const int PBMarketData::kPreCloseValueFieldNumber;
const int PBMarketData::kOpenValueFieldNumber;
const int PBMarketData::kTurnoverFieldNumber;
const int PBMarketData::kVolumeFieldNumber;
const int PBMarketData::kHighValueFieldNumber;
const int PBMarketData::kLowValueFieldNumber;
const int PBMarketData::kMatchPriceFieldNumber;
const int PBMarketData::kAskPriceFieldNumber;
const int PBMarketData::kAskVolumeFieldNumber;
const int PBMarketData::kBidPriceFieldNumber;
const int PBMarketData::kBidVolumeFieldNumber;
const int PBMarketData::kPreSettlePriceFieldNumber;
const int PBMarketData::kPriceChangeFieldNumber;
const int PBMarketData::kSettlePriceFieldNumber;
const int PBMarketData::kHighLimitFieldNumber;
const int PBMarketData::kLowLimitFieldNumber;
const int PBMarketData::kPreOpenInterestFieldNumber;
const int PBMarketData::kOpenInterestFieldNumber;
const int PBMarketData::kAveragePriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMarketData::PBMarketData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBMarketData)
}

void PBMarketData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBMarketData::PBMarketData(const PBMarketData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBMarketData)
}

void PBMarketData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preclosevalue_ = 0;
  openvalue_ = 0;
  turnover_ = 0;
  volume_ = 0;
  highvalue_ = 0;
  lowvalue_ = 0;
  matchprice_ = 0;
  presettleprice_ = 0;
  pricechange_ = 0;
  settleprice_ = 0;
  highlimit_ = 0;
  lowlimit_ = 0;
  preopeninterest_ = 0;
  openinterest_ = 0;
  averageprice_ = 0;
}

PBMarketData::~PBMarketData() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBMarketData)
  SharedDtor();
}

void PBMarketData::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBMarketData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMarketData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMarketData_descriptor_;
}

const PBMarketData& PBMarketData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBMarketData* PBMarketData::default_instance_ = NULL;

PBMarketData* PBMarketData::New(::google::protobuf::Arena* arena) const {
  PBMarketData* n = new PBMarketData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMarketData::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBMarketData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBMarketData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBMarketData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(preclosevalue_, lowvalue_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_ = 0;
  ZR_(presettleprice_, settleprice_);
  matchprice_ = 0;
  ZR_(preopeninterest_, lowlimit_);
  highlimit_ = 0;

#undef ZR_HELPER_
#undef ZR_

  askprice_.Clear();
  askvolume_.Clear();
  bidprice_.Clear();
  bidvolume_.Clear();
}

bool PBMarketData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBMarketData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBMarketData.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBMarketData.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_preCloseValue;
        break;
      }

      // optional double preCloseValue = 3;
      case 3: {
        if (tag == 25) {
         parse_preCloseValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preclosevalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_openValue;
        break;
      }

      // optional double openValue = 4;
      case 4: {
        if (tag == 33) {
         parse_openValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_turnover;
        break;
      }

      // optional double turnover = 5;
      case 5: {
        if (tag == 41) {
         parse_turnover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_volume;
        break;
      }

      // optional int32 volume = 6;
      case 6: {
        if (tag == 48) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_highValue;
        break;
      }

      // optional double highValue = 7;
      case 7: {
        if (tag == 57) {
         parse_highValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_lowValue;
        break;
      }

      // optional double lowValue = 8;
      case 8: {
        if (tag == 65) {
         parse_lowValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_matchPrice;
        break;
      }

      // optional double matchPrice = 9;
      case 9: {
        if (tag == 73) {
         parse_matchPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &matchprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_askPrice;
        break;
      }

      // repeated double askPrice = 10;
      case 10: {
        if (tag == 82) {
         parse_askPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_askprice())));
        } else if (tag == 81) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 82, input, this->mutable_askprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_askVolume;
        break;
      }

      // repeated int32 askVolume = 11;
      case 11: {
        if (tag == 90) {
         parse_askVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_askvolume())));
        } else if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90, input, this->mutable_askvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_bidPrice;
        break;
      }

      // repeated double bidPrice = 12;
      case 12: {
        if (tag == 98) {
         parse_bidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bidprice())));
        } else if (tag == 97) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 98, input, this->mutable_bidprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_bidVolume;
        break;
      }

      // repeated int32 bidVolume = 13;
      case 13: {
        if (tag == 106) {
         parse_bidVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bidvolume())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106, input, this->mutable_bidvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_preSettlePrice;
        break;
      }

      // optional double preSettlePrice = 14;
      case 14: {
        if (tag == 113) {
         parse_preSettlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &presettleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_priceChange;
        break;
      }

      // optional double priceChange = 15;
      case 15: {
        if (tag == 121) {
         parse_priceChange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricechange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_settlePrice;
        break;
      }

      // optional double settlePrice = 16;
      case 16: {
        if (tag == 129) {
         parse_settlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_highLimit;
        break;
      }

      // optional int32 highLimit = 17;
      case 17: {
        if (tag == 136) {
         parse_highLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &highlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_lowLimit;
        break;
      }

      // optional int32 lowLimit = 18;
      case 18: {
        if (tag == 144) {
         parse_lowLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lowlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_preOpenInterest;
        break;
      }

      // optional double preOpenInterest = 19;
      case 19: {
        if (tag == 153) {
         parse_preOpenInterest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preopeninterest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_openInterest;
        break;
      }

      // optional double openInterest = 20;
      case 20: {
        if (tag == 161) {
         parse_openInterest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_averagePrice;
        break;
      }

      // optional double averagePrice = 21;
      case 21: {
        if (tag == 169) {
         parse_averagePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &averageprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBMarketData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBMarketData)
  return false;
#undef DO_
}

void PBMarketData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBMarketData)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double preCloseValue = 3;
  if (this->preclosevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->preclosevalue(), output);
  }

  // optional double openValue = 4;
  if (this->openvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->openvalue(), output);
  }

  // optional double turnover = 5;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->turnover(), output);
  }

  // optional int32 volume = 6;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->volume(), output);
  }

  // optional double highValue = 7;
  if (this->highvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->highvalue(), output);
  }

  // optional double lowValue = 8;
  if (this->lowvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->lowvalue(), output);
  }

  // optional double matchPrice = 9;
  if (this->matchprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->matchprice(), output);
  }

  // repeated double askPrice = 10;
  if (this->askprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_askprice_cached_byte_size_);
  }
  for (int i = 0; i < this->askprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->askprice(i), output);
  }

  // repeated int32 askVolume = 11;
  if (this->askvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_askvolume_cached_byte_size_);
  }
  for (int i = 0; i < this->askvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->askvolume(i), output);
  }

  // repeated double bidPrice = 12;
  if (this->bidprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bidprice_cached_byte_size_);
  }
  for (int i = 0; i < this->bidprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->bidprice(i), output);
  }

  // repeated int32 bidVolume = 13;
  if (this->bidvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bidvolume_cached_byte_size_);
  }
  for (int i = 0; i < this->bidvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->bidvolume(i), output);
  }

  // optional double preSettlePrice = 14;
  if (this->presettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->presettleprice(), output);
  }

  // optional double priceChange = 15;
  if (this->pricechange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->pricechange(), output);
  }

  // optional double settlePrice = 16;
  if (this->settleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->settleprice(), output);
  }

  // optional int32 highLimit = 17;
  if (this->highlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->highlimit(), output);
  }

  // optional int32 lowLimit = 18;
  if (this->lowlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->lowlimit(), output);
  }

  // optional double preOpenInterest = 19;
  if (this->preopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->preopeninterest(), output);
  }

  // optional double openInterest = 20;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->openinterest(), output);
  }

  // optional double averagePrice = 21;
  if (this->averageprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->averageprice(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBMarketData)
}

::google::protobuf::uint8* PBMarketData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBMarketData)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double preCloseValue = 3;
  if (this->preclosevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->preclosevalue(), target);
  }

  // optional double openValue = 4;
  if (this->openvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->openvalue(), target);
  }

  // optional double turnover = 5;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->turnover(), target);
  }

  // optional int32 volume = 6;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->volume(), target);
  }

  // optional double highValue = 7;
  if (this->highvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->highvalue(), target);
  }

  // optional double lowValue = 8;
  if (this->lowvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->lowvalue(), target);
  }

  // optional double matchPrice = 9;
  if (this->matchprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->matchprice(), target);
  }

  // repeated double askPrice = 10;
  if (this->askprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _askprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->askprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->askprice(i), target);
  }

  // repeated int32 askVolume = 11;
  if (this->askvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _askvolume_cached_byte_size_, target);
  }
  for (int i = 0; i < this->askvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->askvolume(i), target);
  }

  // repeated double bidPrice = 12;
  if (this->bidprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bidprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bidprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bidprice(i), target);
  }

  // repeated int32 bidVolume = 13;
  if (this->bidvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bidvolume_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bidvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->bidvolume(i), target);
  }

  // optional double preSettlePrice = 14;
  if (this->presettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->presettleprice(), target);
  }

  // optional double priceChange = 15;
  if (this->pricechange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->pricechange(), target);
  }

  // optional double settlePrice = 16;
  if (this->settleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->settleprice(), target);
  }

  // optional int32 highLimit = 17;
  if (this->highlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->highlimit(), target);
  }

  // optional int32 lowLimit = 18;
  if (this->lowlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->lowlimit(), target);
  }

  // optional double preOpenInterest = 19;
  if (this->preopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->preopeninterest(), target);
  }

  // optional double openInterest = 20;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->openinterest(), target);
  }

  // optional double averagePrice = 21;
  if (this->averageprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->averageprice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBMarketData)
  return target;
}

int PBMarketData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBMarketData)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double preCloseValue = 3;
  if (this->preclosevalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double openValue = 4;
  if (this->openvalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double turnover = 5;
  if (this->turnover() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 volume = 6;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional double highValue = 7;
  if (this->highvalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double lowValue = 8;
  if (this->lowvalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double matchPrice = 9;
  if (this->matchprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double preSettlePrice = 14;
  if (this->presettleprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double priceChange = 15;
  if (this->pricechange() != 0) {
    total_size += 1 + 8;
  }

  // optional double settlePrice = 16;
  if (this->settleprice() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 highLimit = 17;
  if (this->highlimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->highlimit());
  }

  // optional int32 lowLimit = 18;
  if (this->lowlimit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lowlimit());
  }

  // optional double preOpenInterest = 19;
  if (this->preopeninterest() != 0) {
    total_size += 2 + 8;
  }

  // optional double openInterest = 20;
  if (this->openinterest() != 0) {
    total_size += 2 + 8;
  }

  // optional double averagePrice = 21;
  if (this->averageprice() != 0) {
    total_size += 2 + 8;
  }

  // repeated double askPrice = 10;
  {
    int data_size = 0;
    data_size = 8 * this->askprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _askprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 askVolume = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->askvolume_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->askvolume(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _askvolume_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double bidPrice = 12;
  {
    int data_size = 0;
    data_size = 8 * this->bidprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bidprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 bidVolume = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->bidvolume_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->bidvolume(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bidvolume_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMarketData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBMarketData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMarketData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMarketData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBMarketData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBMarketData)
    MergeFrom(*source);
  }
}

void PBMarketData::MergeFrom(const PBMarketData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBMarketData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  askprice_.MergeFrom(from.askprice_);
  askvolume_.MergeFrom(from.askvolume_);
  bidprice_.MergeFrom(from.bidprice_);
  bidvolume_.MergeFrom(from.bidvolume_);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.preclosevalue() != 0) {
    set_preclosevalue(from.preclosevalue());
  }
  if (from.openvalue() != 0) {
    set_openvalue(from.openvalue());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.highvalue() != 0) {
    set_highvalue(from.highvalue());
  }
  if (from.lowvalue() != 0) {
    set_lowvalue(from.lowvalue());
  }
  if (from.matchprice() != 0) {
    set_matchprice(from.matchprice());
  }
  if (from.presettleprice() != 0) {
    set_presettleprice(from.presettleprice());
  }
  if (from.pricechange() != 0) {
    set_pricechange(from.pricechange());
  }
  if (from.settleprice() != 0) {
    set_settleprice(from.settleprice());
  }
  if (from.highlimit() != 0) {
    set_highlimit(from.highlimit());
  }
  if (from.lowlimit() != 0) {
    set_lowlimit(from.lowlimit());
  }
  if (from.preopeninterest() != 0) {
    set_preopeninterest(from.preopeninterest());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.averageprice() != 0) {
    set_averageprice(from.averageprice());
  }
}

void PBMarketData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMarketData::CopyFrom(const PBMarketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMarketData::IsInitialized() const {

  return true;
}

void PBMarketData::Swap(PBMarketData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMarketData::InternalSwap(PBMarketData* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(preclosevalue_, other->preclosevalue_);
  std::swap(openvalue_, other->openvalue_);
  std::swap(turnover_, other->turnover_);
  std::swap(volume_, other->volume_);
  std::swap(highvalue_, other->highvalue_);
  std::swap(lowvalue_, other->lowvalue_);
  std::swap(matchprice_, other->matchprice_);
  askprice_.UnsafeArenaSwap(&other->askprice_);
  askvolume_.UnsafeArenaSwap(&other->askvolume_);
  bidprice_.UnsafeArenaSwap(&other->bidprice_);
  bidvolume_.UnsafeArenaSwap(&other->bidvolume_);
  std::swap(presettleprice_, other->presettleprice_);
  std::swap(pricechange_, other->pricechange_);
  std::swap(settleprice_, other->settleprice_);
  std::swap(highlimit_, other->highlimit_);
  std::swap(lowlimit_, other->lowlimit_);
  std::swap(preopeninterest_, other->preopeninterest_);
  std::swap(openinterest_, other->openinterest_);
  std::swap(averageprice_, other->averageprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMarketData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMarketData_descriptor_;
  metadata.reflection = PBMarketData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMarketData

// optional string exchange = 1;
void PBMarketData::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketData::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.exchange)
}
 void PBMarketData::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketData.exchange)
}
 void PBMarketData::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketData.exchange)
}
 ::std::string* PBMarketData::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketData.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketData::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketData.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketData.exchange)
}

// optional string contract = 2;
void PBMarketData::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketData::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.contract)
}
 void PBMarketData::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketData.contract)
}
 void PBMarketData::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketData.contract)
}
 ::std::string* PBMarketData::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketData.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketData::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketData.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketData.contract)
}

// optional double preCloseValue = 3;
void PBMarketData::clear_preclosevalue() {
  preclosevalue_ = 0;
}
 double PBMarketData::preclosevalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.preCloseValue)
  return preclosevalue_;
}
 void PBMarketData::set_preclosevalue(double value) {
  
  preclosevalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.preCloseValue)
}

// optional double openValue = 4;
void PBMarketData::clear_openvalue() {
  openvalue_ = 0;
}
 double PBMarketData::openvalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.openValue)
  return openvalue_;
}
 void PBMarketData::set_openvalue(double value) {
  
  openvalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.openValue)
}

// optional double turnover = 5;
void PBMarketData::clear_turnover() {
  turnover_ = 0;
}
 double PBMarketData::turnover() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.turnover)
  return turnover_;
}
 void PBMarketData::set_turnover(double value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.turnover)
}

// optional int32 volume = 6;
void PBMarketData::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBMarketData::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.volume)
  return volume_;
}
 void PBMarketData::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.volume)
}

// optional double highValue = 7;
void PBMarketData::clear_highvalue() {
  highvalue_ = 0;
}
 double PBMarketData::highvalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.highValue)
  return highvalue_;
}
 void PBMarketData::set_highvalue(double value) {
  
  highvalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.highValue)
}

// optional double lowValue = 8;
void PBMarketData::clear_lowvalue() {
  lowvalue_ = 0;
}
 double PBMarketData::lowvalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.lowValue)
  return lowvalue_;
}
 void PBMarketData::set_lowvalue(double value) {
  
  lowvalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.lowValue)
}

// optional double matchPrice = 9;
void PBMarketData::clear_matchprice() {
  matchprice_ = 0;
}
 double PBMarketData::matchprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.matchPrice)
  return matchprice_;
}
 void PBMarketData::set_matchprice(double value) {
  
  matchprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.matchPrice)
}

// repeated double askPrice = 10;
int PBMarketData::askprice_size() const {
  return askprice_.size();
}
void PBMarketData::clear_askprice() {
  askprice_.Clear();
}
 double PBMarketData::askprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.askPrice)
  return askprice_.Get(index);
}
 void PBMarketData::set_askprice(int index, double value) {
  askprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.askPrice)
}
 void PBMarketData::add_askprice(double value) {
  askprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.askPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBMarketData::askprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.askPrice)
  return askprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBMarketData::mutable_askprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.askPrice)
  return &askprice_;
}

// repeated int32 askVolume = 11;
int PBMarketData::askvolume_size() const {
  return askvolume_.size();
}
void PBMarketData::clear_askvolume() {
  askvolume_.Clear();
}
 ::google::protobuf::int32 PBMarketData::askvolume(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.askVolume)
  return askvolume_.Get(index);
}
 void PBMarketData::set_askvolume(int index, ::google::protobuf::int32 value) {
  askvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.askVolume)
}
 void PBMarketData::add_askvolume(::google::protobuf::int32 value) {
  askvolume_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.askVolume)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBMarketData::askvolume() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.askVolume)
  return askvolume_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBMarketData::mutable_askvolume() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.askVolume)
  return &askvolume_;
}

// repeated double bidPrice = 12;
int PBMarketData::bidprice_size() const {
  return bidprice_.size();
}
void PBMarketData::clear_bidprice() {
  bidprice_.Clear();
}
 double PBMarketData::bidprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.bidPrice)
  return bidprice_.Get(index);
}
 void PBMarketData::set_bidprice(int index, double value) {
  bidprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.bidPrice)
}
 void PBMarketData::add_bidprice(double value) {
  bidprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.bidPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBMarketData::bidprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.bidPrice)
  return bidprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBMarketData::mutable_bidprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.bidPrice)
  return &bidprice_;
}

// repeated int32 bidVolume = 13;
int PBMarketData::bidvolume_size() const {
  return bidvolume_.size();
}
void PBMarketData::clear_bidvolume() {
  bidvolume_.Clear();
}
 ::google::protobuf::int32 PBMarketData::bidvolume(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.bidVolume)
  return bidvolume_.Get(index);
}
 void PBMarketData::set_bidvolume(int index, ::google::protobuf::int32 value) {
  bidvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.bidVolume)
}
 void PBMarketData::add_bidvolume(::google::protobuf::int32 value) {
  bidvolume_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.bidVolume)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBMarketData::bidvolume() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.bidVolume)
  return bidvolume_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBMarketData::mutable_bidvolume() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.bidVolume)
  return &bidvolume_;
}

// optional double preSettlePrice = 14;
void PBMarketData::clear_presettleprice() {
  presettleprice_ = 0;
}
 double PBMarketData::presettleprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.preSettlePrice)
  return presettleprice_;
}
 void PBMarketData::set_presettleprice(double value) {
  
  presettleprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.preSettlePrice)
}

// optional double priceChange = 15;
void PBMarketData::clear_pricechange() {
  pricechange_ = 0;
}
 double PBMarketData::pricechange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.priceChange)
  return pricechange_;
}
 void PBMarketData::set_pricechange(double value) {
  
  pricechange_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.priceChange)
}

// optional double settlePrice = 16;
void PBMarketData::clear_settleprice() {
  settleprice_ = 0;
}
 double PBMarketData::settleprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.settlePrice)
  return settleprice_;
}
 void PBMarketData::set_settleprice(double value) {
  
  settleprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.settlePrice)
}

// optional int32 highLimit = 17;
void PBMarketData::clear_highlimit() {
  highlimit_ = 0;
}
 ::google::protobuf::int32 PBMarketData::highlimit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.highLimit)
  return highlimit_;
}
 void PBMarketData::set_highlimit(::google::protobuf::int32 value) {
  
  highlimit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.highLimit)
}

// optional int32 lowLimit = 18;
void PBMarketData::clear_lowlimit() {
  lowlimit_ = 0;
}
 ::google::protobuf::int32 PBMarketData::lowlimit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.lowLimit)
  return lowlimit_;
}
 void PBMarketData::set_lowlimit(::google::protobuf::int32 value) {
  
  lowlimit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.lowLimit)
}

// optional double preOpenInterest = 19;
void PBMarketData::clear_preopeninterest() {
  preopeninterest_ = 0;
}
 double PBMarketData::preopeninterest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.preOpenInterest)
  return preopeninterest_;
}
 void PBMarketData::set_preopeninterest(double value) {
  
  preopeninterest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.preOpenInterest)
}

// optional double openInterest = 20;
void PBMarketData::clear_openinterest() {
  openinterest_ = 0;
}
 double PBMarketData::openinterest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.openInterest)
  return openinterest_;
}
 void PBMarketData::set_openinterest(double value) {
  
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.openInterest)
}

// optional double averagePrice = 21;
void PBMarketData::clear_averageprice() {
  averageprice_ = 0;
}
 double PBMarketData::averageprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.averagePrice)
  return averageprice_;
}
 void PBMarketData::set_averageprice(double value) {
  
  averageprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.averagePrice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMarketDataList::kMarketDataFieldNumber;
const int PBMarketDataList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMarketDataList::PBMarketDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBMarketDataList)
}

void PBMarketDataList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBMarketDataList::PBMarketDataList(const PBMarketDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBMarketDataList)
}

void PBMarketDataList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBMarketDataList::~PBMarketDataList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBMarketDataList)
  SharedDtor();
}

void PBMarketDataList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBMarketDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMarketDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMarketDataList_descriptor_;
}

const PBMarketDataList& PBMarketDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBMarketDataList* PBMarketDataList::default_instance_ = NULL;

PBMarketDataList* PBMarketDataList::New(::google::protobuf::Arena* arena) const {
  PBMarketDataList* n = new PBMarketDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMarketDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBMarketDataList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  marketdata_.Clear();
}

bool PBMarketDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBMarketDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBMarketData marketData = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_marketData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_marketdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_marketData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBMarketDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBMarketDataList)
  return false;
#undef DO_
}

void PBMarketDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBMarketDataList)
  // repeated .Micro.Future.Message.Business.PBMarketData marketData = 1;
  for (unsigned int i = 0, n = this->marketdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->marketdata(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBMarketDataList)
}

::google::protobuf::uint8* PBMarketDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBMarketDataList)
  // repeated .Micro.Future.Message.Business.PBMarketData marketData = 1;
  for (unsigned int i = 0, n = this->marketdata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marketdata(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBMarketDataList)
  return target;
}

int PBMarketDataList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBMarketDataList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBMarketData marketData = 1;
  total_size += 1 * this->marketdata_size();
  for (int i = 0; i < this->marketdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->marketdata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMarketDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMarketDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMarketDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBMarketDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBMarketDataList)
    MergeFrom(*source);
  }
}

void PBMarketDataList::MergeFrom(const PBMarketDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  marketdata_.MergeFrom(from.marketdata_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBMarketDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMarketDataList::CopyFrom(const PBMarketDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMarketDataList::IsInitialized() const {

  return true;
}

void PBMarketDataList::Swap(PBMarketDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMarketDataList::InternalSwap(PBMarketDataList* other) {
  marketdata_.UnsafeArenaSwap(&other->marketdata_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMarketDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMarketDataList_descriptor_;
  metadata.reflection = PBMarketDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMarketDataList

// repeated .Micro.Future.Message.Business.PBMarketData marketData = 1;
int PBMarketDataList::marketdata_size() const {
  return marketdata_.size();
}
void PBMarketDataList::clear_marketdata() {
  marketdata_.Clear();
}
const ::Micro::Future::Message::Business::PBMarketData& PBMarketDataList::marketdata(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_.Get(index);
}
::Micro::Future::Message::Business::PBMarketData* PBMarketDataList::mutable_marketdata(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_.Mutable(index);
}
::Micro::Future::Message::Business::PBMarketData* PBMarketDataList::add_marketdata() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBMarketData >*
PBMarketDataList::mutable_marketdata() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return &marketdata_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBMarketData >&
PBMarketDataList::marketdata() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBMarketDataList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBMarketDataList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBMarketDataList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketDataList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBMarketDataList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketDataList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBMarketDataList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketDataList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBMarketDataList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketDataList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPricingData::kExchangeFieldNumber;
const int PBPricingData::kContractFieldNumber;
const int PBPricingData::kAskPriceFieldNumber;
const int PBPricingData::kBidPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPricingData::PBPricingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPricingData)
}

void PBPricingData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBPricingData::PBPricingData(const PBPricingData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPricingData)
}

void PBPricingData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askprice_ = 0;
  bidprice_ = 0;
}

PBPricingData::~PBPricingData() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPricingData)
  SharedDtor();
}

void PBPricingData::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBPricingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPricingData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPricingData_descriptor_;
}

const PBPricingData& PBPricingData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPricingData* PBPricingData::default_instance_ = NULL;

PBPricingData* PBPricingData::New(::google::protobuf::Arena* arena) const {
  PBPricingData* n = new PBPricingData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPricingData::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPricingData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPricingData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPricingData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(askprice_, bidprice_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBPricingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPricingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingData.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingData.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_askPrice;
        break;
      }

      // optional double askPrice = 3;
      case 3: {
        if (tag == 25) {
         parse_askPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_bidPrice;
        break;
      }

      // optional double bidPrice = 4;
      case 4: {
        if (tag == 33) {
         parse_bidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPricingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPricingData)
  return false;
#undef DO_
}

void PBPricingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPricingData)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double askPrice = 3;
  if (this->askprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->askprice(), output);
  }

  // optional double bidPrice = 4;
  if (this->bidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->bidprice(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPricingData)
}

::google::protobuf::uint8* PBPricingData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPricingData)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double askPrice = 3;
  if (this->askprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->askprice(), target);
  }

  // optional double bidPrice = 4;
  if (this->bidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->bidprice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPricingData)
  return target;
}

int PBPricingData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPricingData)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double askPrice = 3;
  if (this->askprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double bidPrice = 4;
  if (this->bidprice() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPricingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPricingData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPricingData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPricingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPricingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPricingData)
    MergeFrom(*source);
  }
}

void PBPricingData::MergeFrom(const PBPricingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPricingData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.askprice() != 0) {
    set_askprice(from.askprice());
  }
  if (from.bidprice() != 0) {
    set_bidprice(from.bidprice());
  }
}

void PBPricingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPricingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPricingData::CopyFrom(const PBPricingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPricingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPricingData::IsInitialized() const {

  return true;
}

void PBPricingData::Swap(PBPricingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPricingData::InternalSwap(PBPricingData* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(askprice_, other->askprice_);
  std::swap(bidprice_, other->bidprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPricingData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPricingData_descriptor_;
  metadata.reflection = PBPricingData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPricingData

// optional string exchange = 1;
void PBPricingData::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingData::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.exchange)
}
 void PBPricingData::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingData.exchange)
}
 void PBPricingData::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingData.exchange)
}
 ::std::string* PBPricingData::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingData.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingData::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingData.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingData.exchange)
}

// optional string contract = 2;
void PBPricingData::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingData::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.contract)
}
 void PBPricingData::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingData.contract)
}
 void PBPricingData::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingData.contract)
}
 ::std::string* PBPricingData::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingData.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingData::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingData.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingData.contract)
}

// optional double askPrice = 3;
void PBPricingData::clear_askprice() {
  askprice_ = 0;
}
 double PBPricingData::askprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.askPrice)
  return askprice_;
}
 void PBPricingData::set_askprice(double value) {
  
  askprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.askPrice)
}

// optional double bidPrice = 4;
void PBPricingData::clear_bidprice() {
  bidprice_ = 0;
}
 double PBPricingData::bidprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.bidPrice)
  return bidprice_;
}
 void PBPricingData::set_bidprice(double value) {
  
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.bidPrice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPricingDataList::kPricingDataFieldNumber;
const int PBPricingDataList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPricingDataList::PBPricingDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPricingDataList)
}

void PBPricingDataList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPricingDataList::PBPricingDataList(const PBPricingDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPricingDataList)
}

void PBPricingDataList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBPricingDataList::~PBPricingDataList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPricingDataList)
  SharedDtor();
}

void PBPricingDataList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPricingDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPricingDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPricingDataList_descriptor_;
}

const PBPricingDataList& PBPricingDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPricingDataList* PBPricingDataList::default_instance_ = NULL;

PBPricingDataList* PBPricingDataList::New(::google::protobuf::Arena* arena) const {
  PBPricingDataList* n = new PBPricingDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPricingDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPricingDataList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  pricingdata_.Clear();
}

bool PBPricingDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPricingDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pricingData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pricingdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pricingData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPricingDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPricingDataList)
  return false;
#undef DO_
}

void PBPricingDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPricingDataList)
  // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
  for (unsigned int i = 0, n = this->pricingdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pricingdata(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPricingDataList)
}

::google::protobuf::uint8* PBPricingDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPricingDataList)
  // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
  for (unsigned int i = 0, n = this->pricingdata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pricingdata(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPricingDataList)
  return target;
}

int PBPricingDataList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPricingDataList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
  total_size += 1 * this->pricingdata_size();
  for (int i = 0; i < this->pricingdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pricingdata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPricingDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPricingDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPricingDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPricingDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPricingDataList)
    MergeFrom(*source);
  }
}

void PBPricingDataList::MergeFrom(const PBPricingDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  pricingdata_.MergeFrom(from.pricingdata_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBPricingDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPricingDataList::CopyFrom(const PBPricingDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPricingDataList::IsInitialized() const {

  return true;
}

void PBPricingDataList::Swap(PBPricingDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPricingDataList::InternalSwap(PBPricingDataList* other) {
  pricingdata_.UnsafeArenaSwap(&other->pricingdata_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPricingDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPricingDataList_descriptor_;
  metadata.reflection = PBPricingDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPricingDataList

// repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
int PBPricingDataList::pricingdata_size() const {
  return pricingdata_.size();
}
void PBPricingDataList::clear_pricingdata() {
  pricingdata_.Clear();
}
const ::Micro::Future::Message::Business::PBPricingData& PBPricingDataList::pricingdata(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_.Get(index);
}
::Micro::Future::Message::Business::PBPricingData* PBPricingDataList::mutable_pricingdata(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_.Mutable(index);
}
::Micro::Future::Message::Business::PBPricingData* PBPricingDataList::add_pricingdata() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingData >*
PBPricingDataList::mutable_pricingdata() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return &pricingdata_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingData >&
PBPricingDataList::pricingdata() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBPricingDataList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPricingDataList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPricingDataList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingDataList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPricingDataList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingDataList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPricingDataList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingDataList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPricingDataList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingDataList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPricingContract::kExchangeFieldNumber;
const int PBPricingContract::kContractFieldNumber;
const int PBPricingContract::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPricingContract::PBPricingContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPricingContract)
}

void PBPricingContract::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBPricingContract::PBPricingContract(const PBPricingContract& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPricingContract)
}

void PBPricingContract::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = 0;
}

PBPricingContract::~PBPricingContract() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPricingContract)
  SharedDtor();
}

void PBPricingContract::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBPricingContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPricingContract::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPricingContract_descriptor_;
}

const PBPricingContract& PBPricingContract::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPricingContract* PBPricingContract::default_instance_ = NULL;

PBPricingContract* PBPricingContract::New(::google::protobuf::Arena* arena) const {
  PBPricingContract* n = new PBPricingContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPricingContract::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPricingContract)
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = 0;
}

bool PBPricingContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPricingContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingContract.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingContract.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_weight;
        break;
      }

      // optional double weight = 3;
      case 3: {
        if (tag == 25) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPricingContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPricingContract)
  return false;
#undef DO_
}

void PBPricingContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPricingContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double weight = 3;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->weight(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPricingContract)
}

::google::protobuf::uint8* PBPricingContract::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPricingContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double weight = 3;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->weight(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPricingContract)
  return target;
}

int PBPricingContract::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPricingContract)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double weight = 3;
  if (this->weight() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPricingContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPricingContract* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPricingContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPricingContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPricingContract)
    MergeFrom(*source);
  }
}

void PBPricingContract::MergeFrom(const PBPricingContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
}

void PBPricingContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPricingContract::CopyFrom(const PBPricingContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPricingContract::IsInitialized() const {

  return true;
}

void PBPricingContract::Swap(PBPricingContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPricingContract::InternalSwap(PBPricingContract* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(weight_, other->weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPricingContract::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPricingContract_descriptor_;
  metadata.reflection = PBPricingContract_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPricingContract

// optional string exchange = 1;
void PBPricingContract::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingContract::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.exchange)
}
 void PBPricingContract::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingContract.exchange)
}
 void PBPricingContract::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingContract.exchange)
}
 ::std::string* PBPricingContract::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingContract.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingContract::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingContract.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingContract.exchange)
}

// optional string contract = 2;
void PBPricingContract::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingContract::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.contract)
}
 void PBPricingContract::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingContract.contract)
}
 void PBPricingContract::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingContract.contract)
}
 ::std::string* PBPricingContract::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingContract.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingContract::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingContract.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingContract.contract)
}

// optional double weight = 3;
void PBPricingContract::clear_weight() {
  weight_ = 0;
}
 double PBPricingContract::weight() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.weight)
  return weight_;
}
 void PBPricingContract::set_weight(double value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBStrategy::kExchangeFieldNumber;
const int PBStrategy::kContractFieldNumber;
const int PBStrategy::kUnderlyingFieldNumber;
const int PBStrategy::kSymbolFieldNumber;
const int PBStrategy::kDescriptionFieldNumber;
const int PBStrategy::kAllowTradingFieldNumber;
const int PBStrategy::kEnabledFieldNumber;
const int PBStrategy::kQuantityFieldNumber;
const int PBStrategy::kDepthFieldNumber;
const int PBStrategy::kPricingContractsFieldNumber;
const int PBStrategy::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBStrategy::PBStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBStrategy)
}

void PBStrategy::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBStrategy::PBStrategy(const PBStrategy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBStrategy)
}

void PBStrategy::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allowtrading_ = false;
  enabled_ = false;
  quantity_ = 0;
  depth_ = 0;
  params_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  params_.SetEntryDescriptor(
      &::Micro::Future::Message::Business::PBStrategy_ParamsEntry_descriptor_);
}

PBStrategy::~PBStrategy() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBStrategy)
  SharedDtor();
}

void PBStrategy::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBStrategy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBStrategy_descriptor_;
}

const PBStrategy& PBStrategy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBStrategy* PBStrategy::default_instance_ = NULL;

PBStrategy* PBStrategy::New(::google::protobuf::Arena* arena) const {
  PBStrategy* n = new PBStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBStrategy)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBStrategy, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBStrategy*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(allowtrading_, quantity_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depth_ = 0;

#undef ZR_HELPER_
#undef ZR_

  pricingcontracts_.Clear();
  params_.Clear();
}

bool PBStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_underlying;
        break;
      }

      // optional string underlying = 3;
      case 3: {
        if (tag == 26) {
         parse_underlying:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlying()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlying().data(), this->underlying().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.underlying"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_symbol;
        break;
      }

      // optional string symbol = 4;
      case 4: {
        if (tag == 34) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_description;
        break;
      }

      // optional string description = 5;
      case 5: {
        if (tag == 42) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_allowTrading;
        break;
      }

      // optional bool allowTrading = 6;
      case 6: {
        if (tag == 48) {
         parse_allowTrading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowtrading_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_enabled;
        break;
      }

      // optional bool enabled = 7;
      case 7: {
        if (tag == 56) {
         parse_enabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_quantity;
        break;
      }

      // optional int32 quantity = 8;
      case 8: {
        if (tag == 64) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quantity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_depth;
        break;
      }

      // optional int32 depth = 9;
      case 9: {
        if (tag == 72) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_pricingContracts;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 10;
      case 10: {
        if (tag == 82) {
         parse_pricingContracts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_pricingContracts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pricingcontracts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_pricingContracts;
        if (input->ExpectTag(90)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, double> params = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          ::google::protobuf::scoped_ptr<PBStrategy_ParamsEntry> entry(params_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_params())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->key().data(), entry->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.ParamsEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBStrategy)
  return false;
#undef DO_
}

void PBStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBStrategy)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional string underlying = 3;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.underlying");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->underlying(), output);
  }

  // optional string symbol = 4;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->symbol(), output);
  }

  // optional string description = 5;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->description(), output);
  }

  // optional bool allowTrading = 6;
  if (this->allowtrading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->allowtrading(), output);
  }

  // optional bool enabled = 7;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->enabled(), output);
  }

  // optional int32 quantity = 8;
  if (this->quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->quantity(), output);
  }

  // optional int32 depth = 9;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->depth(), output);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 10;
  for (unsigned int i = 0, n = this->pricingcontracts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->pricingcontracts(i), output);
  }

  // map<string, double> params = 11;
  {
    ::google::protobuf::scoped_ptr<PBStrategy_ParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          11, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.Business.PBStrategy.ParamsEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBStrategy)
}

::google::protobuf::uint8* PBStrategy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBStrategy)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional string underlying = 3;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.underlying");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->underlying(), target);
  }

  // optional string symbol = 4;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->symbol(), target);
  }

  // optional string description = 5;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->description(), target);
  }

  // optional bool allowTrading = 6;
  if (this->allowtrading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->allowtrading(), target);
  }

  // optional bool enabled = 7;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->enabled(), target);
  }

  // optional int32 quantity = 8;
  if (this->quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->quantity(), target);
  }

  // optional int32 depth = 9;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->depth(), target);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 10;
  for (unsigned int i = 0, n = this->pricingcontracts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->pricingcontracts(i), target);
  }

  // map<string, double> params = 11;
  {
    ::google::protobuf::scoped_ptr<PBStrategy_ParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              11, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->first.data(), it->first.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "Micro.Future.Message.Business.PBStrategy.ParamsEntry.key");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBStrategy)
  return target;
}

int PBStrategy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBStrategy)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string underlying = 3;
  if (this->underlying().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlying());
  }

  // optional string symbol = 4;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string description = 5;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional bool allowTrading = 6;
  if (this->allowtrading() != 0) {
    total_size += 1 + 1;
  }

  // optional bool enabled = 7;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 quantity = 8;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quantity());
  }

  // optional int32 depth = 9;
  if (this->depth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->depth());
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 10;
  total_size += 1 * this->pricingcontracts_size();
  for (int i = 0; i < this->pricingcontracts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pricingcontracts(i));
  }

  // map<string, double> params = 11;
  total_size += 1 * this->params_size();
  {
    ::google::protobuf::scoped_ptr<PBStrategy_ParamsEntry> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->params().begin();
        it != this->params().end(); ++it) {
      entry.reset(params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBStrategy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBStrategy)
    MergeFrom(*source);
  }
}

void PBStrategy::MergeFrom(const PBStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  pricingcontracts_.MergeFrom(from.pricingcontracts_);
  params_.MergeFrom(from.params_);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.underlying().size() > 0) {

    underlying_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlying_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.allowtrading() != 0) {
    set_allowtrading(from.allowtrading());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.quantity() != 0) {
    set_quantity(from.quantity());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
}

void PBStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBStrategy::CopyFrom(const PBStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBStrategy::IsInitialized() const {

  return true;
}

void PBStrategy::Swap(PBStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBStrategy::InternalSwap(PBStrategy* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  underlying_.Swap(&other->underlying_);
  symbol_.Swap(&other->symbol_);
  description_.Swap(&other->description_);
  std::swap(allowtrading_, other->allowtrading_);
  std::swap(enabled_, other->enabled_);
  std::swap(quantity_, other->quantity_);
  std::swap(depth_, other->depth_);
  pricingcontracts_.UnsafeArenaSwap(&other->pricingcontracts_);
  params_.Swap(&other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBStrategy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBStrategy_descriptor_;
  metadata.reflection = PBStrategy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBStrategy

// optional string exchange = 1;
void PBStrategy::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.exchange)
}
 void PBStrategy::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.exchange)
}
 void PBStrategy::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.exchange)
}
 ::std::string* PBStrategy::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.exchange)
}

// optional string contract = 2;
void PBStrategy::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.contract)
}
 void PBStrategy::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.contract)
}
 void PBStrategy::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.contract)
}
 ::std::string* PBStrategy::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.contract)
}

// optional string underlying = 3;
void PBStrategy::clear_underlying() {
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::underlying() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.underlying)
  return underlying_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_underlying(const ::std::string& value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.underlying)
}
 void PBStrategy::set_underlying(const char* value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.underlying)
}
 void PBStrategy::set_underlying(const char* value, size_t size) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.underlying)
}
 ::std::string* PBStrategy::mutable_underlying() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.underlying)
  return underlying_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_underlying() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.underlying)
  
  return underlying_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_underlying(::std::string* underlying) {
  if (underlying != NULL) {
    
  } else {
    
  }
  underlying_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlying);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.underlying)
}

// optional string symbol = 4;
void PBStrategy::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::symbol() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.symbol)
}
 void PBStrategy::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.symbol)
}
 void PBStrategy::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.symbol)
}
 ::std::string* PBStrategy::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_symbol() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.symbol)
}

// optional string description = 5;
void PBStrategy::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::description() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.description)
}
 void PBStrategy::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.description)
}
 void PBStrategy::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.description)
}
 ::std::string* PBStrategy::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_description() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.description)
}

// optional bool allowTrading = 6;
void PBStrategy::clear_allowtrading() {
  allowtrading_ = false;
}
 bool PBStrategy::allowtrading() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.allowTrading)
  return allowtrading_;
}
 void PBStrategy::set_allowtrading(bool value) {
  
  allowtrading_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.allowTrading)
}

// optional bool enabled = 7;
void PBStrategy::clear_enabled() {
  enabled_ = false;
}
 bool PBStrategy::enabled() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.enabled)
  return enabled_;
}
 void PBStrategy::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.enabled)
}

// optional int32 quantity = 8;
void PBStrategy::clear_quantity() {
  quantity_ = 0;
}
 ::google::protobuf::int32 PBStrategy::quantity() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.quantity)
  return quantity_;
}
 void PBStrategy::set_quantity(::google::protobuf::int32 value) {
  
  quantity_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.quantity)
}

// optional int32 depth = 9;
void PBStrategy::clear_depth() {
  depth_ = 0;
}
 ::google::protobuf::int32 PBStrategy::depth() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.depth)
  return depth_;
}
 void PBStrategy::set_depth(::google::protobuf::int32 value) {
  
  depth_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.depth)
}

// repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 10;
int PBStrategy::pricingcontracts_size() const {
  return pricingcontracts_.size();
}
void PBStrategy::clear_pricingcontracts() {
  pricingcontracts_.Clear();
}
const ::Micro::Future::Message::Business::PBPricingContract& PBStrategy::pricingcontracts(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_.Get(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::mutable_pricingcontracts(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_.Mutable(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::add_pricingcontracts() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >*
PBStrategy::mutable_pricingcontracts() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return &pricingcontracts_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >&
PBStrategy::pricingcontracts() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_;
}

// map<string, double> params = 11;
int PBStrategy::params_size() const {
  return params_.size();
}
void PBStrategy::clear_params() {
  params_.Clear();
}
 const ::google::protobuf::Map< ::std::string, double >&
PBStrategy::params() const {
  // @@protoc_insertion_point(field_map:Micro.Future.Message.Business.PBStrategy.params)
  return params_.GetMap();
}
 ::google::protobuf::Map< ::std::string, double >*
PBStrategy::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:Micro.Future.Message.Business.PBStrategy.params)
  return params_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBStrategyList::kStrategyFieldNumber;
const int PBStrategyList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBStrategyList::PBStrategyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBStrategyList)
}

void PBStrategyList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBStrategyList::PBStrategyList(const PBStrategyList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBStrategyList)
}

void PBStrategyList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBStrategyList::~PBStrategyList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBStrategyList)
  SharedDtor();
}

void PBStrategyList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBStrategyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBStrategyList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBStrategyList_descriptor_;
}

const PBStrategyList& PBStrategyList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBStrategyList* PBStrategyList::default_instance_ = NULL;

PBStrategyList* PBStrategyList::New(::google::protobuf::Arena* arena) const {
  PBStrategyList* n = new PBStrategyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBStrategyList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBStrategyList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  strategy_.Clear();
}

bool PBStrategyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBStrategyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBStrategy strategy = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_strategy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_strategy;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBStrategyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBStrategyList)
  return false;
#undef DO_
}

void PBStrategyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBStrategyList)
  // repeated .Micro.Future.Message.Business.PBStrategy strategy = 1;
  for (unsigned int i = 0, n = this->strategy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->strategy(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBStrategyList)
}

::google::protobuf::uint8* PBStrategyList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBStrategyList)
  // repeated .Micro.Future.Message.Business.PBStrategy strategy = 1;
  for (unsigned int i = 0, n = this->strategy_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->strategy(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBStrategyList)
  return target;
}

int PBStrategyList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBStrategyList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBStrategy strategy = 1;
  total_size += 1 * this->strategy_size();
  for (int i = 0; i < this->strategy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strategy(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBStrategyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBStrategyList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBStrategyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBStrategyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBStrategyList)
    MergeFrom(*source);
  }
}

void PBStrategyList::MergeFrom(const PBStrategyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  strategy_.MergeFrom(from.strategy_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBStrategyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBStrategyList::CopyFrom(const PBStrategyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBStrategyList::IsInitialized() const {

  return true;
}

void PBStrategyList::Swap(PBStrategyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBStrategyList::InternalSwap(PBStrategyList* other) {
  strategy_.UnsafeArenaSwap(&other->strategy_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBStrategyList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBStrategyList_descriptor_;
  metadata.reflection = PBStrategyList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBStrategyList

// repeated .Micro.Future.Message.Business.PBStrategy strategy = 1;
int PBStrategyList::strategy_size() const {
  return strategy_.size();
}
void PBStrategyList::clear_strategy() {
  strategy_.Clear();
}
const ::Micro::Future::Message::Business::PBStrategy& PBStrategyList::strategy(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_.Get(index);
}
::Micro::Future::Message::Business::PBStrategy* PBStrategyList::mutable_strategy(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_.Mutable(index);
}
::Micro::Future::Message::Business::PBStrategy* PBStrategyList::add_strategy() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBStrategy >*
PBStrategyList::mutable_strategy() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBStrategyList.strategy)
  return &strategy_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBStrategy >&
PBStrategyList::strategy() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBStrategyList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBStrategyList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBStrategyList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategyList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBStrategyList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategyList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBStrategyList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategyList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBStrategyList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategyList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractParam::kExchangeFieldNumber;
const int PBContractParam::kContractFieldNumber;
const int PBContractParam::kDepthVolFieldNumber;
const int PBContractParam::kGammaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractParam::PBContractParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractParam)
}

void PBContractParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBContractParam::PBContractParam(const PBContractParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractParam)
}

void PBContractParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depthvol_ = 0;
  gamma_ = 0;
}

PBContractParam::~PBContractParam() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractParam)
  SharedDtor();
}

void PBContractParam::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBContractParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractParam_descriptor_;
}

const PBContractParam& PBContractParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractParam* PBContractParam::default_instance_ = NULL;

PBContractParam* PBContractParam::New(::google::protobuf::Arena* arena) const {
  PBContractParam* n = new PBContractParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractParam)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBContractParam, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBContractParam*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gamma_, depthvol_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBContractParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractParam.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractParam.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_depthVol;
        break;
      }

      // optional int32 depthVol = 3;
      case 3: {
        if (tag == 24) {
         parse_depthVol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depthvol_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_gamma;
        break;
      }

      // optional double gamma = 4;
      case 4: {
        if (tag == 33) {
         parse_gamma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gamma_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractParam)
  return false;
#undef DO_
}

void PBContractParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional int32 depthVol = 3;
  if (this->depthvol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->depthvol(), output);
  }

  // optional double gamma = 4;
  if (this->gamma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->gamma(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractParam)
}

::google::protobuf::uint8* PBContractParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional int32 depthVol = 3;
  if (this->depthvol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->depthvol(), target);
  }

  // optional double gamma = 4;
  if (this->gamma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->gamma(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractParam)
  return target;
}

int PBContractParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractParam)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional int32 depthVol = 3;
  if (this->depthvol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->depthvol());
  }

  // optional double gamma = 4;
  if (this->gamma() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractParam)
    MergeFrom(*source);
  }
}

void PBContractParam::MergeFrom(const PBContractParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.depthvol() != 0) {
    set_depthvol(from.depthvol());
  }
  if (from.gamma() != 0) {
    set_gamma(from.gamma());
  }
}

void PBContractParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractParam::CopyFrom(const PBContractParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractParam::IsInitialized() const {

  return true;
}

void PBContractParam::Swap(PBContractParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractParam::InternalSwap(PBContractParam* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(depthvol_, other->depthvol_);
  std::swap(gamma_, other->gamma_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractParam_descriptor_;
  metadata.reflection = PBContractParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractParam

// optional string exchange = 1;
void PBContractParam::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractParam::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.exchange)
}
 void PBContractParam::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractParam.exchange)
}
 void PBContractParam::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractParam.exchange)
}
 ::std::string* PBContractParam::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParam.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractParam::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractParam.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractParam.exchange)
}

// optional string contract = 2;
void PBContractParam::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractParam::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.contract)
}
 void PBContractParam::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractParam.contract)
}
 void PBContractParam::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractParam.contract)
}
 ::std::string* PBContractParam::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParam.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractParam::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractParam.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractParam.contract)
}

// optional int32 depthVol = 3;
void PBContractParam::clear_depthvol() {
  depthvol_ = 0;
}
 ::google::protobuf::int32 PBContractParam::depthvol() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.depthVol)
  return depthvol_;
}
 void PBContractParam::set_depthvol(::google::protobuf::int32 value) {
  
  depthvol_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.depthVol)
}

// optional double gamma = 4;
void PBContractParam::clear_gamma() {
  gamma_ = 0;
}
 double PBContractParam::gamma() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.gamma)
  return gamma_;
}
 void PBContractParam::set_gamma(double value) {
  
  gamma_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.gamma)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractParamList::kParamsFieldNumber;
const int PBContractParamList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractParamList::PBContractParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractParamList)
}

void PBContractParamList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBContractParamList::PBContractParamList(const PBContractParamList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractParamList)
}

void PBContractParamList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBContractParamList::~PBContractParamList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractParamList)
  SharedDtor();
}

void PBContractParamList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBContractParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractParamList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractParamList_descriptor_;
}

const PBContractParamList& PBContractParamList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractParamList* PBContractParamList::default_instance_ = NULL;

PBContractParamList* PBContractParamList::New(::google::protobuf::Arena* arena) const {
  PBContractParamList* n = new PBContractParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractParamList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  params_.Clear();
}

bool PBContractParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBContractParam params = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractParamList)
  return false;
#undef DO_
}

void PBContractParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractParamList)
  // repeated .Micro.Future.Message.Business.PBContractParam params = 1;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->params(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractParamList)
}

::google::protobuf::uint8* PBContractParamList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractParamList)
  // repeated .Micro.Future.Message.Business.PBContractParam params = 1;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->params(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractParamList)
  return target;
}

int PBContractParamList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractParamList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBContractParam params = 1;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractParamList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractParamList)
    MergeFrom(*source);
  }
}

void PBContractParamList::MergeFrom(const PBContractParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  params_.MergeFrom(from.params_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBContractParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractParamList::CopyFrom(const PBContractParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractParamList::IsInitialized() const {

  return true;
}

void PBContractParamList::Swap(PBContractParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractParamList::InternalSwap(PBContractParamList* other) {
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractParamList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractParamList_descriptor_;
  metadata.reflection = PBContractParamList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractParamList

// repeated .Micro.Future.Message.Business.PBContractParam params = 1;
int PBContractParamList::params_size() const {
  return params_.size();
}
void PBContractParamList::clear_params() {
  params_.Clear();
}
const ::Micro::Future::Message::Business::PBContractParam& PBContractParamList::params(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParamList.params)
  return params_.Get(index);
}
::Micro::Future::Message::Business::PBContractParam* PBContractParamList::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParamList.params)
  return params_.Mutable(index);
}
::Micro::Future::Message::Business::PBContractParam* PBContractParamList::add_params() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBContractParamList.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractParam >*
PBContractParamList::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBContractParamList.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractParam >&
PBContractParamList::params() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBContractParamList.params)
  return params_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBContractParamList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBContractParamList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBContractParamList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParamList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBContractParamList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParamList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBContractParamList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractParamList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBContractParamList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractParamList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOTCUserParam::kExchangeFieldNumber;
const int PBOTCUserParam::kContractFieldNumber;
const int PBOTCUserParam::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOTCUserParam::PBOTCUserParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOTCUserParam)
}

void PBOTCUserParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBOTCUserParam::PBOTCUserParam(const PBOTCUserParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOTCUserParam)
}

void PBOTCUserParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

PBOTCUserParam::~PBOTCUserParam() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOTCUserParam)
  SharedDtor();
}

void PBOTCUserParam::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBOTCUserParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOTCUserParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOTCUserParam_descriptor_;
}

const PBOTCUserParam& PBOTCUserParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOTCUserParam* PBOTCUserParam::default_instance_ = NULL;

PBOTCUserParam* PBOTCUserParam::New(::google::protobuf::Arena* arena) const {
  PBOTCUserParam* n = new PBOTCUserParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOTCUserParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOTCUserParam)
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

bool PBOTCUserParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOTCUserParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOTCUserParam.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOTCUserParam.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_quantity;
        break;
      }

      // optional double quantity = 3;
      case 3: {
        if (tag == 25) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &quantity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOTCUserParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOTCUserParam)
  return false;
#undef DO_
}

void PBOTCUserParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOTCUserParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double quantity = 3;
  if (this->quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->quantity(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOTCUserParam)
}

::google::protobuf::uint8* PBOTCUserParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOTCUserParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double quantity = 3;
  if (this->quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->quantity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOTCUserParam)
  return target;
}

int PBOTCUserParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOTCUserParam)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double quantity = 3;
  if (this->quantity() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOTCUserParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOTCUserParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOTCUserParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOTCUserParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOTCUserParam)
    MergeFrom(*source);
  }
}

void PBOTCUserParam::MergeFrom(const PBOTCUserParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.quantity() != 0) {
    set_quantity(from.quantity());
  }
}

void PBOTCUserParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOTCUserParam::CopyFrom(const PBOTCUserParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOTCUserParam::IsInitialized() const {

  return true;
}

void PBOTCUserParam::Swap(PBOTCUserParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOTCUserParam::InternalSwap(PBOTCUserParam* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(quantity_, other->quantity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOTCUserParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOTCUserParam_descriptor_;
  metadata.reflection = PBOTCUserParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOTCUserParam

// optional string exchange = 1;
void PBOTCUserParam::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOTCUserParam::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParam.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}
 void PBOTCUserParam::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}
 void PBOTCUserParam::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}
 ::std::string* PBOTCUserParam::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParam.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOTCUserParam::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOTCUserParam.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}

// optional string contract = 2;
void PBOTCUserParam::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOTCUserParam::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParam.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOTCUserParam.contract)
}
 void PBOTCUserParam::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOTCUserParam.contract)
}
 void PBOTCUserParam::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOTCUserParam.contract)
}
 ::std::string* PBOTCUserParam::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParam.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOTCUserParam::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOTCUserParam.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOTCUserParam.contract)
}

// optional double quantity = 3;
void PBOTCUserParam::clear_quantity() {
  quantity_ = 0;
}
 double PBOTCUserParam::quantity() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParam.quantity)
  return quantity_;
}
 void PBOTCUserParam::set_quantity(double value) {
  
  quantity_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOTCUserParam.quantity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOTCUserParamList::kParamsFieldNumber;
const int PBOTCUserParamList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOTCUserParamList::PBOTCUserParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOTCUserParamList)
}

void PBOTCUserParamList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOTCUserParamList::PBOTCUserParamList(const PBOTCUserParamList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOTCUserParamList)
}

void PBOTCUserParamList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBOTCUserParamList::~PBOTCUserParamList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOTCUserParamList)
  SharedDtor();
}

void PBOTCUserParamList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOTCUserParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOTCUserParamList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOTCUserParamList_descriptor_;
}

const PBOTCUserParamList& PBOTCUserParamList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOTCUserParamList* PBOTCUserParamList::default_instance_ = NULL;

PBOTCUserParamList* PBOTCUserParamList::New(::google::protobuf::Arena* arena) const {
  PBOTCUserParamList* n = new PBOTCUserParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOTCUserParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  params_.Clear();
}

bool PBOTCUserParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOTCUserParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOTCUserParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOTCUserParamList)
  return false;
#undef DO_
}

void PBOTCUserParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOTCUserParamList)
  // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 1;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->params(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOTCUserParamList)
}

::google::protobuf::uint8* PBOTCUserParamList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOTCUserParamList)
  // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 1;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->params(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOTCUserParamList)
  return target;
}

int PBOTCUserParamList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOTCUserParamList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 1;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOTCUserParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOTCUserParamList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOTCUserParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOTCUserParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOTCUserParamList)
    MergeFrom(*source);
  }
}

void PBOTCUserParamList::MergeFrom(const PBOTCUserParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  params_.MergeFrom(from.params_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBOTCUserParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOTCUserParamList::CopyFrom(const PBOTCUserParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOTCUserParamList::IsInitialized() const {

  return true;
}

void PBOTCUserParamList::Swap(PBOTCUserParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOTCUserParamList::InternalSwap(PBOTCUserParamList* other) {
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOTCUserParamList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOTCUserParamList_descriptor_;
  metadata.reflection = PBOTCUserParamList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOTCUserParamList

// repeated .Micro.Future.Message.Business.PBOTCUserParam params = 1;
int PBOTCUserParamList::params_size() const {
  return params_.size();
}
void PBOTCUserParamList::clear_params() {
  params_.Clear();
}
const ::Micro::Future::Message::Business::PBOTCUserParam& PBOTCUserParamList::params(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_.Get(index);
}
::Micro::Future::Message::Business::PBOTCUserParam* PBOTCUserParamList::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_.Mutable(index);
}
::Micro::Future::Message::Business::PBOTCUserParam* PBOTCUserParamList::add_params() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBOTCUserParam >*
PBOTCUserParamList::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBOTCUserParam >&
PBOTCUserParamList::params() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBOTCUserParamList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOTCUserParamList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOTCUserParamList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParamList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOTCUserParamList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParamList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOTCUserParamList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOTCUserParamList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOTCUserParamList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOTCUserParamList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOrderRequest::kHeaderFieldNumber;
const int PBOrderRequest::kOrderIDFieldNumber;
const int PBOrderRequest::kOrderSysIDFieldNumber;
const int PBOrderRequest::kExchangeFieldNumber;
const int PBOrderRequest::kContractFieldNumber;
const int PBOrderRequest::kLimitPriceFieldNumber;
const int PBOrderRequest::kVolumeFieldNumber;
const int PBOrderRequest::kExecTypeFieldNumber;
const int PBOrderRequest::kTifFieldNumber;
const int PBOrderRequest::kDirectionFieldNumber;
const int PBOrderRequest::kCallputFieldNumber;
const int PBOrderRequest::kOpencloseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOrderRequest::PBOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOrderRequest)
}

void PBOrderRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOrderRequest::PBOrderRequest(const PBOrderRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOrderRequest)
}

void PBOrderRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  orderid_ = GOOGLE_ULONGLONG(0);
  ordersysid_ = GOOGLE_ULONGLONG(0);
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limitprice_ = 0;
  volume_ = 0;
  exectype_ = 0;
  tif_ = 0;
  direction_ = 0;
  callput_ = 0;
  openclose_ = 0;
}

PBOrderRequest::~PBOrderRequest() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOrderRequest)
  SharedDtor();
}

void PBOrderRequest::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOrderRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOrderRequest_descriptor_;
}

const PBOrderRequest& PBOrderRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOrderRequest* PBOrderRequest::default_instance_ = NULL;

PBOrderRequest* PBOrderRequest::New(::google::protobuf::Arena* arena) const {
  PBOrderRequest* n = new PBOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOrderRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBOrderRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBOrderRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, ordersysid_);
  ZR_(limitprice_, exectype_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(tif_, openclose_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_orderID;
        break;
      }

      // optional uint64 orderID = 2;
      case 2: {
        if (tag == 16) {
         parse_orderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_orderSysID;
        break;
      }

      // optional uint64 orderSysID = 3;
      case 3: {
        if (tag == 24) {
         parse_orderSysID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordersysid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exchange;
        break;
      }

      // optional string exchange = 4;
      case 4: {
        if (tag == 34) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderRequest.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_contract;
        break;
      }

      // optional string contract = 5;
      case 5: {
        if (tag == 42) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderRequest.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_limitPrice;
        break;
      }

      // optional double limitPrice = 6;
      case 6: {
        if (tag == 49) {
         parse_limitPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limitprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_volume;
        break;
      }

      // optional int32 volume = 7;
      case 7: {
        if (tag == 56) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_execType;
        break;
      }

      // optional int32 execType = 8;
      case 8: {
        if (tag == 64) {
         parse_execType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exectype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_tif;
        break;
      }

      // optional int32 tif = 9;
      case 9: {
        if (tag == 72) {
         parse_tif:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tif_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_direction;
        break;
      }

      // optional int32 direction = 10;
      case 10: {
        if (tag == 80) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_callput;
        break;
      }

      // optional int32 callput = 11;
      case 11: {
        if (tag == 88) {
         parse_callput:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &callput_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_openclose;
        break;
      }

      // optional int32 openclose = 12;
      case 12: {
        if (tag == 96) {
         parse_openclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openclose_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOrderRequest)
  return false;
#undef DO_
}

void PBOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOrderRequest)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->orderid(), output);
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ordersysid(), output);
  }

  // optional string exchange = 4;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange(), output);
  }

  // optional string contract = 5;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->contract(), output);
  }

  // optional double limitPrice = 6;
  if (this->limitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->limitprice(), output);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->volume(), output);
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->exectype(), output);
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->tif(), output);
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->direction(), output);
  }

  // optional int32 callput = 11;
  if (this->callput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->callput(), output);
  }

  // optional int32 openclose = 12;
  if (this->openclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->openclose(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOrderRequest)
}

::google::protobuf::uint8* PBOrderRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOrderRequest)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->orderid(), target);
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ordersysid(), target);
  }

  // optional string exchange = 4;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange(), target);
  }

  // optional string contract = 5;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->contract(), target);
  }

  // optional double limitPrice = 6;
  if (this->limitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->limitprice(), target);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->volume(), target);
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->exectype(), target);
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->tif(), target);
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->direction(), target);
  }

  // optional int32 callput = 11;
  if (this->callput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->callput(), target);
  }

  // optional int32 openclose = 12;
  if (this->openclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->openclose(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOrderRequest)
  return target;
}

int PBOrderRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOrderRequest)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordersysid());
  }

  // optional string exchange = 4;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 5;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double limitPrice = 6;
  if (this->limitprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exectype());
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tif());
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 callput = 11;
  if (this->callput() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->callput());
  }

  // optional int32 openclose = 12;
  if (this->openclose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openclose());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOrderRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOrderRequest)
    MergeFrom(*source);
  }
}

void PBOrderRequest::MergeFrom(const PBOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.ordersysid() != 0) {
    set_ordersysid(from.ordersysid());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.limitprice() != 0) {
    set_limitprice(from.limitprice());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.exectype() != 0) {
    set_exectype(from.exectype());
  }
  if (from.tif() != 0) {
    set_tif(from.tif());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.callput() != 0) {
    set_callput(from.callput());
  }
  if (from.openclose() != 0) {
    set_openclose(from.openclose());
  }
}

void PBOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOrderRequest::CopyFrom(const PBOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOrderRequest::IsInitialized() const {

  return true;
}

void PBOrderRequest::Swap(PBOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOrderRequest::InternalSwap(PBOrderRequest* other) {
  std::swap(header_, other->header_);
  std::swap(orderid_, other->orderid_);
  std::swap(ordersysid_, other->ordersysid_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(limitprice_, other->limitprice_);
  std::swap(volume_, other->volume_);
  std::swap(exectype_, other->exectype_);
  std::swap(tif_, other->tif_);
  std::swap(direction_, other->direction_);
  std::swap(callput_, other->callput_);
  std::swap(openclose_, other->openclose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOrderRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOrderRequest_descriptor_;
  metadata.reflection = PBOrderRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOrderRequest

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBOrderRequest::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOrderRequest::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOrderRequest::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOrderRequest::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOrderRequest::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOrderRequest::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.header)
}

// optional uint64 orderID = 2;
void PBOrderRequest::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderRequest::orderid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.orderID)
  return orderid_;
}
 void PBOrderRequest::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.orderID)
}

// optional uint64 orderSysID = 3;
void PBOrderRequest::clear_ordersysid() {
  ordersysid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderRequest::ordersysid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.orderSysID)
  return ordersysid_;
}
 void PBOrderRequest::set_ordersysid(::google::protobuf::uint64 value) {
  
  ordersysid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.orderSysID)
}

// optional string exchange = 4;
void PBOrderRequest::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderRequest::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.exchange)
}
 void PBOrderRequest::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderRequest.exchange)
}
 void PBOrderRequest::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderRequest.exchange)
}
 ::std::string* PBOrderRequest::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderRequest::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.exchange)
}

// optional string contract = 5;
void PBOrderRequest::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderRequest::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.contract)
}
 void PBOrderRequest::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderRequest.contract)
}
 void PBOrderRequest::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderRequest.contract)
}
 ::std::string* PBOrderRequest::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderRequest::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.contract)
}

// optional double limitPrice = 6;
void PBOrderRequest::clear_limitprice() {
  limitprice_ = 0;
}
 double PBOrderRequest::limitprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.limitPrice)
  return limitprice_;
}
 void PBOrderRequest::set_limitprice(double value) {
  
  limitprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.limitPrice)
}

// optional int32 volume = 7;
void PBOrderRequest::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.volume)
  return volume_;
}
 void PBOrderRequest::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.volume)
}

// optional int32 execType = 8;
void PBOrderRequest::clear_exectype() {
  exectype_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::exectype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.execType)
  return exectype_;
}
 void PBOrderRequest::set_exectype(::google::protobuf::int32 value) {
  
  exectype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.execType)
}

// optional int32 tif = 9;
void PBOrderRequest::clear_tif() {
  tif_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::tif() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.tif)
  return tif_;
}
 void PBOrderRequest::set_tif(::google::protobuf::int32 value) {
  
  tif_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.tif)
}

// optional int32 direction = 10;
void PBOrderRequest::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.direction)
  return direction_;
}
 void PBOrderRequest::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.direction)
}

// optional int32 callput = 11;
void PBOrderRequest::clear_callput() {
  callput_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::callput() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.callput)
  return callput_;
}
 void PBOrderRequest::set_callput(::google::protobuf::int32 value) {
  
  callput_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.callput)
}

// optional int32 openclose = 12;
void PBOrderRequest::clear_openclose() {
  openclose_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::openclose() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.openclose)
  return openclose_;
}
 void PBOrderRequest::set_openclose(::google::protobuf::int32 value) {
  
  openclose_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.openclose)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOrderInfo::kOrderIDFieldNumber;
const int PBOrderInfo::kOrderSysIDFieldNumber;
const int PBOrderInfo::kBrokerIDFieldNumber;
const int PBOrderInfo::kInvestorIDFieldNumber;
const int PBOrderInfo::kExchangeFieldNumber;
const int PBOrderInfo::kContractFieldNumber;
const int PBOrderInfo::kExecTypeFieldNumber;
const int PBOrderInfo::kTifFieldNumber;
const int PBOrderInfo::kTradingTypeFieldNumber;
const int PBOrderInfo::kDirectionFieldNumber;
const int PBOrderInfo::kLimitPriceFieldNumber;
const int PBOrderInfo::kStopPriceFieldNumber;
const int PBOrderInfo::kOrderStatusFieldNumber;
const int PBOrderInfo::kOrderTypeFieldNumber;
const int PBOrderInfo::kVolumeFieldNumber;
const int PBOrderInfo::kInsertTimeFieldNumber;
const int PBOrderInfo::kUpdateTimeFieldNumber;
const int PBOrderInfo::kCancelTimeFieldNumber;
const int PBOrderInfo::kVolumeTradedFieldNumber;
const int PBOrderInfo::kVolumeRemainFieldNumber;
const int PBOrderInfo::kVolumeConditionFieldNumber;
const int PBOrderInfo::kTradingDayFieldNumber;
const int PBOrderInfo::kActiveFieldNumber;
const int PBOrderInfo::kOpencloseFieldNumber;
const int PBOrderInfo::kMessageFieldNumber;
const int PBOrderInfo::kSessionIDFieldNumber;
const int PBOrderInfo::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOrderInfo::PBOrderInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOrderInfo)
}

void PBOrderInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOrderInfo::PBOrderInfo(const PBOrderInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOrderInfo)
}

void PBOrderInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  orderid_ = GOOGLE_ULONGLONG(0);
  ordersysid_ = GOOGLE_ULONGLONG(0);
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exectype_ = 0;
  tif_ = 0;
  tradingtype_ = 0;
  direction_ = 0;
  limitprice_ = 0;
  stopprice_ = 0;
  orderstatus_ = 0;
  ordertype_ = 0;
  volume_ = 0;
  inserttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canceltime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumetraded_ = 0;
  volumeremain_ = 0;
  volumecondition_ = 0;
  tradingday_ = 0;
  active_ = false;
  openclose_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = 0;
  header_ = NULL;
}

PBOrderInfo::~PBOrderInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOrderInfo)
  SharedDtor();
}

void PBOrderInfo::SharedDtor() {
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inserttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canceltime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOrderInfo_descriptor_;
}

const PBOrderInfo& PBOrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOrderInfo* PBOrderInfo::default_instance_ = NULL;

PBOrderInfo* PBOrderInfo::New(::google::protobuf::Arena* arena) const {
  PBOrderInfo* n = new PBOrderInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOrderInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBOrderInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBOrderInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, ordersysid_);
  ZR_(exectype_, tif_);
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(tradingtype_, ordertype_);
  volume_ = 0;
  inserttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(volumeremain_, active_);
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canceltime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumetraded_ = 0;
  openclose_ = 0;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = 0;
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBOrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOrderInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 orderID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_orderSysID;
        break;
      }

      // optional uint64 orderSysID = 2;
      case 2: {
        if (tag == 16) {
         parse_orderSysID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordersysid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 3;
      case 3: {
        if (tag == 26) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_investorID;
        break;
      }

      // optional string investorID = 4;
      case 4: {
        if (tag == 34) {
         parse_investorID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorid().data(), this->investorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.investorID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_exchange;
        break;
      }

      // optional string exchange = 5;
      case 5: {
        if (tag == 42) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_contract;
        break;
      }

      // optional string contract = 6;
      case 6: {
        if (tag == 50) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_execType;
        break;
      }

      // optional int32 execType = 7;
      case 7: {
        if (tag == 56) {
         parse_execType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exectype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_tif;
        break;
      }

      // optional int32 tif = 8;
      case 8: {
        if (tag == 64) {
         parse_tif:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tif_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_tradingType;
        break;
      }

      // optional int32 tradingType = 9;
      case 9: {
        if (tag == 72) {
         parse_tradingType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_direction;
        break;
      }

      // optional int32 direction = 10;
      case 10: {
        if (tag == 80) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_limitPrice;
        break;
      }

      // optional double limitPrice = 11;
      case 11: {
        if (tag == 89) {
         parse_limitPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limitprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_stopPrice;
        break;
      }

      // optional double stopPrice = 12;
      case 12: {
        if (tag == 97) {
         parse_stopPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stopprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_orderStatus;
        break;
      }

      // optional int32 orderStatus = 13;
      case 13: {
        if (tag == 104) {
         parse_orderStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderstatus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_orderType;
        break;
      }

      // optional int32 orderType = 14;
      case 14: {
        if (tag == 112) {
         parse_orderType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordertype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_volume;
        break;
      }

      // optional int32 volume = 15;
      case 15: {
        if (tag == 120) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_insertTime;
        break;
      }

      // optional string insertTime = 17;
      case 17: {
        if (tag == 138) {
         parse_insertTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inserttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inserttime().data(), this->inserttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.insertTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_updateTime;
        break;
      }

      // optional string updateTime = 18;
      case 18: {
        if (tag == 146) {
         parse_updateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatetime().data(), this->updatetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.updateTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_cancelTime;
        break;
      }

      // optional string cancelTime = 19;
      case 19: {
        if (tag == 154) {
         parse_cancelTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_canceltime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->canceltime().data(), this->canceltime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.cancelTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_volumeTraded;
        break;
      }

      // optional int32 volumeTraded = 20;
      case 20: {
        if (tag == 160) {
         parse_volumeTraded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumetraded_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_volumeRemain;
        break;
      }

      // optional int32 volumeRemain = 21;
      case 21: {
        if (tag == 168) {
         parse_volumeRemain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumeremain_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_volumeCondition;
        break;
      }

      // optional int32 volumeCondition = 22;
      case 22: {
        if (tag == 176) {
         parse_volumeCondition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumecondition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_tradingDay;
        break;
      }

      // optional int32 tradingDay = 23;
      case 23: {
        if (tag == 184) {
         parse_tradingDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingday_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_active;
        break;
      }

      // optional bool active = 24;
      case 24: {
        if (tag == 192) {
         parse_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_openclose;
        break;
      }

      // optional int32 openclose = 25;
      case 25: {
        if (tag == 200) {
         parse_openclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openclose_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_message;
        break;
      }

      // optional bytes message = 26;
      case 26: {
        if (tag == 210) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_sessionID;
        break;
      }

      // optional int32 sessionID = 27;
      case 27: {
        if (tag == 216) {
         parse_sessionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 28;
      case 28: {
        if (tag == 226) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOrderInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOrderInfo)
  return false;
#undef DO_
}

void PBOrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOrderInfo)
  // optional uint64 orderID = 1;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->orderid(), output);
  }

  // optional uint64 orderSysID = 2;
  if (this->ordersysid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ordersysid(), output);
  }

  // optional string brokerID = 3;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->brokerid(), output);
  }

  // optional string investorID = 4;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.investorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->investorid(), output);
  }

  // optional string exchange = 5;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->exchange(), output);
  }

  // optional string contract = 6;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->contract(), output);
  }

  // optional int32 execType = 7;
  if (this->exectype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exectype(), output);
  }

  // optional int32 tif = 8;
  if (this->tif() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->tif(), output);
  }

  // optional int32 tradingType = 9;
  if (this->tradingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->tradingtype(), output);
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->direction(), output);
  }

  // optional double limitPrice = 11;
  if (this->limitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->limitprice(), output);
  }

  // optional double stopPrice = 12;
  if (this->stopprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->stopprice(), output);
  }

  // optional int32 orderStatus = 13;
  if (this->orderstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->orderstatus(), output);
  }

  // optional int32 orderType = 14;
  if (this->ordertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->ordertype(), output);
  }

  // optional int32 volume = 15;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->volume(), output);
  }

  // optional string insertTime = 17;
  if (this->inserttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inserttime().data(), this->inserttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.insertTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->inserttime(), output);
  }

  // optional string updateTime = 18;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.updateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->updatetime(), output);
  }

  // optional string cancelTime = 19;
  if (this->canceltime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->canceltime().data(), this->canceltime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.cancelTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->canceltime(), output);
  }

  // optional int32 volumeTraded = 20;
  if (this->volumetraded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->volumetraded(), output);
  }

  // optional int32 volumeRemain = 21;
  if (this->volumeremain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->volumeremain(), output);
  }

  // optional int32 volumeCondition = 22;
  if (this->volumecondition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->volumecondition(), output);
  }

  // optional int32 tradingDay = 23;
  if (this->tradingday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->tradingday(), output);
  }

  // optional bool active = 24;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->active(), output);
  }

  // optional int32 openclose = 25;
  if (this->openclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->openclose(), output);
  }

  // optional bytes message = 26;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      26, this->message(), output);
  }

  // optional int32 sessionID = 27;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->sessionid(), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 28;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOrderInfo)
}

::google::protobuf::uint8* PBOrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOrderInfo)
  // optional uint64 orderID = 1;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->orderid(), target);
  }

  // optional uint64 orderSysID = 2;
  if (this->ordersysid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ordersysid(), target);
  }

  // optional string brokerID = 3;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->brokerid(), target);
  }

  // optional string investorID = 4;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.investorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->investorid(), target);
  }

  // optional string exchange = 5;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->exchange(), target);
  }

  // optional string contract = 6;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->contract(), target);
  }

  // optional int32 execType = 7;
  if (this->exectype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exectype(), target);
  }

  // optional int32 tif = 8;
  if (this->tif() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->tif(), target);
  }

  // optional int32 tradingType = 9;
  if (this->tradingtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->tradingtype(), target);
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->direction(), target);
  }

  // optional double limitPrice = 11;
  if (this->limitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->limitprice(), target);
  }

  // optional double stopPrice = 12;
  if (this->stopprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->stopprice(), target);
  }

  // optional int32 orderStatus = 13;
  if (this->orderstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->orderstatus(), target);
  }

  // optional int32 orderType = 14;
  if (this->ordertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->ordertype(), target);
  }

  // optional int32 volume = 15;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->volume(), target);
  }

  // optional string insertTime = 17;
  if (this->inserttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inserttime().data(), this->inserttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.insertTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->inserttime(), target);
  }

  // optional string updateTime = 18;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.updateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->updatetime(), target);
  }

  // optional string cancelTime = 19;
  if (this->canceltime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->canceltime().data(), this->canceltime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.cancelTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->canceltime(), target);
  }

  // optional int32 volumeTraded = 20;
  if (this->volumetraded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->volumetraded(), target);
  }

  // optional int32 volumeRemain = 21;
  if (this->volumeremain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->volumeremain(), target);
  }

  // optional int32 volumeCondition = 22;
  if (this->volumecondition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->volumecondition(), target);
  }

  // optional int32 tradingDay = 23;
  if (this->tradingday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->tradingday(), target);
  }

  // optional bool active = 24;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->active(), target);
  }

  // optional int32 openclose = 25;
  if (this->openclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->openclose(), target);
  }

  // optional bytes message = 26;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        26, this->message(), target);
  }

  // optional int32 sessionID = 27;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->sessionid(), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 28;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOrderInfo)
  return target;
}

int PBOrderInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOrderInfo)
  int total_size = 0;

  // optional uint64 orderID = 1;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint64 orderSysID = 2;
  if (this->ordersysid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordersysid());
  }

  // optional string brokerID = 3;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string investorID = 4;
  if (this->investorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorid());
  }

  // optional string exchange = 5;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 6;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional int32 execType = 7;
  if (this->exectype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exectype());
  }

  // optional int32 tif = 8;
  if (this->tif() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tif());
  }

  // optional int32 tradingType = 9;
  if (this->tradingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingtype());
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional double limitPrice = 11;
  if (this->limitprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double stopPrice = 12;
  if (this->stopprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 orderStatus = 13;
  if (this->orderstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->orderstatus());
  }

  // optional int32 orderType = 14;
  if (this->ordertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ordertype());
  }

  // optional int32 volume = 15;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional string insertTime = 17;
  if (this->inserttime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inserttime());
  }

  // optional string updateTime = 18;
  if (this->updatetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  // optional string cancelTime = 19;
  if (this->canceltime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->canceltime());
  }

  // optional int32 volumeTraded = 20;
  if (this->volumetraded() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumetraded());
  }

  // optional int32 volumeRemain = 21;
  if (this->volumeremain() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumeremain());
  }

  // optional int32 volumeCondition = 22;
  if (this->volumecondition() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumecondition());
  }

  // optional int32 tradingDay = 23;
  if (this->tradingday() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingday());
  }

  // optional bool active = 24;
  if (this->active() != 0) {
    total_size += 2 + 1;
  }

  // optional int32 openclose = 25;
  if (this->openclose() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openclose());
  }

  // optional bytes message = 26;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // optional int32 sessionID = 27;
  if (this->sessionid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  // optional .Micro.Future.Message.DataHeader header = 28;
  if (this->has_header()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOrderInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOrderInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOrderInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOrderInfo)
    MergeFrom(*source);
  }
}

void PBOrderInfo::MergeFrom(const PBOrderInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.ordersysid() != 0) {
    set_ordersysid(from.ordersysid());
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.investorid().size() > 0) {

    investorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorid_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.exectype() != 0) {
    set_exectype(from.exectype());
  }
  if (from.tif() != 0) {
    set_tif(from.tif());
  }
  if (from.tradingtype() != 0) {
    set_tradingtype(from.tradingtype());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.limitprice() != 0) {
    set_limitprice(from.limitprice());
  }
  if (from.stopprice() != 0) {
    set_stopprice(from.stopprice());
  }
  if (from.orderstatus() != 0) {
    set_orderstatus(from.orderstatus());
  }
  if (from.ordertype() != 0) {
    set_ordertype(from.ordertype());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.inserttime().size() > 0) {

    inserttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inserttime_);
  }
  if (from.updatetime().size() > 0) {

    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.canceltime().size() > 0) {

    canceltime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.canceltime_);
  }
  if (from.volumetraded() != 0) {
    set_volumetraded(from.volumetraded());
  }
  if (from.volumeremain() != 0) {
    set_volumeremain(from.volumeremain());
  }
  if (from.volumecondition() != 0) {
    set_volumecondition(from.volumecondition());
  }
  if (from.tradingday() != 0) {
    set_tradingday(from.tradingday());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
  if (from.openclose() != 0) {
    set_openclose(from.openclose());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBOrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOrderInfo::CopyFrom(const PBOrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOrderInfo::IsInitialized() const {

  return true;
}

void PBOrderInfo::Swap(PBOrderInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOrderInfo::InternalSwap(PBOrderInfo* other) {
  std::swap(orderid_, other->orderid_);
  std::swap(ordersysid_, other->ordersysid_);
  brokerid_.Swap(&other->brokerid_);
  investorid_.Swap(&other->investorid_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(exectype_, other->exectype_);
  std::swap(tif_, other->tif_);
  std::swap(tradingtype_, other->tradingtype_);
  std::swap(direction_, other->direction_);
  std::swap(limitprice_, other->limitprice_);
  std::swap(stopprice_, other->stopprice_);
  std::swap(orderstatus_, other->orderstatus_);
  std::swap(ordertype_, other->ordertype_);
  std::swap(volume_, other->volume_);
  inserttime_.Swap(&other->inserttime_);
  updatetime_.Swap(&other->updatetime_);
  canceltime_.Swap(&other->canceltime_);
  std::swap(volumetraded_, other->volumetraded_);
  std::swap(volumeremain_, other->volumeremain_);
  std::swap(volumecondition_, other->volumecondition_);
  std::swap(tradingday_, other->tradingday_);
  std::swap(active_, other->active_);
  std::swap(openclose_, other->openclose_);
  message_.Swap(&other->message_);
  std::swap(sessionid_, other->sessionid_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOrderInfo_descriptor_;
  metadata.reflection = PBOrderInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOrderInfo

// optional uint64 orderID = 1;
void PBOrderInfo::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderInfo::orderid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderID)
  return orderid_;
}
 void PBOrderInfo::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderID)
}

// optional uint64 orderSysID = 2;
void PBOrderInfo::clear_ordersysid() {
  ordersysid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderInfo::ordersysid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderSysID)
  return ordersysid_;
}
 void PBOrderInfo::set_ordersysid(::google::protobuf::uint64 value) {
  
  ordersysid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderSysID)
}

// optional string brokerID = 3;
void PBOrderInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}
 void PBOrderInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}
 void PBOrderInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}
 ::std::string* PBOrderInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}

// optional string investorID = 4;
void PBOrderInfo::clear_investorid() {
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::investorid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.investorID)
  return investorid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_investorid(const ::std::string& value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.investorID)
}
 void PBOrderInfo::set_investorid(const char* value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.investorID)
}
 void PBOrderInfo::set_investorid(const char* value, size_t size) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.investorID)
}
 ::std::string* PBOrderInfo::mutable_investorid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.investorID)
  return investorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_investorid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.investorID)
  
  return investorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_investorid(::std::string* investorid) {
  if (investorid != NULL) {
    
  } else {
    
  }
  investorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.investorID)
}

// optional string exchange = 5;
void PBOrderInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.exchange)
}
 void PBOrderInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.exchange)
}
 void PBOrderInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.exchange)
}
 ::std::string* PBOrderInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.exchange)
}

// optional string contract = 6;
void PBOrderInfo::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.contract)
}
 void PBOrderInfo::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.contract)
}
 void PBOrderInfo::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.contract)
}
 ::std::string* PBOrderInfo::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.contract)
}

// optional int32 execType = 7;
void PBOrderInfo::clear_exectype() {
  exectype_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::exectype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.execType)
  return exectype_;
}
 void PBOrderInfo::set_exectype(::google::protobuf::int32 value) {
  
  exectype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.execType)
}

// optional int32 tif = 8;
void PBOrderInfo::clear_tif() {
  tif_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::tif() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.tif)
  return tif_;
}
 void PBOrderInfo::set_tif(::google::protobuf::int32 value) {
  
  tif_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.tif)
}

// optional int32 tradingType = 9;
void PBOrderInfo::clear_tradingtype() {
  tradingtype_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::tradingtype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.tradingType)
  return tradingtype_;
}
 void PBOrderInfo::set_tradingtype(::google::protobuf::int32 value) {
  
  tradingtype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.tradingType)
}

// optional int32 direction = 10;
void PBOrderInfo::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.direction)
  return direction_;
}
 void PBOrderInfo::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.direction)
}

// optional double limitPrice = 11;
void PBOrderInfo::clear_limitprice() {
  limitprice_ = 0;
}
 double PBOrderInfo::limitprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.limitPrice)
  return limitprice_;
}
 void PBOrderInfo::set_limitprice(double value) {
  
  limitprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.limitPrice)
}

// optional double stopPrice = 12;
void PBOrderInfo::clear_stopprice() {
  stopprice_ = 0;
}
 double PBOrderInfo::stopprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.stopPrice)
  return stopprice_;
}
 void PBOrderInfo::set_stopprice(double value) {
  
  stopprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.stopPrice)
}

// optional int32 orderStatus = 13;
void PBOrderInfo::clear_orderstatus() {
  orderstatus_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::orderstatus() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderStatus)
  return orderstatus_;
}
 void PBOrderInfo::set_orderstatus(::google::protobuf::int32 value) {
  
  orderstatus_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderStatus)
}

// optional int32 orderType = 14;
void PBOrderInfo::clear_ordertype() {
  ordertype_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::ordertype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderType)
  return ordertype_;
}
 void PBOrderInfo::set_ordertype(::google::protobuf::int32 value) {
  
  ordertype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderType)
}

// optional int32 volume = 15;
void PBOrderInfo::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volume)
  return volume_;
}
 void PBOrderInfo::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volume)
}

// optional string insertTime = 17;
void PBOrderInfo::clear_inserttime() {
  inserttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::inserttime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.insertTime)
  return inserttime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_inserttime(const ::std::string& value) {
  
  inserttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}
 void PBOrderInfo::set_inserttime(const char* value) {
  
  inserttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}
 void PBOrderInfo::set_inserttime(const char* value, size_t size) {
  
  inserttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}
 ::std::string* PBOrderInfo::mutable_inserttime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.insertTime)
  return inserttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_inserttime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.insertTime)
  
  return inserttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_inserttime(::std::string* inserttime) {
  if (inserttime != NULL) {
    
  } else {
    
  }
  inserttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inserttime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}

// optional string updateTime = 18;
void PBOrderInfo::clear_updatetime() {
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::updatetime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.updateTime)
  return updatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_updatetime(const ::std::string& value) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}
 void PBOrderInfo::set_updatetime(const char* value) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}
 void PBOrderInfo::set_updatetime(const char* value, size_t size) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}
 ::std::string* PBOrderInfo::mutable_updatetime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.updateTime)
  return updatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_updatetime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.updateTime)
  
  return updatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_updatetime(::std::string* updatetime) {
  if (updatetime != NULL) {
    
  } else {
    
  }
  updatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatetime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}

// optional string cancelTime = 19;
void PBOrderInfo::clear_canceltime() {
  canceltime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::canceltime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
  return canceltime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_canceltime(const ::std::string& value) {
  
  canceltime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}
 void PBOrderInfo::set_canceltime(const char* value) {
  
  canceltime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}
 void PBOrderInfo::set_canceltime(const char* value, size_t size) {
  
  canceltime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}
 ::std::string* PBOrderInfo::mutable_canceltime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
  return canceltime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_canceltime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
  
  return canceltime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_canceltime(::std::string* canceltime) {
  if (canceltime != NULL) {
    
  } else {
    
  }
  canceltime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), canceltime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}

// optional int32 volumeTraded = 20;
void PBOrderInfo::clear_volumetraded() {
  volumetraded_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volumetraded() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volumeTraded)
  return volumetraded_;
}
 void PBOrderInfo::set_volumetraded(::google::protobuf::int32 value) {
  
  volumetraded_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volumeTraded)
}

// optional int32 volumeRemain = 21;
void PBOrderInfo::clear_volumeremain() {
  volumeremain_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volumeremain() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volumeRemain)
  return volumeremain_;
}
 void PBOrderInfo::set_volumeremain(::google::protobuf::int32 value) {
  
  volumeremain_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volumeRemain)
}

// optional int32 volumeCondition = 22;
void PBOrderInfo::clear_volumecondition() {
  volumecondition_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volumecondition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volumeCondition)
  return volumecondition_;
}
 void PBOrderInfo::set_volumecondition(::google::protobuf::int32 value) {
  
  volumecondition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volumeCondition)
}

// optional int32 tradingDay = 23;
void PBOrderInfo::clear_tradingday() {
  tradingday_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::tradingday() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.tradingDay)
  return tradingday_;
}
 void PBOrderInfo::set_tradingday(::google::protobuf::int32 value) {
  
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.tradingDay)
}

// optional bool active = 24;
void PBOrderInfo::clear_active() {
  active_ = false;
}
 bool PBOrderInfo::active() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.active)
  return active_;
}
 void PBOrderInfo::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.active)
}

// optional int32 openclose = 25;
void PBOrderInfo::clear_openclose() {
  openclose_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::openclose() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.openclose)
  return openclose_;
}
 void PBOrderInfo::set_openclose(::google::protobuf::int32 value) {
  
  openclose_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.openclose)
}

// optional bytes message = 26;
void PBOrderInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::message() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.message)
}
 void PBOrderInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.message)
}
 void PBOrderInfo::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.message)
}
 ::std::string* PBOrderInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_message() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.message)
}

// optional int32 sessionID = 27;
void PBOrderInfo::clear_sessionid() {
  sessionid_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::sessionid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.sessionID)
  return sessionid_;
}
 void PBOrderInfo::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.sessionID)
}

// optional .Micro.Future.Message.DataHeader header = 28;
bool PBOrderInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOrderInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOrderInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOrderInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOrderInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOrderInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTradeInfo::kTradeIDFieldNumber;
const int PBTradeInfo::kDirectionFieldNumber;
const int PBTradeInfo::kOpencloseFieldNumber;
const int PBTradeInfo::kOrderSysIDFieldNumber;
const int PBTradeInfo::kOrderIDFieldNumber;
const int PBTradeInfo::kPriceFieldNumber;
const int PBTradeInfo::kVolumeFieldNumber;
const int PBTradeInfo::kBrokerIDFieldNumber;
const int PBTradeInfo::kInvestorIDFieldNumber;
const int PBTradeInfo::kExchangeFieldNumber;
const int PBTradeInfo::kContractFieldNumber;
const int PBTradeInfo::kUserIDFieldNumber;
const int PBTradeInfo::kTradeDateFieldNumber;
const int PBTradeInfo::kTradeTimeFieldNumber;
const int PBTradeInfo::kTradeTypeFieldNumber;
const int PBTradeInfo::kHedgeFlagFieldNumber;
const int PBTradeInfo::kCommissionFieldNumber;
const int PBTradeInfo::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTradeInfo::PBTradeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBTradeInfo)
}

void PBTradeInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBTradeInfo::PBTradeInfo(const PBTradeInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBTradeInfo)
}

void PBTradeInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tradeid_ = GOOGLE_ULONGLONG(0);
  direction_ = 0;
  openclose_ = 0;
  ordersysid_ = GOOGLE_ULONGLONG(0);
  orderid_ = GOOGLE_ULONGLONG(0);
  price_ = 0;
  volume_ = 0;
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetype_ = 0;
  hedgeflag_ = 0;
  commission_ = 0;
  header_ = NULL;
}

PBTradeInfo::~PBTradeInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBTradeInfo)
  SharedDtor();
}

void PBTradeInfo::SharedDtor() {
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBTradeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTradeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTradeInfo_descriptor_;
}

const PBTradeInfo& PBTradeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBTradeInfo* PBTradeInfo::default_instance_ = NULL;

PBTradeInfo* PBTradeInfo::New(::google::protobuf::Arena* arena) const {
  PBTradeInfo* n = new PBTradeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTradeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBTradeInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBTradeInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBTradeInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tradeid_, price_);
  volume_ = 0;
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetype_ = 0;
  hedgeflag_ = 0;
  commission_ = 0;
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBTradeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBTradeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tradeID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tradeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_direction;
        break;
      }

      // optional int32 direction = 2;
      case 2: {
        if (tag == 16) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_openclose;
        break;
      }

      // optional int32 openclose = 3;
      case 3: {
        if (tag == 24) {
         parse_openclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openclose_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_orderSysID;
        break;
      }

      // optional uint64 orderSysID = 4;
      case 4: {
        if (tag == 32) {
         parse_orderSysID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordersysid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_orderID;
        break;
      }

      // optional uint64 orderID = 5;
      case 5: {
        if (tag == 40) {
         parse_orderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_price;
        break;
      }

      // optional double price = 6;
      case 6: {
        if (tag == 49) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_volume;
        break;
      }

      // optional int32 volume = 7;
      case 7: {
        if (tag == 56) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 8;
      case 8: {
        if (tag == 66) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_investorID;
        break;
      }

      // optional string investorID = 9;
      case 9: {
        if (tag == 74) {
         parse_investorID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorid().data(), this->investorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.investorID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_exchange;
        break;
      }

      // optional string exchange = 10;
      case 10: {
        if (tag == 82) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_contract;
        break;
      }

      // optional string contract = 11;
      case 11: {
        if (tag == 90) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_userID;
        break;
      }

      // optional string userID = 12;
      case 12: {
        if (tag == 98) {
         parse_userID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.userID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_tradeDate;
        break;
      }

      // optional string tradeDate = 13;
      case 13: {
        if (tag == 106) {
         parse_tradeDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradedate().data(), this->tradedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.tradeDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_tradeTime;
        break;
      }

      // optional string tradeTime = 14;
      case 14: {
        if (tag == 114) {
         parse_tradeTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradetime().data(), this->tradetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.tradeTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_tradeType;
        break;
      }

      // optional int32 tradeType = 15;
      case 15: {
        if (tag == 120) {
         parse_tradeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_hedgeFlag;
        break;
      }

      // optional int32 hedgeFlag = 16;
      case 16: {
        if (tag == 128) {
         parse_hedgeFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hedgeflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_commission;
        break;
      }

      // optional double commission = 17;
      case 17: {
        if (tag == 137) {
         parse_commission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 18;
      case 18: {
        if (tag == 146) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBTradeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBTradeInfo)
  return false;
#undef DO_
}

void PBTradeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBTradeInfo)
  // optional uint64 tradeID = 1;
  if (this->tradeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tradeid(), output);
  }

  // optional int32 direction = 2;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->direction(), output);
  }

  // optional int32 openclose = 3;
  if (this->openclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->openclose(), output);
  }

  // optional uint64 orderSysID = 4;
  if (this->ordersysid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ordersysid(), output);
  }

  // optional uint64 orderID = 5;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->orderid(), output);
  }

  // optional double price = 6;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->price(), output);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->volume(), output);
  }

  // optional string brokerID = 8;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->brokerid(), output);
  }

  // optional string investorID = 9;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.investorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->investorid(), output);
  }

  // optional string exchange = 10;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->exchange(), output);
  }

  // optional string contract = 11;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->contract(), output);
  }

  // optional string userID = 12;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.userID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->userid(), output);
  }

  // optional string tradeDate = 13;
  if (this->tradedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->tradedate(), output);
  }

  // optional string tradeTime = 14;
  if (this->tradetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradetime().data(), this->tradetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->tradetime(), output);
  }

  // optional int32 tradeType = 15;
  if (this->tradetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->tradetype(), output);
  }

  // optional int32 hedgeFlag = 16;
  if (this->hedgeflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->hedgeflag(), output);
  }

  // optional double commission = 17;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->commission(), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 18;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBTradeInfo)
}

::google::protobuf::uint8* PBTradeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBTradeInfo)
  // optional uint64 tradeID = 1;
  if (this->tradeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tradeid(), target);
  }

  // optional int32 direction = 2;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->direction(), target);
  }

  // optional int32 openclose = 3;
  if (this->openclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->openclose(), target);
  }

  // optional uint64 orderSysID = 4;
  if (this->ordersysid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ordersysid(), target);
  }

  // optional uint64 orderID = 5;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->orderid(), target);
  }

  // optional double price = 6;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->price(), target);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->volume(), target);
  }

  // optional string brokerID = 8;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->brokerid(), target);
  }

  // optional string investorID = 9;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.investorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->investorid(), target);
  }

  // optional string exchange = 10;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->exchange(), target);
  }

  // optional string contract = 11;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->contract(), target);
  }

  // optional string userID = 12;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.userID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->userid(), target);
  }

  // optional string tradeDate = 13;
  if (this->tradedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->tradedate(), target);
  }

  // optional string tradeTime = 14;
  if (this->tradetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradetime().data(), this->tradetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->tradetime(), target);
  }

  // optional int32 tradeType = 15;
  if (this->tradetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->tradetype(), target);
  }

  // optional int32 hedgeFlag = 16;
  if (this->hedgeflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->hedgeflag(), target);
  }

  // optional double commission = 17;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->commission(), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 18;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBTradeInfo)
  return target;
}

int PBTradeInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBTradeInfo)
  int total_size = 0;

  // optional uint64 tradeID = 1;
  if (this->tradeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tradeid());
  }

  // optional int32 direction = 2;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 openclose = 3;
  if (this->openclose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openclose());
  }

  // optional uint64 orderSysID = 4;
  if (this->ordersysid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordersysid());
  }

  // optional uint64 orderID = 5;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional double price = 6;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional string brokerID = 8;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string investorID = 9;
  if (this->investorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorid());
  }

  // optional string exchange = 10;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 11;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string userID = 12;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string tradeDate = 13;
  if (this->tradedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradedate());
  }

  // optional string tradeTime = 14;
  if (this->tradetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradetime());
  }

  // optional int32 tradeType = 15;
  if (this->tradetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradetype());
  }

  // optional int32 hedgeFlag = 16;
  if (this->hedgeflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hedgeflag());
  }

  // optional double commission = 17;
  if (this->commission() != 0) {
    total_size += 2 + 8;
  }

  // optional .Micro.Future.Message.DataHeader header = 18;
  if (this->has_header()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTradeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTradeInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTradeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBTradeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBTradeInfo)
    MergeFrom(*source);
  }
}

void PBTradeInfo::MergeFrom(const PBTradeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.tradeid() != 0) {
    set_tradeid(from.tradeid());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.openclose() != 0) {
    set_openclose(from.openclose());
  }
  if (from.ordersysid() != 0) {
    set_ordersysid(from.ordersysid());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.investorid().size() > 0) {

    investorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorid_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.tradedate().size() > 0) {

    tradedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradedate_);
  }
  if (from.tradetime().size() > 0) {

    tradetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradetime_);
  }
  if (from.tradetype() != 0) {
    set_tradetype(from.tradetype());
  }
  if (from.hedgeflag() != 0) {
    set_hedgeflag(from.hedgeflag());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBTradeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTradeInfo::CopyFrom(const PBTradeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTradeInfo::IsInitialized() const {

  return true;
}

void PBTradeInfo::Swap(PBTradeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTradeInfo::InternalSwap(PBTradeInfo* other) {
  std::swap(tradeid_, other->tradeid_);
  std::swap(direction_, other->direction_);
  std::swap(openclose_, other->openclose_);
  std::swap(ordersysid_, other->ordersysid_);
  std::swap(orderid_, other->orderid_);
  std::swap(price_, other->price_);
  std::swap(volume_, other->volume_);
  brokerid_.Swap(&other->brokerid_);
  investorid_.Swap(&other->investorid_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  userid_.Swap(&other->userid_);
  tradedate_.Swap(&other->tradedate_);
  tradetime_.Swap(&other->tradetime_);
  std::swap(tradetype_, other->tradetype_);
  std::swap(hedgeflag_, other->hedgeflag_);
  std::swap(commission_, other->commission_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTradeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTradeInfo_descriptor_;
  metadata.reflection = PBTradeInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTradeInfo

// optional uint64 tradeID = 1;
void PBTradeInfo::clear_tradeid() {
  tradeid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBTradeInfo::tradeid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeID)
  return tradeid_;
}
 void PBTradeInfo::set_tradeid(::google::protobuf::uint64 value) {
  
  tradeid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeID)
}

// optional int32 direction = 2;
void PBTradeInfo::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.direction)
  return direction_;
}
 void PBTradeInfo::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.direction)
}

// optional int32 openclose = 3;
void PBTradeInfo::clear_openclose() {
  openclose_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::openclose() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.openclose)
  return openclose_;
}
 void PBTradeInfo::set_openclose(::google::protobuf::int32 value) {
  
  openclose_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.openclose)
}

// optional uint64 orderSysID = 4;
void PBTradeInfo::clear_ordersysid() {
  ordersysid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBTradeInfo::ordersysid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.orderSysID)
  return ordersysid_;
}
 void PBTradeInfo::set_ordersysid(::google::protobuf::uint64 value) {
  
  ordersysid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.orderSysID)
}

// optional uint64 orderID = 5;
void PBTradeInfo::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBTradeInfo::orderid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.orderID)
  return orderid_;
}
 void PBTradeInfo::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.orderID)
}

// optional double price = 6;
void PBTradeInfo::clear_price() {
  price_ = 0;
}
 double PBTradeInfo::price() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.price)
  return price_;
}
 void PBTradeInfo::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.price)
}

// optional int32 volume = 7;
void PBTradeInfo::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.volume)
  return volume_;
}
 void PBTradeInfo::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.volume)
}

// optional string brokerID = 8;
void PBTradeInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}
 void PBTradeInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}
 void PBTradeInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}
 ::std::string* PBTradeInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}

// optional string investorID = 9;
void PBTradeInfo::clear_investorid() {
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::investorid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.investorID)
  return investorid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_investorid(const ::std::string& value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.investorID)
}
 void PBTradeInfo::set_investorid(const char* value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.investorID)
}
 void PBTradeInfo::set_investorid(const char* value, size_t size) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.investorID)
}
 ::std::string* PBTradeInfo::mutable_investorid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.investorID)
  return investorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_investorid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.investorID)
  
  return investorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_investorid(::std::string* investorid) {
  if (investorid != NULL) {
    
  } else {
    
  }
  investorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.investorID)
}

// optional string exchange = 10;
void PBTradeInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.exchange)
}
 void PBTradeInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.exchange)
}
 void PBTradeInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.exchange)
}
 ::std::string* PBTradeInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.exchange)
}

// optional string contract = 11;
void PBTradeInfo::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.contract)
}
 void PBTradeInfo::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.contract)
}
 void PBTradeInfo::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.contract)
}
 ::std::string* PBTradeInfo::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.contract)
}

// optional string userID = 12;
void PBTradeInfo::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::userid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.userID)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.userID)
}
 void PBTradeInfo::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.userID)
}
 void PBTradeInfo::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.userID)
}
 ::std::string* PBTradeInfo::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_userid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.userID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.userID)
}

// optional string tradeDate = 13;
void PBTradeInfo::clear_tradedate() {
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::tradedate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
  return tradedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_tradedate(const ::std::string& value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}
 void PBTradeInfo::set_tradedate(const char* value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}
 void PBTradeInfo::set_tradedate(const char* value, size_t size) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}
 ::std::string* PBTradeInfo::mutable_tradedate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
  return tradedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_tradedate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
  
  return tradedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_tradedate(::std::string* tradedate) {
  if (tradedate != NULL) {
    
  } else {
    
  }
  tradedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradedate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}

// optional string tradeTime = 14;
void PBTradeInfo::clear_tradetime() {
  tradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::tradetime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
  return tradetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_tradetime(const ::std::string& value) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}
 void PBTradeInfo::set_tradetime(const char* value) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}
 void PBTradeInfo::set_tradetime(const char* value, size_t size) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}
 ::std::string* PBTradeInfo::mutable_tradetime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
  return tradetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_tradetime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
  
  return tradetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_tradetime(::std::string* tradetime) {
  if (tradetime != NULL) {
    
  } else {
    
  }
  tradetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradetime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}

// optional int32 tradeType = 15;
void PBTradeInfo::clear_tradetype() {
  tradetype_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::tradetype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeType)
  return tradetype_;
}
 void PBTradeInfo::set_tradetype(::google::protobuf::int32 value) {
  
  tradetype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeType)
}

// optional int32 hedgeFlag = 16;
void PBTradeInfo::clear_hedgeflag() {
  hedgeflag_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::hedgeflag() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.hedgeFlag)
  return hedgeflag_;
}
 void PBTradeInfo::set_hedgeflag(::google::protobuf::int32 value) {
  
  hedgeflag_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.hedgeFlag)
}

// optional double commission = 17;
void PBTradeInfo::clear_commission() {
  commission_ = 0;
}
 double PBTradeInfo::commission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.commission)
  return commission_;
}
 void PBTradeInfo::set_commission(double value) {
  
  commission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.commission)
}

// optional .Micro.Future.Message.DataHeader header = 18;
bool PBTradeInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBTradeInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBTradeInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBTradeInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBTradeInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBTradeInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPosition::kExchangeFieldNumber;
const int PBPosition::kContractFieldNumber;
const int PBPosition::kDirectionFieldNumber;
const int PBPosition::kPositionFieldNumber;
const int PBPosition::kYdPositionFieldNumber;
const int PBPosition::kPositionDateFieldNumber;
const int PBPosition::kOpenVolumeFieldNumber;
const int PBPosition::kCloseVolumeFieldNumber;
const int PBPosition::kOpenAmountFieldNumber;
const int PBPosition::kCloseAmountFieldNumber;
const int PBPosition::kCostFieldNumber;
const int PBPosition::kOpenCostFieldNumber;
const int PBPosition::kProfitFieldNumber;
const int PBPosition::kCloseProfitFieldNumber;
const int PBPosition::kUseMarginFieldNumber;
const int PBPosition::kHedgeFlagFieldNumber;
const int PBPosition::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPosition::PBPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPosition)
}

void PBPosition::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPosition::PBPosition(const PBPosition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPosition)
}

void PBPosition::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_ = 0;
  position_ = 0;
  ydposition_ = 0;
  positiondate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openvolume_ = 0;
  closevolume_ = 0;
  openamount_ = 0;
  closeamount_ = 0;
  cost_ = 0;
  opencost_ = 0;
  profit_ = 0;
  closeprofit_ = 0;
  usemargin_ = 0;
  hedgeflag_ = 0;
  header_ = NULL;
}

PBPosition::~PBPosition() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPosition)
  SharedDtor();
}

void PBPosition::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  positiondate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPosition_descriptor_;
}

const PBPosition& PBPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPosition* PBPosition::default_instance_ = NULL;

PBPosition* PBPosition::New(::google::protobuf::Arena* arena) const {
  PBPosition* n = new PBPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPosition)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPosition, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPosition*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(direction_, position_);
  ZR_(ydposition_, openvolume_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  positiondate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  closevolume_ = 0;
  ZR_(openamount_, opencost_);
  ZR_(hedgeflag_, usemargin_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPosition.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPosition.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_direction;
        break;
      }

      // optional int32 direction = 3;
      case 3: {
        if (tag == 24) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ydPosition;
        break;
      }

      // optional int32 ydPosition = 4;
      case 4: {
        if (tag == 32) {
         parse_ydPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ydposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_position;
        break;
      }

      // optional int32 position = 5;
      case 5: {
        if (tag == 40) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_positionDate;
        break;
      }

      // optional string positionDate = 6;
      case 6: {
        if (tag == 50) {
         parse_positionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_positiondate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->positiondate().data(), this->positiondate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPosition.positionDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_openVolume;
        break;
      }

      // optional int32 openVolume = 7;
      case 7: {
        if (tag == 56) {
         parse_openVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openvolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_closeVolume;
        break;
      }

      // optional int32 closeVolume = 8;
      case 8: {
        if (tag == 64) {
         parse_closeVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &closevolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_openAmount;
        break;
      }

      // optional double openAmount = 9;
      case 9: {
        if (tag == 73) {
         parse_openAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_closeAmount;
        break;
      }

      // optional double closeAmount = 10;
      case 10: {
        if (tag == 81) {
         parse_closeAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_cost;
        break;
      }

      // optional double cost = 11;
      case 11: {
        if (tag == 89) {
         parse_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_openCost;
        break;
      }

      // optional double openCost = 12;
      case 12: {
        if (tag == 97) {
         parse_openCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &opencost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_profit;
        break;
      }

      // optional double profit = 13;
      case 13: {
        if (tag == 105) {
         parse_profit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &profit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_closeProfit;
        break;
      }

      // optional double closeProfit = 14;
      case 14: {
        if (tag == 113) {
         parse_closeProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_useMargin;
        break;
      }

      // optional double useMargin = 15;
      case 15: {
        if (tag == 121) {
         parse_useMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &usemargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_hedgeFlag;
        break;
      }

      // optional int32 hedgeFlag = 16;
      case 16: {
        if (tag == 128) {
         parse_hedgeFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hedgeflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 17;
      case 17: {
        if (tag == 138) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPosition)
  return false;
#undef DO_
}

void PBPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPosition)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->direction(), output);
  }

  // optional int32 ydPosition = 4;
  if (this->ydposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ydposition(), output);
  }

  // optional int32 position = 5;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->position(), output);
  }

  // optional string positionDate = 6;
  if (this->positiondate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->positiondate().data(), this->positiondate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.positionDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->positiondate(), output);
  }

  // optional int32 openVolume = 7;
  if (this->openvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->openvolume(), output);
  }

  // optional int32 closeVolume = 8;
  if (this->closevolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->closevolume(), output);
  }

  // optional double openAmount = 9;
  if (this->openamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->openamount(), output);
  }

  // optional double closeAmount = 10;
  if (this->closeamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->closeamount(), output);
  }

  // optional double cost = 11;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->cost(), output);
  }

  // optional double openCost = 12;
  if (this->opencost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->opencost(), output);
  }

  // optional double profit = 13;
  if (this->profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->profit(), output);
  }

  // optional double closeProfit = 14;
  if (this->closeprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->closeprofit(), output);
  }

  // optional double useMargin = 15;
  if (this->usemargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->usemargin(), output);
  }

  // optional int32 hedgeFlag = 16;
  if (this->hedgeflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->hedgeflag(), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 17;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPosition)
}

::google::protobuf::uint8* PBPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPosition)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->direction(), target);
  }

  // optional int32 ydPosition = 4;
  if (this->ydposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ydposition(), target);
  }

  // optional int32 position = 5;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->position(), target);
  }

  // optional string positionDate = 6;
  if (this->positiondate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->positiondate().data(), this->positiondate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.positionDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->positiondate(), target);
  }

  // optional int32 openVolume = 7;
  if (this->openvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->openvolume(), target);
  }

  // optional int32 closeVolume = 8;
  if (this->closevolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->closevolume(), target);
  }

  // optional double openAmount = 9;
  if (this->openamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->openamount(), target);
  }

  // optional double closeAmount = 10;
  if (this->closeamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->closeamount(), target);
  }

  // optional double cost = 11;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->cost(), target);
  }

  // optional double openCost = 12;
  if (this->opencost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->opencost(), target);
  }

  // optional double profit = 13;
  if (this->profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->profit(), target);
  }

  // optional double closeProfit = 14;
  if (this->closeprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->closeprofit(), target);
  }

  // optional double useMargin = 15;
  if (this->usemargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->usemargin(), target);
  }

  // optional int32 hedgeFlag = 16;
  if (this->hedgeflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->hedgeflag(), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 17;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPosition)
  return target;
}

int PBPosition::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPosition)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 position = 5;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  // optional int32 ydPosition = 4;
  if (this->ydposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ydposition());
  }

  // optional string positionDate = 6;
  if (this->positiondate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->positiondate());
  }

  // optional int32 openVolume = 7;
  if (this->openvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openvolume());
  }

  // optional int32 closeVolume = 8;
  if (this->closevolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->closevolume());
  }

  // optional double openAmount = 9;
  if (this->openamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double closeAmount = 10;
  if (this->closeamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double cost = 11;
  if (this->cost() != 0) {
    total_size += 1 + 8;
  }

  // optional double openCost = 12;
  if (this->opencost() != 0) {
    total_size += 1 + 8;
  }

  // optional double profit = 13;
  if (this->profit() != 0) {
    total_size += 1 + 8;
  }

  // optional double closeProfit = 14;
  if (this->closeprofit() != 0) {
    total_size += 1 + 8;
  }

  // optional double useMargin = 15;
  if (this->usemargin() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 hedgeFlag = 16;
  if (this->hedgeflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hedgeflag());
  }

  // optional .Micro.Future.Message.DataHeader header = 17;
  if (this->has_header()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPosition* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPosition)
    MergeFrom(*source);
  }
}

void PBPosition::MergeFrom(const PBPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.ydposition() != 0) {
    set_ydposition(from.ydposition());
  }
  if (from.positiondate().size() > 0) {

    positiondate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.positiondate_);
  }
  if (from.openvolume() != 0) {
    set_openvolume(from.openvolume());
  }
  if (from.closevolume() != 0) {
    set_closevolume(from.closevolume());
  }
  if (from.openamount() != 0) {
    set_openamount(from.openamount());
  }
  if (from.closeamount() != 0) {
    set_closeamount(from.closeamount());
  }
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
  if (from.opencost() != 0) {
    set_opencost(from.opencost());
  }
  if (from.profit() != 0) {
    set_profit(from.profit());
  }
  if (from.closeprofit() != 0) {
    set_closeprofit(from.closeprofit());
  }
  if (from.usemargin() != 0) {
    set_usemargin(from.usemargin());
  }
  if (from.hedgeflag() != 0) {
    set_hedgeflag(from.hedgeflag());
  }
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPosition::CopyFrom(const PBPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPosition::IsInitialized() const {

  return true;
}

void PBPosition::Swap(PBPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPosition::InternalSwap(PBPosition* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(direction_, other->direction_);
  std::swap(position_, other->position_);
  std::swap(ydposition_, other->ydposition_);
  positiondate_.Swap(&other->positiondate_);
  std::swap(openvolume_, other->openvolume_);
  std::swap(closevolume_, other->closevolume_);
  std::swap(openamount_, other->openamount_);
  std::swap(closeamount_, other->closeamount_);
  std::swap(cost_, other->cost_);
  std::swap(opencost_, other->opencost_);
  std::swap(profit_, other->profit_);
  std::swap(closeprofit_, other->closeprofit_);
  std::swap(usemargin_, other->usemargin_);
  std::swap(hedgeflag_, other->hedgeflag_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPosition_descriptor_;
  metadata.reflection = PBPosition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPosition

// optional string exchange = 1;
void PBPosition::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPosition::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.exchange)
}
 void PBPosition::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPosition.exchange)
}
 void PBPosition::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPosition.exchange)
}
 ::std::string* PBPosition::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPosition::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.exchange)
}

// optional string contract = 2;
void PBPosition::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPosition::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.contract)
}
 void PBPosition::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPosition.contract)
}
 void PBPosition::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPosition.contract)
}
 ::std::string* PBPosition::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPosition::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.contract)
}

// optional int32 direction = 3;
void PBPosition::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBPosition::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.direction)
  return direction_;
}
 void PBPosition::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.direction)
}

// optional int32 position = 5;
void PBPosition::clear_position() {
  position_ = 0;
}
 ::google::protobuf::int32 PBPosition::position() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.position)
  return position_;
}
 void PBPosition::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.position)
}

// optional int32 ydPosition = 4;
void PBPosition::clear_ydposition() {
  ydposition_ = 0;
}
 ::google::protobuf::int32 PBPosition::ydposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.ydPosition)
  return ydposition_;
}
 void PBPosition::set_ydposition(::google::protobuf::int32 value) {
  
  ydposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.ydPosition)
}

// optional string positionDate = 6;
void PBPosition::clear_positiondate() {
  positiondate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPosition::positiondate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.positionDate)
  return positiondate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_positiondate(const ::std::string& value) {
  
  positiondate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.positionDate)
}
 void PBPosition::set_positiondate(const char* value) {
  
  positiondate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPosition.positionDate)
}
 void PBPosition::set_positiondate(const char* value, size_t size) {
  
  positiondate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPosition.positionDate)
}
 ::std::string* PBPosition::mutable_positiondate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.positionDate)
  return positiondate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPosition::release_positiondate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.positionDate)
  
  return positiondate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_allocated_positiondate(::std::string* positiondate) {
  if (positiondate != NULL) {
    
  } else {
    
  }
  positiondate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), positiondate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.positionDate)
}

// optional int32 openVolume = 7;
void PBPosition::clear_openvolume() {
  openvolume_ = 0;
}
 ::google::protobuf::int32 PBPosition::openvolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.openVolume)
  return openvolume_;
}
 void PBPosition::set_openvolume(::google::protobuf::int32 value) {
  
  openvolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.openVolume)
}

// optional int32 closeVolume = 8;
void PBPosition::clear_closevolume() {
  closevolume_ = 0;
}
 ::google::protobuf::int32 PBPosition::closevolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.closeVolume)
  return closevolume_;
}
 void PBPosition::set_closevolume(::google::protobuf::int32 value) {
  
  closevolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.closeVolume)
}

// optional double openAmount = 9;
void PBPosition::clear_openamount() {
  openamount_ = 0;
}
 double PBPosition::openamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.openAmount)
  return openamount_;
}
 void PBPosition::set_openamount(double value) {
  
  openamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.openAmount)
}

// optional double closeAmount = 10;
void PBPosition::clear_closeamount() {
  closeamount_ = 0;
}
 double PBPosition::closeamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.closeAmount)
  return closeamount_;
}
 void PBPosition::set_closeamount(double value) {
  
  closeamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.closeAmount)
}

// optional double cost = 11;
void PBPosition::clear_cost() {
  cost_ = 0;
}
 double PBPosition::cost() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.cost)
  return cost_;
}
 void PBPosition::set_cost(double value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.cost)
}

// optional double openCost = 12;
void PBPosition::clear_opencost() {
  opencost_ = 0;
}
 double PBPosition::opencost() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.openCost)
  return opencost_;
}
 void PBPosition::set_opencost(double value) {
  
  opencost_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.openCost)
}

// optional double profit = 13;
void PBPosition::clear_profit() {
  profit_ = 0;
}
 double PBPosition::profit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.profit)
  return profit_;
}
 void PBPosition::set_profit(double value) {
  
  profit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.profit)
}

// optional double closeProfit = 14;
void PBPosition::clear_closeprofit() {
  closeprofit_ = 0;
}
 double PBPosition::closeprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.closeProfit)
  return closeprofit_;
}
 void PBPosition::set_closeprofit(double value) {
  
  closeprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.closeProfit)
}

// optional double useMargin = 15;
void PBPosition::clear_usemargin() {
  usemargin_ = 0;
}
 double PBPosition::usemargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.useMargin)
  return usemargin_;
}
 void PBPosition::set_usemargin(double value) {
  
  usemargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.useMargin)
}

// optional int32 hedgeFlag = 16;
void PBPosition::clear_hedgeflag() {
  hedgeflag_ = 0;
}
 ::google::protobuf::int32 PBPosition::hedgeflag() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.hedgeFlag)
  return hedgeflag_;
}
 void PBPosition::set_hedgeflag(::google::protobuf::int32 value) {
  
  hedgeflag_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.hedgeFlag)
}

// optional .Micro.Future.Message.DataHeader header = 17;
bool PBPosition::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPosition::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPosition::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPosition::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPosition::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPosition::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAccountInfo::kBrokerIDFieldNumber;
const int PBAccountInfo::kAccountIDFieldNumber;
const int PBAccountInfo::kPreMortgageFieldNumber;
const int PBAccountInfo::kPreCreditFieldNumber;
const int PBAccountInfo::kPreDepositFieldNumber;
const int PBAccountInfo::kPreBalanceFieldNumber;
const int PBAccountInfo::kPreMarginFieldNumber;
const int PBAccountInfo::kInterestBaseFieldNumber;
const int PBAccountInfo::kInterestFieldNumber;
const int PBAccountInfo::kDepositFieldNumber;
const int PBAccountInfo::kWithdrawFieldNumber;
const int PBAccountInfo::kFrozenMarginFieldNumber;
const int PBAccountInfo::kFrozenCashFieldNumber;
const int PBAccountInfo::kFrozenCommissionFieldNumber;
const int PBAccountInfo::kCurrMarginFieldNumber;
const int PBAccountInfo::kCashInFieldNumber;
const int PBAccountInfo::kCommissionFieldNumber;
const int PBAccountInfo::kCloseProfitFieldNumber;
const int PBAccountInfo::kPositionProfitFieldNumber;
const int PBAccountInfo::kBalanceFieldNumber;
const int PBAccountInfo::kAvailableFieldNumber;
const int PBAccountInfo::kWithdrawQuotaFieldNumber;
const int PBAccountInfo::kReserveFieldNumber;
const int PBAccountInfo::kTradingDayFieldNumber;
const int PBAccountInfo::kSettlementIDFieldNumber;
const int PBAccountInfo::kCreditFieldNumber;
const int PBAccountInfo::kMortgageFieldNumber;
const int PBAccountInfo::kExchangeMarginFieldNumber;
const int PBAccountInfo::kDeliveryMarginFieldNumber;
const int PBAccountInfo::kExchangeDeliveryMarginFieldNumber;
const int PBAccountInfo::kReserveBalanceFieldNumber;
const int PBAccountInfo::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAccountInfo::PBAccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBAccountInfo)
}

void PBAccountInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBAccountInfo::PBAccountInfo(const PBAccountInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBAccountInfo)
}

void PBAccountInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  premortgage_ = 0;
  precredit_ = 0;
  predeposit_ = 0;
  prebalance_ = 0;
  premargin_ = 0;
  interestbase_ = 0;
  interest_ = 0;
  deposit_ = 0;
  withdraw_ = 0;
  frozenmargin_ = 0;
  frozencash_ = 0;
  frozencommission_ = 0;
  currmargin_ = 0;
  cashin_ = 0;
  commission_ = 0;
  closeprofit_ = 0;
  positionprofit_ = 0;
  balance_ = 0;
  available_ = 0;
  withdrawquota_ = 0;
  reserve_ = 0;
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  settlementid_ = 0;
  credit_ = 0;
  mortgage_ = 0;
  exchangemargin_ = 0;
  deliverymargin_ = 0;
  exchangedeliverymargin_ = 0;
  reservebalance_ = 0;
  header_ = NULL;
}

PBAccountInfo::~PBAccountInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBAccountInfo)
  SharedDtor();
}

void PBAccountInfo::SharedDtor() {
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBAccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAccountInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBAccountInfo_descriptor_;
}

const PBAccountInfo& PBAccountInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBAccountInfo* PBAccountInfo::default_instance_ = NULL;

PBAccountInfo* PBAccountInfo::New(::google::protobuf::Arena* arena) const {
  PBAccountInfo* n = new PBAccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBAccountInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBAccountInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBAccountInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(premortgage_, interestbase_);
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(interest_, cashin_);
  ZR_(commission_, reserve_);
  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(credit_, reservebalance_);
  settlementid_ = 0;
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBAccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string brokerID = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBAccountInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_accountID;
        break;
      }

      // optional string accountID = 3;
      case 3: {
        if (tag == 26) {
         parse_accountID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountid().data(), this->accountid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBAccountInfo.accountID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_preMortgage;
        break;
      }

      // optional double preMortgage = 4;
      case 4: {
        if (tag == 33) {
         parse_preMortgage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premortgage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_preCredit;
        break;
      }

      // optional double preCredit = 5;
      case 5: {
        if (tag == 41) {
         parse_preCredit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &precredit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_preDeposit;
        break;
      }

      // optional double preDeposit = 6;
      case 6: {
        if (tag == 49) {
         parse_preDeposit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predeposit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_preBalance;
        break;
      }

      // optional double preBalance = 7;
      case 7: {
        if (tag == 57) {
         parse_preBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &prebalance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_preMargin;
        break;
      }

      // optional double preMargin = 8;
      case 8: {
        if (tag == 65) {
         parse_preMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_interestBase;
        break;
      }

      // optional double interestBase = 9;
      case 9: {
        if (tag == 73) {
         parse_interestBase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &interestbase_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_interest;
        break;
      }

      // optional double interest = 10;
      case 10: {
        if (tag == 81) {
         parse_interest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &interest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_deposit;
        break;
      }

      // optional double deposit = 11;
      case 11: {
        if (tag == 89) {
         parse_deposit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deposit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_withdraw;
        break;
      }

      // optional double withdraw = 12;
      case 12: {
        if (tag == 97) {
         parse_withdraw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &withdraw_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_frozenMargin;
        break;
      }

      // optional double frozenMargin = 13;
      case 13: {
        if (tag == 105) {
         parse_frozenMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozenmargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_frozenCash;
        break;
      }

      // optional double frozenCash = 14;
      case 14: {
        if (tag == 113) {
         parse_frozenCash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozencash_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_frozenCommission;
        break;
      }

      // optional double frozenCommission = 15;
      case 15: {
        if (tag == 121) {
         parse_frozenCommission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozencommission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_currMargin;
        break;
      }

      // optional double currMargin = 16;
      case 16: {
        if (tag == 129) {
         parse_currMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &currmargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_cashIn;
        break;
      }

      // optional double cashIn = 17;
      case 17: {
        if (tag == 137) {
         parse_cashIn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cashin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_commission;
        break;
      }

      // optional double commission = 18;
      case 18: {
        if (tag == 145) {
         parse_commission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_closeProfit;
        break;
      }

      // optional double closeProfit = 19;
      case 19: {
        if (tag == 153) {
         parse_closeProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_positionProfit;
        break;
      }

      // optional double positionProfit = 20;
      case 20: {
        if (tag == 161) {
         parse_positionProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &positionprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_balance;
        break;
      }

      // optional double balance = 21;
      case 21: {
        if (tag == 169) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &balance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_available;
        break;
      }

      // optional double available = 22;
      case 22: {
        if (tag == 177) {
         parse_available:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &available_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_withdrawQuota;
        break;
      }

      // optional double withdrawQuota = 23;
      case 23: {
        if (tag == 185) {
         parse_withdrawQuota:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &withdrawquota_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_reserve;
        break;
      }

      // optional double reserve = 24;
      case 24: {
        if (tag == 193) {
         parse_reserve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reserve_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_tradingDay;
        break;
      }

      // optional string tradingDay = 25;
      case 25: {
        if (tag == 202) {
         parse_tradingDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingday().data(), this->tradingday().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBAccountInfo.tradingDay"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_settlementID;
        break;
      }

      // optional int32 settlementID = 26;
      case 26: {
        if (tag == 208) {
         parse_settlementID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &settlementid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(217)) goto parse_credit;
        break;
      }

      // optional double credit = 27;
      case 27: {
        if (tag == 217) {
         parse_credit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &credit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(225)) goto parse_mortgage;
        break;
      }

      // optional double mortgage = 28;
      case 28: {
        if (tag == 225) {
         parse_mortgage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mortgage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(233)) goto parse_exchangeMargin;
        break;
      }

      // optional double exchangeMargin = 29;
      case 29: {
        if (tag == 233) {
         parse_exchangeMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exchangemargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(241)) goto parse_deliveryMargin;
        break;
      }

      // optional double deliveryMargin = 30;
      case 30: {
        if (tag == 241) {
         parse_deliveryMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deliverymargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(249)) goto parse_exchangeDeliveryMargin;
        break;
      }

      // optional double exchangeDeliveryMargin = 31;
      case 31: {
        if (tag == 249) {
         parse_exchangeDeliveryMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exchangedeliverymargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(257)) goto parse_reserveBalance;
        break;
      }

      // optional double reserveBalance = 32;
      case 32: {
        if (tag == 257) {
         parse_reserveBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reservebalance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 33;
      case 33: {
        if (tag == 266) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBAccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBAccountInfo)
  return false;
#undef DO_
}

void PBAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBAccountInfo)
  // optional string brokerID = 2;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->brokerid(), output);
  }

  // optional string accountID = 3;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.accountID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->accountid(), output);
  }

  // optional double preMortgage = 4;
  if (this->premortgage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->premortgage(), output);
  }

  // optional double preCredit = 5;
  if (this->precredit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->precredit(), output);
  }

  // optional double preDeposit = 6;
  if (this->predeposit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->predeposit(), output);
  }

  // optional double preBalance = 7;
  if (this->prebalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->prebalance(), output);
  }

  // optional double preMargin = 8;
  if (this->premargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->premargin(), output);
  }

  // optional double interestBase = 9;
  if (this->interestbase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->interestbase(), output);
  }

  // optional double interest = 10;
  if (this->interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->interest(), output);
  }

  // optional double deposit = 11;
  if (this->deposit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->deposit(), output);
  }

  // optional double withdraw = 12;
  if (this->withdraw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->withdraw(), output);
  }

  // optional double frozenMargin = 13;
  if (this->frozenmargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->frozenmargin(), output);
  }

  // optional double frozenCash = 14;
  if (this->frozencash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->frozencash(), output);
  }

  // optional double frozenCommission = 15;
  if (this->frozencommission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->frozencommission(), output);
  }

  // optional double currMargin = 16;
  if (this->currmargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->currmargin(), output);
  }

  // optional double cashIn = 17;
  if (this->cashin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->cashin(), output);
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->commission(), output);
  }

  // optional double closeProfit = 19;
  if (this->closeprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->closeprofit(), output);
  }

  // optional double positionProfit = 20;
  if (this->positionprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->positionprofit(), output);
  }

  // optional double balance = 21;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->balance(), output);
  }

  // optional double available = 22;
  if (this->available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->available(), output);
  }

  // optional double withdrawQuota = 23;
  if (this->withdrawquota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->withdrawquota(), output);
  }

  // optional double reserve = 24;
  if (this->reserve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->reserve(), output);
  }

  // optional string tradingDay = 25;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), this->tradingday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.tradingDay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->tradingday(), output);
  }

  // optional int32 settlementID = 26;
  if (this->settlementid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->settlementid(), output);
  }

  // optional double credit = 27;
  if (this->credit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->credit(), output);
  }

  // optional double mortgage = 28;
  if (this->mortgage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->mortgage(), output);
  }

  // optional double exchangeMargin = 29;
  if (this->exchangemargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->exchangemargin(), output);
  }

  // optional double deliveryMargin = 30;
  if (this->deliverymargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->deliverymargin(), output);
  }

  // optional double exchangeDeliveryMargin = 31;
  if (this->exchangedeliverymargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->exchangedeliverymargin(), output);
  }

  // optional double reserveBalance = 32;
  if (this->reservebalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->reservebalance(), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 33;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBAccountInfo)
}

::google::protobuf::uint8* PBAccountInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBAccountInfo)
  // optional string brokerID = 2;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->brokerid(), target);
  }

  // optional string accountID = 3;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.accountID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->accountid(), target);
  }

  // optional double preMortgage = 4;
  if (this->premortgage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->premortgage(), target);
  }

  // optional double preCredit = 5;
  if (this->precredit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->precredit(), target);
  }

  // optional double preDeposit = 6;
  if (this->predeposit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->predeposit(), target);
  }

  // optional double preBalance = 7;
  if (this->prebalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->prebalance(), target);
  }

  // optional double preMargin = 8;
  if (this->premargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->premargin(), target);
  }

  // optional double interestBase = 9;
  if (this->interestbase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->interestbase(), target);
  }

  // optional double interest = 10;
  if (this->interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->interest(), target);
  }

  // optional double deposit = 11;
  if (this->deposit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->deposit(), target);
  }

  // optional double withdraw = 12;
  if (this->withdraw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->withdraw(), target);
  }

  // optional double frozenMargin = 13;
  if (this->frozenmargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->frozenmargin(), target);
  }

  // optional double frozenCash = 14;
  if (this->frozencash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->frozencash(), target);
  }

  // optional double frozenCommission = 15;
  if (this->frozencommission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->frozencommission(), target);
  }

  // optional double currMargin = 16;
  if (this->currmargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->currmargin(), target);
  }

  // optional double cashIn = 17;
  if (this->cashin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->cashin(), target);
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->commission(), target);
  }

  // optional double closeProfit = 19;
  if (this->closeprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->closeprofit(), target);
  }

  // optional double positionProfit = 20;
  if (this->positionprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->positionprofit(), target);
  }

  // optional double balance = 21;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->balance(), target);
  }

  // optional double available = 22;
  if (this->available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->available(), target);
  }

  // optional double withdrawQuota = 23;
  if (this->withdrawquota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->withdrawquota(), target);
  }

  // optional double reserve = 24;
  if (this->reserve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->reserve(), target);
  }

  // optional string tradingDay = 25;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), this->tradingday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.tradingDay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->tradingday(), target);
  }

  // optional int32 settlementID = 26;
  if (this->settlementid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->settlementid(), target);
  }

  // optional double credit = 27;
  if (this->credit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->credit(), target);
  }

  // optional double mortgage = 28;
  if (this->mortgage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(28, this->mortgage(), target);
  }

  // optional double exchangeMargin = 29;
  if (this->exchangemargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->exchangemargin(), target);
  }

  // optional double deliveryMargin = 30;
  if (this->deliverymargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(30, this->deliverymargin(), target);
  }

  // optional double exchangeDeliveryMargin = 31;
  if (this->exchangedeliverymargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->exchangedeliverymargin(), target);
  }

  // optional double reserveBalance = 32;
  if (this->reservebalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->reservebalance(), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 33;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBAccountInfo)
  return target;
}

int PBAccountInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBAccountInfo)
  int total_size = 0;

  // optional string brokerID = 2;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string accountID = 3;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountid());
  }

  // optional double preMortgage = 4;
  if (this->premortgage() != 0) {
    total_size += 1 + 8;
  }

  // optional double preCredit = 5;
  if (this->precredit() != 0) {
    total_size += 1 + 8;
  }

  // optional double preDeposit = 6;
  if (this->predeposit() != 0) {
    total_size += 1 + 8;
  }

  // optional double preBalance = 7;
  if (this->prebalance() != 0) {
    total_size += 1 + 8;
  }

  // optional double preMargin = 8;
  if (this->premargin() != 0) {
    total_size += 1 + 8;
  }

  // optional double interestBase = 9;
  if (this->interestbase() != 0) {
    total_size += 1 + 8;
  }

  // optional double interest = 10;
  if (this->interest() != 0) {
    total_size += 1 + 8;
  }

  // optional double deposit = 11;
  if (this->deposit() != 0) {
    total_size += 1 + 8;
  }

  // optional double withdraw = 12;
  if (this->withdraw() != 0) {
    total_size += 1 + 8;
  }

  // optional double frozenMargin = 13;
  if (this->frozenmargin() != 0) {
    total_size += 1 + 8;
  }

  // optional double frozenCash = 14;
  if (this->frozencash() != 0) {
    total_size += 1 + 8;
  }

  // optional double frozenCommission = 15;
  if (this->frozencommission() != 0) {
    total_size += 1 + 8;
  }

  // optional double currMargin = 16;
  if (this->currmargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double cashIn = 17;
  if (this->cashin() != 0) {
    total_size += 2 + 8;
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    total_size += 2 + 8;
  }

  // optional double closeProfit = 19;
  if (this->closeprofit() != 0) {
    total_size += 2 + 8;
  }

  // optional double positionProfit = 20;
  if (this->positionprofit() != 0) {
    total_size += 2 + 8;
  }

  // optional double balance = 21;
  if (this->balance() != 0) {
    total_size += 2 + 8;
  }

  // optional double available = 22;
  if (this->available() != 0) {
    total_size += 2 + 8;
  }

  // optional double withdrawQuota = 23;
  if (this->withdrawquota() != 0) {
    total_size += 2 + 8;
  }

  // optional double reserve = 24;
  if (this->reserve() != 0) {
    total_size += 2 + 8;
  }

  // optional string tradingDay = 25;
  if (this->tradingday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingday());
  }

  // optional int32 settlementID = 26;
  if (this->settlementid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->settlementid());
  }

  // optional double credit = 27;
  if (this->credit() != 0) {
    total_size += 2 + 8;
  }

  // optional double mortgage = 28;
  if (this->mortgage() != 0) {
    total_size += 2 + 8;
  }

  // optional double exchangeMargin = 29;
  if (this->exchangemargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double deliveryMargin = 30;
  if (this->deliverymargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double exchangeDeliveryMargin = 31;
  if (this->exchangedeliverymargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double reserveBalance = 32;
  if (this->reservebalance() != 0) {
    total_size += 2 + 8;
  }

  // optional .Micro.Future.Message.DataHeader header = 33;
  if (this->has_header()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBAccountInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBAccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBAccountInfo)
    MergeFrom(*source);
  }
}

void PBAccountInfo::MergeFrom(const PBAccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.premortgage() != 0) {
    set_premortgage(from.premortgage());
  }
  if (from.precredit() != 0) {
    set_precredit(from.precredit());
  }
  if (from.predeposit() != 0) {
    set_predeposit(from.predeposit());
  }
  if (from.prebalance() != 0) {
    set_prebalance(from.prebalance());
  }
  if (from.premargin() != 0) {
    set_premargin(from.premargin());
  }
  if (from.interestbase() != 0) {
    set_interestbase(from.interestbase());
  }
  if (from.interest() != 0) {
    set_interest(from.interest());
  }
  if (from.deposit() != 0) {
    set_deposit(from.deposit());
  }
  if (from.withdraw() != 0) {
    set_withdraw(from.withdraw());
  }
  if (from.frozenmargin() != 0) {
    set_frozenmargin(from.frozenmargin());
  }
  if (from.frozencash() != 0) {
    set_frozencash(from.frozencash());
  }
  if (from.frozencommission() != 0) {
    set_frozencommission(from.frozencommission());
  }
  if (from.currmargin() != 0) {
    set_currmargin(from.currmargin());
  }
  if (from.cashin() != 0) {
    set_cashin(from.cashin());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.closeprofit() != 0) {
    set_closeprofit(from.closeprofit());
  }
  if (from.positionprofit() != 0) {
    set_positionprofit(from.positionprofit());
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
  if (from.available() != 0) {
    set_available(from.available());
  }
  if (from.withdrawquota() != 0) {
    set_withdrawquota(from.withdrawquota());
  }
  if (from.reserve() != 0) {
    set_reserve(from.reserve());
  }
  if (from.tradingday().size() > 0) {

    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  if (from.settlementid() != 0) {
    set_settlementid(from.settlementid());
  }
  if (from.credit() != 0) {
    set_credit(from.credit());
  }
  if (from.mortgage() != 0) {
    set_mortgage(from.mortgage());
  }
  if (from.exchangemargin() != 0) {
    set_exchangemargin(from.exchangemargin());
  }
  if (from.deliverymargin() != 0) {
    set_deliverymargin(from.deliverymargin());
  }
  if (from.exchangedeliverymargin() != 0) {
    set_exchangedeliverymargin(from.exchangedeliverymargin());
  }
  if (from.reservebalance() != 0) {
    set_reservebalance(from.reservebalance());
  }
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAccountInfo::CopyFrom(const PBAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAccountInfo::IsInitialized() const {

  return true;
}

void PBAccountInfo::Swap(PBAccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAccountInfo::InternalSwap(PBAccountInfo* other) {
  brokerid_.Swap(&other->brokerid_);
  accountid_.Swap(&other->accountid_);
  std::swap(premortgage_, other->premortgage_);
  std::swap(precredit_, other->precredit_);
  std::swap(predeposit_, other->predeposit_);
  std::swap(prebalance_, other->prebalance_);
  std::swap(premargin_, other->premargin_);
  std::swap(interestbase_, other->interestbase_);
  std::swap(interest_, other->interest_);
  std::swap(deposit_, other->deposit_);
  std::swap(withdraw_, other->withdraw_);
  std::swap(frozenmargin_, other->frozenmargin_);
  std::swap(frozencash_, other->frozencash_);
  std::swap(frozencommission_, other->frozencommission_);
  std::swap(currmargin_, other->currmargin_);
  std::swap(cashin_, other->cashin_);
  std::swap(commission_, other->commission_);
  std::swap(closeprofit_, other->closeprofit_);
  std::swap(positionprofit_, other->positionprofit_);
  std::swap(balance_, other->balance_);
  std::swap(available_, other->available_);
  std::swap(withdrawquota_, other->withdrawquota_);
  std::swap(reserve_, other->reserve_);
  tradingday_.Swap(&other->tradingday_);
  std::swap(settlementid_, other->settlementid_);
  std::swap(credit_, other->credit_);
  std::swap(mortgage_, other->mortgage_);
  std::swap(exchangemargin_, other->exchangemargin_);
  std::swap(deliverymargin_, other->deliverymargin_);
  std::swap(exchangedeliverymargin_, other->exchangedeliverymargin_);
  std::swap(reservebalance_, other->reservebalance_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAccountInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBAccountInfo_descriptor_;
  metadata.reflection = PBAccountInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAccountInfo

// optional string brokerID = 2;
void PBAccountInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBAccountInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}
 void PBAccountInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}
 void PBAccountInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}
 ::std::string* PBAccountInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBAccountInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}

// optional string accountID = 3;
void PBAccountInfo::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBAccountInfo::accountid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.accountID)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.accountID)
}
 void PBAccountInfo::set_accountid(const char* value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBAccountInfo.accountID)
}
 void PBAccountInfo::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBAccountInfo.accountID)
}
 ::std::string* PBAccountInfo::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.accountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBAccountInfo::release_accountid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.accountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.accountID)
}

// optional double preMortgage = 4;
void PBAccountInfo::clear_premortgage() {
  premortgage_ = 0;
}
 double PBAccountInfo::premortgage() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preMortgage)
  return premortgage_;
}
 void PBAccountInfo::set_premortgage(double value) {
  
  premortgage_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preMortgage)
}

// optional double preCredit = 5;
void PBAccountInfo::clear_precredit() {
  precredit_ = 0;
}
 double PBAccountInfo::precredit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preCredit)
  return precredit_;
}
 void PBAccountInfo::set_precredit(double value) {
  
  precredit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preCredit)
}

// optional double preDeposit = 6;
void PBAccountInfo::clear_predeposit() {
  predeposit_ = 0;
}
 double PBAccountInfo::predeposit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preDeposit)
  return predeposit_;
}
 void PBAccountInfo::set_predeposit(double value) {
  
  predeposit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preDeposit)
}

// optional double preBalance = 7;
void PBAccountInfo::clear_prebalance() {
  prebalance_ = 0;
}
 double PBAccountInfo::prebalance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preBalance)
  return prebalance_;
}
 void PBAccountInfo::set_prebalance(double value) {
  
  prebalance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preBalance)
}

// optional double preMargin = 8;
void PBAccountInfo::clear_premargin() {
  premargin_ = 0;
}
 double PBAccountInfo::premargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preMargin)
  return premargin_;
}
 void PBAccountInfo::set_premargin(double value) {
  
  premargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preMargin)
}

// optional double interestBase = 9;
void PBAccountInfo::clear_interestbase() {
  interestbase_ = 0;
}
 double PBAccountInfo::interestbase() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.interestBase)
  return interestbase_;
}
 void PBAccountInfo::set_interestbase(double value) {
  
  interestbase_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.interestBase)
}

// optional double interest = 10;
void PBAccountInfo::clear_interest() {
  interest_ = 0;
}
 double PBAccountInfo::interest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.interest)
  return interest_;
}
 void PBAccountInfo::set_interest(double value) {
  
  interest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.interest)
}

// optional double deposit = 11;
void PBAccountInfo::clear_deposit() {
  deposit_ = 0;
}
 double PBAccountInfo::deposit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.deposit)
  return deposit_;
}
 void PBAccountInfo::set_deposit(double value) {
  
  deposit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.deposit)
}

// optional double withdraw = 12;
void PBAccountInfo::clear_withdraw() {
  withdraw_ = 0;
}
 double PBAccountInfo::withdraw() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.withdraw)
  return withdraw_;
}
 void PBAccountInfo::set_withdraw(double value) {
  
  withdraw_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.withdraw)
}

// optional double frozenMargin = 13;
void PBAccountInfo::clear_frozenmargin() {
  frozenmargin_ = 0;
}
 double PBAccountInfo::frozenmargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.frozenMargin)
  return frozenmargin_;
}
 void PBAccountInfo::set_frozenmargin(double value) {
  
  frozenmargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.frozenMargin)
}

// optional double frozenCash = 14;
void PBAccountInfo::clear_frozencash() {
  frozencash_ = 0;
}
 double PBAccountInfo::frozencash() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.frozenCash)
  return frozencash_;
}
 void PBAccountInfo::set_frozencash(double value) {
  
  frozencash_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.frozenCash)
}

// optional double frozenCommission = 15;
void PBAccountInfo::clear_frozencommission() {
  frozencommission_ = 0;
}
 double PBAccountInfo::frozencommission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.frozenCommission)
  return frozencommission_;
}
 void PBAccountInfo::set_frozencommission(double value) {
  
  frozencommission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.frozenCommission)
}

// optional double currMargin = 16;
void PBAccountInfo::clear_currmargin() {
  currmargin_ = 0;
}
 double PBAccountInfo::currmargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.currMargin)
  return currmargin_;
}
 void PBAccountInfo::set_currmargin(double value) {
  
  currmargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.currMargin)
}

// optional double cashIn = 17;
void PBAccountInfo::clear_cashin() {
  cashin_ = 0;
}
 double PBAccountInfo::cashin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.cashIn)
  return cashin_;
}
 void PBAccountInfo::set_cashin(double value) {
  
  cashin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.cashIn)
}

// optional double commission = 18;
void PBAccountInfo::clear_commission() {
  commission_ = 0;
}
 double PBAccountInfo::commission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.commission)
  return commission_;
}
 void PBAccountInfo::set_commission(double value) {
  
  commission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.commission)
}

// optional double closeProfit = 19;
void PBAccountInfo::clear_closeprofit() {
  closeprofit_ = 0;
}
 double PBAccountInfo::closeprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.closeProfit)
  return closeprofit_;
}
 void PBAccountInfo::set_closeprofit(double value) {
  
  closeprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.closeProfit)
}

// optional double positionProfit = 20;
void PBAccountInfo::clear_positionprofit() {
  positionprofit_ = 0;
}
 double PBAccountInfo::positionprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.positionProfit)
  return positionprofit_;
}
 void PBAccountInfo::set_positionprofit(double value) {
  
  positionprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.positionProfit)
}

// optional double balance = 21;
void PBAccountInfo::clear_balance() {
  balance_ = 0;
}
 double PBAccountInfo::balance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.balance)
  return balance_;
}
 void PBAccountInfo::set_balance(double value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.balance)
}

// optional double available = 22;
void PBAccountInfo::clear_available() {
  available_ = 0;
}
 double PBAccountInfo::available() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.available)
  return available_;
}
 void PBAccountInfo::set_available(double value) {
  
  available_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.available)
}

// optional double withdrawQuota = 23;
void PBAccountInfo::clear_withdrawquota() {
  withdrawquota_ = 0;
}
 double PBAccountInfo::withdrawquota() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.withdrawQuota)
  return withdrawquota_;
}
 void PBAccountInfo::set_withdrawquota(double value) {
  
  withdrawquota_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.withdrawQuota)
}

// optional double reserve = 24;
void PBAccountInfo::clear_reserve() {
  reserve_ = 0;
}
 double PBAccountInfo::reserve() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.reserve)
  return reserve_;
}
 void PBAccountInfo::set_reserve(double value) {
  
  reserve_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.reserve)
}

// optional string tradingDay = 25;
void PBAccountInfo::clear_tradingday() {
  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBAccountInfo::tradingday() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
  return tradingday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_tradingday(const ::std::string& value) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
}
 void PBAccountInfo::set_tradingday(const char* value) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
}
 void PBAccountInfo::set_tradingday(const char* value, size_t size) {
  
  tradingday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
}
 ::std::string* PBAccountInfo::mutable_tradingday() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
  return tradingday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBAccountInfo::release_tradingday() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
  
  return tradingday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_allocated_tradingday(::std::string* tradingday) {
  if (tradingday != NULL) {
    
  } else {
    
  }
  tradingday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingday);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
}

// optional int32 settlementID = 26;
void PBAccountInfo::clear_settlementid() {
  settlementid_ = 0;
}
 ::google::protobuf::int32 PBAccountInfo::settlementid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.settlementID)
  return settlementid_;
}
 void PBAccountInfo::set_settlementid(::google::protobuf::int32 value) {
  
  settlementid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.settlementID)
}

// optional double credit = 27;
void PBAccountInfo::clear_credit() {
  credit_ = 0;
}
 double PBAccountInfo::credit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.credit)
  return credit_;
}
 void PBAccountInfo::set_credit(double value) {
  
  credit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.credit)
}

// optional double mortgage = 28;
void PBAccountInfo::clear_mortgage() {
  mortgage_ = 0;
}
 double PBAccountInfo::mortgage() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.mortgage)
  return mortgage_;
}
 void PBAccountInfo::set_mortgage(double value) {
  
  mortgage_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.mortgage)
}

// optional double exchangeMargin = 29;
void PBAccountInfo::clear_exchangemargin() {
  exchangemargin_ = 0;
}
 double PBAccountInfo::exchangemargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.exchangeMargin)
  return exchangemargin_;
}
 void PBAccountInfo::set_exchangemargin(double value) {
  
  exchangemargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.exchangeMargin)
}

// optional double deliveryMargin = 30;
void PBAccountInfo::clear_deliverymargin() {
  deliverymargin_ = 0;
}
 double PBAccountInfo::deliverymargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.deliveryMargin)
  return deliverymargin_;
}
 void PBAccountInfo::set_deliverymargin(double value) {
  
  deliverymargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.deliveryMargin)
}

// optional double exchangeDeliveryMargin = 31;
void PBAccountInfo::clear_exchangedeliverymargin() {
  exchangedeliverymargin_ = 0;
}
 double PBAccountInfo::exchangedeliverymargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.exchangeDeliveryMargin)
  return exchangedeliverymargin_;
}
 void PBAccountInfo::set_exchangedeliverymargin(double value) {
  
  exchangedeliverymargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.exchangeDeliveryMargin)
}

// optional double reserveBalance = 32;
void PBAccountInfo::clear_reservebalance() {
  reservebalance_ = 0;
}
 double PBAccountInfo::reservebalance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.reserveBalance)
  return reservebalance_;
}
 void PBAccountInfo::set_reservebalance(double value) {
  
  reservebalance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.reserveBalance)
}

// optional .Micro.Future.Message.DataHeader header = 33;
bool PBAccountInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBAccountInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBAccountInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBAccountInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBAccountInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBAccountInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMarketInfo::kExchangeFieldNumber;
const int PBMarketInfo::kNameFieldNumber;
const int PBMarketInfo::kPropertyFieldNumber;
const int PBMarketInfo::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMarketInfo::PBMarketInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBMarketInfo)
}

void PBMarketInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBMarketInfo::PBMarketInfo(const PBMarketInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBMarketInfo)
}

void PBMarketInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

PBMarketInfo::~PBMarketInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBMarketInfo)
  SharedDtor();
}

void PBMarketInfo::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBMarketInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMarketInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMarketInfo_descriptor_;
}

const PBMarketInfo& PBMarketInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBMarketInfo* PBMarketInfo::default_instance_ = NULL;

PBMarketInfo* PBMarketInfo::New(::google::protobuf::Arena* arena) const {
  PBMarketInfo* n = new PBMarketInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMarketInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBMarketInfo)
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}

bool PBMarketInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBMarketInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBMarketInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_property;
        break;
      }

      // optional bytes property = 3;
      case 3: {
        if (tag == 26) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 4;
      case 4: {
        if (tag == 34) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBMarketInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBMarketInfo)
  return false;
#undef DO_
}

void PBMarketInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBMarketInfo)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // optional bytes property = 3;
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->property(), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 4;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBMarketInfo)
}

::google::protobuf::uint8* PBMarketInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBMarketInfo)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // optional bytes property = 3;
  if (this->property().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->property(), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 4;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBMarketInfo)
  return target;
}

int PBMarketInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBMarketInfo)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional bytes property = 3;
  if (this->property().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property());
  }

  // optional .Micro.Future.Message.DataHeader header = 4;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMarketInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMarketInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMarketInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBMarketInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBMarketInfo)
    MergeFrom(*source);
  }
}

void PBMarketInfo::MergeFrom(const PBMarketInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.property().size() > 0) {

    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBMarketInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMarketInfo::CopyFrom(const PBMarketInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMarketInfo::IsInitialized() const {

  return true;
}

void PBMarketInfo::Swap(PBMarketInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMarketInfo::InternalSwap(PBMarketInfo* other) {
  exchange_.Swap(&other->exchange_);
  name_.Swap(&other->name_);
  property_.Swap(&other->property_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMarketInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMarketInfo_descriptor_;
  metadata.reflection = PBMarketInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMarketInfo

// optional string exchange = 1;
void PBMarketInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketInfo.exchange)
}
 void PBMarketInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketInfo.exchange)
}
 void PBMarketInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketInfo.exchange)
}
 ::std::string* PBMarketInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.exchange)
}

// optional bytes name = 2;
void PBMarketInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketInfo::name() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketInfo.name)
}
 void PBMarketInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketInfo.name)
}
 void PBMarketInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketInfo.name)
}
 ::std::string* PBMarketInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketInfo::release_name() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.name)
}

// optional bytes property = 3;
void PBMarketInfo::clear_property() {
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketInfo::property() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.property)
  return property_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_property(const ::std::string& value) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketInfo.property)
}
 void PBMarketInfo::set_property(const char* value) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketInfo.property)
}
 void PBMarketInfo::set_property(const void* value, size_t size) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketInfo.property)
}
 ::std::string* PBMarketInfo::mutable_property() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.property)
  return property_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketInfo::release_property() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.property)
  
  return property_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_allocated_property(::std::string* property) {
  if (property != NULL) {
    
  } else {
    
  }
  property_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.property)
}

// optional .Micro.Future.Message.DataHeader header = 4;
bool PBMarketInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBMarketInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBMarketInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBMarketInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBMarketInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBMarketInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractInfo::kExchangeFieldNumber;
const int PBContractInfo::kContractFieldNumber;
const int PBContractInfo::kNameFieldNumber;
const int PBContractInfo::kProductIDFieldNumber;
const int PBContractInfo::kProductTypeFieldNumber;
const int PBContractInfo::kDeliveryYearFieldNumber;
const int PBContractInfo::kDeliveryMonthFieldNumber;
const int PBContractInfo::kMaxMarketOrderVolumeFieldNumber;
const int PBContractInfo::kMinMarketOrderVolumeFieldNumber;
const int PBContractInfo::kMaxLimitOrderVolumeFieldNumber;
const int PBContractInfo::kMinLimitOrderVolumeFieldNumber;
const int PBContractInfo::kVolumeMultipleFieldNumber;
const int PBContractInfo::kPriceTickFieldNumber;
const int PBContractInfo::kCreateDateFieldNumber;
const int PBContractInfo::kOpenDateFieldNumber;
const int PBContractInfo::kExpireDateFieldNumber;
const int PBContractInfo::kStartDelivDateFieldNumber;
const int PBContractInfo::kEndDelivDateFieldNumber;
const int PBContractInfo::kLifePhaseFieldNumber;
const int PBContractInfo::kIsTradingFieldNumber;
const int PBContractInfo::kPositionTypeFieldNumber;
const int PBContractInfo::kPositionDateTypeFieldNumber;
const int PBContractInfo::kLongMarginRatioFieldNumber;
const int PBContractInfo::kShortMarginRatioFieldNumber;
const int PBContractInfo::kGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractInfo::PBContractInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractInfo)
}

void PBContractInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBContractInfo::PBContractInfo(const PBContractInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractInfo)
}

void PBContractInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producttype_ = 0;
  deliveryyear_ = 0;
  deliverymonth_ = 0;
  maxmarketordervolume_ = 0;
  minmarketordervolume_ = 0;
  maxlimitordervolume_ = 0;
  minlimitordervolume_ = 0;
  volumemultiple_ = 0;
  pricetick_ = 0;
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startdelivdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddelivdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifephase_ = 0;
  istrading_ = 0;
  positiontype_ = 0;
  positiondatetype_ = 0;
  longmarginratio_ = 0;
  shortmarginratio_ = 0;
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBContractInfo::~PBContractInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractInfo)
  SharedDtor();
}

void PBContractInfo::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startdelivdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddelivdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBContractInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractInfo_descriptor_;
}

const PBContractInfo& PBContractInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractInfo* PBContractInfo::default_instance_ = NULL;

PBContractInfo* PBContractInfo::New(::google::protobuf::Arena* arena) const {
  PBContractInfo* n = new PBContractInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBContractInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBContractInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(producttype_, maxmarketordervolume_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(minmarketordervolume_, volumemultiple_);
  pricetick_ = 0;
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(istrading_, shortmarginratio_);
  startdelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifephase_ = 0;
  positiondatetype_ = 0;
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBContractInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional bytes name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_productID;
        break;
      }

      // optional string productID = 4;
      case 4: {
        if (tag == 34) {
         parse_productID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.productID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_productType;
        break;
      }

      // optional int32 productType = 5;
      case 5: {
        if (tag == 40) {
         parse_productType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deliveryYear;
        break;
      }

      // optional int32 deliveryYear = 6;
      case 6: {
        if (tag == 48) {
         parse_deliveryYear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deliveryyear_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_deliveryMonth;
        break;
      }

      // optional int32 deliveryMonth = 7;
      case 7: {
        if (tag == 56) {
         parse_deliveryMonth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deliverymonth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_maxMarketOrderVolume;
        break;
      }

      // optional int32 maxMarketOrderVolume = 8;
      case 8: {
        if (tag == 64) {
         parse_maxMarketOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxmarketordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_minMarketOrderVolume;
        break;
      }

      // optional int32 minMarketOrderVolume = 9;
      case 9: {
        if (tag == 72) {
         parse_minMarketOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minmarketordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_maxLimitOrderVolume;
        break;
      }

      // optional int32 maxLimitOrderVolume = 10;
      case 10: {
        if (tag == 80) {
         parse_maxLimitOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlimitordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_minLimitOrderVolume;
        break;
      }

      // optional int32 minLimitOrderVolume = 11;
      case 11: {
        if (tag == 88) {
         parse_minLimitOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minlimitordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_volumeMultiple;
        break;
      }

      // optional int32 volumeMultiple = 12;
      case 12: {
        if (tag == 96) {
         parse_volumeMultiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumemultiple_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_priceTick;
        break;
      }

      // optional int32 priceTick = 13;
      case 13: {
        if (tag == 104) {
         parse_priceTick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pricetick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_createDate;
        break;
      }

      // optional string createDate = 14;
      case 14: {
        if (tag == 114) {
         parse_createDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createdate().data(), this->createdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.createDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_openDate;
        break;
      }

      // optional string openDate = 15;
      case 15: {
        if (tag == 122) {
         parse_openDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opendate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opendate().data(), this->opendate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.openDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_expireDate;
        break;
      }

      // optional string expireDate = 16;
      case 16: {
        if (tag == 130) {
         parse_expireDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiredate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiredate().data(), this->expiredate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.expireDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_startDelivDate;
        break;
      }

      // optional string startDelivDate = 17;
      case 17: {
        if (tag == 138) {
         parse_startDelivDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_startdelivdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->startdelivdate().data(), this->startdelivdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.startDelivDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_endDelivDate;
        break;
      }

      // optional string endDelivDate = 18;
      case 18: {
        if (tag == 146) {
         parse_endDelivDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enddelivdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enddelivdate().data(), this->enddelivdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.endDelivDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_lifePhase;
        break;
      }

      // optional int32 lifePhase = 19;
      case 19: {
        if (tag == 152) {
         parse_lifePhase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lifephase_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_isTrading;
        break;
      }

      // optional int32 isTrading = 20;
      case 20: {
        if (tag == 160) {
         parse_isTrading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &istrading_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_positionType;
        break;
      }

      // optional int32 positionType = 21;
      case 21: {
        if (tag == 168) {
         parse_positionType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiontype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_positionDateType;
        break;
      }

      // optional int32 positionDateType = 22;
      case 22: {
        if (tag == 176) {
         parse_positionDateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiondatetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_longMarginRatio;
        break;
      }

      // optional double longMarginRatio = 23;
      case 23: {
        if (tag == 185) {
         parse_longMarginRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longmarginratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_shortMarginRatio;
        break;
      }

      // optional double shortMarginRatio = 24;
      case 24: {
        if (tag == 193) {
         parse_shortMarginRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shortmarginratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_groupName;
        break;
      }

      // optional string groupName = 25;
      case 25: {
        if (tag == 202) {
         parse_groupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.groupName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractInfo)
  return false;
#undef DO_
}

void PBContractInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractInfo)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // optional string productID = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.productID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productid(), output);
  }

  // optional int32 productType = 5;
  if (this->producttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->producttype(), output);
  }

  // optional int32 deliveryYear = 6;
  if (this->deliveryyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->deliveryyear(), output);
  }

  // optional int32 deliveryMonth = 7;
  if (this->deliverymonth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->deliverymonth(), output);
  }

  // optional int32 maxMarketOrderVolume = 8;
  if (this->maxmarketordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->maxmarketordervolume(), output);
  }

  // optional int32 minMarketOrderVolume = 9;
  if (this->minmarketordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->minmarketordervolume(), output);
  }

  // optional int32 maxLimitOrderVolume = 10;
  if (this->maxlimitordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->maxlimitordervolume(), output);
  }

  // optional int32 minLimitOrderVolume = 11;
  if (this->minlimitordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->minlimitordervolume(), output);
  }

  // optional int32 volumeMultiple = 12;
  if (this->volumemultiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->volumemultiple(), output);
  }

  // optional int32 priceTick = 13;
  if (this->pricetick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->pricetick(), output);
  }

  // optional string createDate = 14;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.createDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->createdate(), output);
  }

  // optional string openDate = 15;
  if (this->opendate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opendate().data(), this->opendate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.openDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->opendate(), output);
  }

  // optional string expireDate = 16;
  if (this->expiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiredate().data(), this->expiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.expireDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->expiredate(), output);
  }

  // optional string startDelivDate = 17;
  if (this->startdelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->startdelivdate().data(), this->startdelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.startDelivDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->startdelivdate(), output);
  }

  // optional string endDelivDate = 18;
  if (this->enddelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enddelivdate().data(), this->enddelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.endDelivDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->enddelivdate(), output);
  }

  // optional int32 lifePhase = 19;
  if (this->lifephase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->lifephase(), output);
  }

  // optional int32 isTrading = 20;
  if (this->istrading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->istrading(), output);
  }

  // optional int32 positionType = 21;
  if (this->positiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->positiontype(), output);
  }

  // optional int32 positionDateType = 22;
  if (this->positiondatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->positiondatetype(), output);
  }

  // optional double longMarginRatio = 23;
  if (this->longmarginratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->longmarginratio(), output);
  }

  // optional double shortMarginRatio = 24;
  if (this->shortmarginratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->shortmarginratio(), output);
  }

  // optional string groupName = 25;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.groupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->groupname(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractInfo)
}

::google::protobuf::uint8* PBContractInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractInfo)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // optional string productID = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.productID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->productid(), target);
  }

  // optional int32 productType = 5;
  if (this->producttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->producttype(), target);
  }

  // optional int32 deliveryYear = 6;
  if (this->deliveryyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->deliveryyear(), target);
  }

  // optional int32 deliveryMonth = 7;
  if (this->deliverymonth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->deliverymonth(), target);
  }

  // optional int32 maxMarketOrderVolume = 8;
  if (this->maxmarketordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->maxmarketordervolume(), target);
  }

  // optional int32 minMarketOrderVolume = 9;
  if (this->minmarketordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->minmarketordervolume(), target);
  }

  // optional int32 maxLimitOrderVolume = 10;
  if (this->maxlimitordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->maxlimitordervolume(), target);
  }

  // optional int32 minLimitOrderVolume = 11;
  if (this->minlimitordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->minlimitordervolume(), target);
  }

  // optional int32 volumeMultiple = 12;
  if (this->volumemultiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->volumemultiple(), target);
  }

  // optional int32 priceTick = 13;
  if (this->pricetick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->pricetick(), target);
  }

  // optional string createDate = 14;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.createDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->createdate(), target);
  }

  // optional string openDate = 15;
  if (this->opendate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opendate().data(), this->opendate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.openDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->opendate(), target);
  }

  // optional string expireDate = 16;
  if (this->expiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiredate().data(), this->expiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.expireDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->expiredate(), target);
  }

  // optional string startDelivDate = 17;
  if (this->startdelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->startdelivdate().data(), this->startdelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.startDelivDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->startdelivdate(), target);
  }

  // optional string endDelivDate = 18;
  if (this->enddelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enddelivdate().data(), this->enddelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.endDelivDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->enddelivdate(), target);
  }

  // optional int32 lifePhase = 19;
  if (this->lifephase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->lifephase(), target);
  }

  // optional int32 isTrading = 20;
  if (this->istrading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->istrading(), target);
  }

  // optional int32 positionType = 21;
  if (this->positiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->positiontype(), target);
  }

  // optional int32 positionDateType = 22;
  if (this->positiondatetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->positiondatetype(), target);
  }

  // optional double longMarginRatio = 23;
  if (this->longmarginratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->longmarginratio(), target);
  }

  // optional double shortMarginRatio = 24;
  if (this->shortmarginratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->shortmarginratio(), target);
  }

  // optional string groupName = 25;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.groupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->groupname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractInfo)
  return target;
}

int PBContractInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractInfo)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional string productID = 4;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // optional int32 productType = 5;
  if (this->producttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->producttype());
  }

  // optional int32 deliveryYear = 6;
  if (this->deliveryyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deliveryyear());
  }

  // optional int32 deliveryMonth = 7;
  if (this->deliverymonth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deliverymonth());
  }

  // optional int32 maxMarketOrderVolume = 8;
  if (this->maxmarketordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxmarketordervolume());
  }

  // optional int32 minMarketOrderVolume = 9;
  if (this->minmarketordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minmarketordervolume());
  }

  // optional int32 maxLimitOrderVolume = 10;
  if (this->maxlimitordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlimitordervolume());
  }

  // optional int32 minLimitOrderVolume = 11;
  if (this->minlimitordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minlimitordervolume());
  }

  // optional int32 volumeMultiple = 12;
  if (this->volumemultiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumemultiple());
  }

  // optional int32 priceTick = 13;
  if (this->pricetick() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pricetick());
  }

  // optional string createDate = 14;
  if (this->createdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createdate());
  }

  // optional string openDate = 15;
  if (this->opendate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opendate());
  }

  // optional string expireDate = 16;
  if (this->expiredate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiredate());
  }

  // optional string startDelivDate = 17;
  if (this->startdelivdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->startdelivdate());
  }

  // optional string endDelivDate = 18;
  if (this->enddelivdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->enddelivdate());
  }

  // optional int32 lifePhase = 19;
  if (this->lifephase() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lifephase());
  }

  // optional int32 isTrading = 20;
  if (this->istrading() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->istrading());
  }

  // optional int32 positionType = 21;
  if (this->positiontype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->positiontype());
  }

  // optional int32 positionDateType = 22;
  if (this->positiondatetype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->positiondatetype());
  }

  // optional double longMarginRatio = 23;
  if (this->longmarginratio() != 0) {
    total_size += 2 + 8;
  }

  // optional double shortMarginRatio = 24;
  if (this->shortmarginratio() != 0) {
    total_size += 2 + 8;
  }

  // optional string groupName = 25;
  if (this->groupname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractInfo)
    MergeFrom(*source);
  }
}

void PBContractInfo::MergeFrom(const PBContractInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.producttype() != 0) {
    set_producttype(from.producttype());
  }
  if (from.deliveryyear() != 0) {
    set_deliveryyear(from.deliveryyear());
  }
  if (from.deliverymonth() != 0) {
    set_deliverymonth(from.deliverymonth());
  }
  if (from.maxmarketordervolume() != 0) {
    set_maxmarketordervolume(from.maxmarketordervolume());
  }
  if (from.minmarketordervolume() != 0) {
    set_minmarketordervolume(from.minmarketordervolume());
  }
  if (from.maxlimitordervolume() != 0) {
    set_maxlimitordervolume(from.maxlimitordervolume());
  }
  if (from.minlimitordervolume() != 0) {
    set_minlimitordervolume(from.minlimitordervolume());
  }
  if (from.volumemultiple() != 0) {
    set_volumemultiple(from.volumemultiple());
  }
  if (from.pricetick() != 0) {
    set_pricetick(from.pricetick());
  }
  if (from.createdate().size() > 0) {

    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
  if (from.opendate().size() > 0) {

    opendate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opendate_);
  }
  if (from.expiredate().size() > 0) {

    expiredate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiredate_);
  }
  if (from.startdelivdate().size() > 0) {

    startdelivdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.startdelivdate_);
  }
  if (from.enddelivdate().size() > 0) {

    enddelivdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enddelivdate_);
  }
  if (from.lifephase() != 0) {
    set_lifephase(from.lifephase());
  }
  if (from.istrading() != 0) {
    set_istrading(from.istrading());
  }
  if (from.positiontype() != 0) {
    set_positiontype(from.positiontype());
  }
  if (from.positiondatetype() != 0) {
    set_positiondatetype(from.positiondatetype());
  }
  if (from.longmarginratio() != 0) {
    set_longmarginratio(from.longmarginratio());
  }
  if (from.shortmarginratio() != 0) {
    set_shortmarginratio(from.shortmarginratio());
  }
  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
}

void PBContractInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractInfo::CopyFrom(const PBContractInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractInfo::IsInitialized() const {

  return true;
}

void PBContractInfo::Swap(PBContractInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractInfo::InternalSwap(PBContractInfo* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  name_.Swap(&other->name_);
  productid_.Swap(&other->productid_);
  std::swap(producttype_, other->producttype_);
  std::swap(deliveryyear_, other->deliveryyear_);
  std::swap(deliverymonth_, other->deliverymonth_);
  std::swap(maxmarketordervolume_, other->maxmarketordervolume_);
  std::swap(minmarketordervolume_, other->minmarketordervolume_);
  std::swap(maxlimitordervolume_, other->maxlimitordervolume_);
  std::swap(minlimitordervolume_, other->minlimitordervolume_);
  std::swap(volumemultiple_, other->volumemultiple_);
  std::swap(pricetick_, other->pricetick_);
  createdate_.Swap(&other->createdate_);
  opendate_.Swap(&other->opendate_);
  expiredate_.Swap(&other->expiredate_);
  startdelivdate_.Swap(&other->startdelivdate_);
  enddelivdate_.Swap(&other->enddelivdate_);
  std::swap(lifephase_, other->lifephase_);
  std::swap(istrading_, other->istrading_);
  std::swap(positiontype_, other->positiontype_);
  std::swap(positiondatetype_, other->positiondatetype_);
  std::swap(longmarginratio_, other->longmarginratio_);
  std::swap(shortmarginratio_, other->shortmarginratio_);
  groupname_.Swap(&other->groupname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractInfo_descriptor_;
  metadata.reflection = PBContractInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractInfo

// optional string exchange = 1;
void PBContractInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.exchange)
}
 void PBContractInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.exchange)
}
 void PBContractInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.exchange)
}
 ::std::string* PBContractInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.exchange)
}

// optional string contract = 2;
void PBContractInfo::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.contract)
}
 void PBContractInfo::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.contract)
}
 void PBContractInfo::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.contract)
}
 ::std::string* PBContractInfo::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.contract)
}

// optional bytes name = 3;
void PBContractInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::name() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.name)
}
 void PBContractInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.name)
}
 void PBContractInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.name)
}
 ::std::string* PBContractInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_name() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.name)
}

// optional string productID = 4;
void PBContractInfo::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::productid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.productID)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_productid(const ::std::string& value) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.productID)
}
 void PBContractInfo::set_productid(const char* value) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.productID)
}
 void PBContractInfo::set_productid(const char* value, size_t size) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.productID)
}
 ::std::string* PBContractInfo::mutable_productid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.productID)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_productid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.productID)
  
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    
  } else {
    
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.productID)
}

// optional int32 productType = 5;
void PBContractInfo::clear_producttype() {
  producttype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::producttype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.productType)
  return producttype_;
}
 void PBContractInfo::set_producttype(::google::protobuf::int32 value) {
  
  producttype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.productType)
}

// optional int32 deliveryYear = 6;
void PBContractInfo::clear_deliveryyear() {
  deliveryyear_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::deliveryyear() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.deliveryYear)
  return deliveryyear_;
}
 void PBContractInfo::set_deliveryyear(::google::protobuf::int32 value) {
  
  deliveryyear_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.deliveryYear)
}

// optional int32 deliveryMonth = 7;
void PBContractInfo::clear_deliverymonth() {
  deliverymonth_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::deliverymonth() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.deliveryMonth)
  return deliverymonth_;
}
 void PBContractInfo::set_deliverymonth(::google::protobuf::int32 value) {
  
  deliverymonth_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.deliveryMonth)
}

// optional int32 maxMarketOrderVolume = 8;
void PBContractInfo::clear_maxmarketordervolume() {
  maxmarketordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::maxmarketordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.maxMarketOrderVolume)
  return maxmarketordervolume_;
}
 void PBContractInfo::set_maxmarketordervolume(::google::protobuf::int32 value) {
  
  maxmarketordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.maxMarketOrderVolume)
}

// optional int32 minMarketOrderVolume = 9;
void PBContractInfo::clear_minmarketordervolume() {
  minmarketordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::minmarketordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.minMarketOrderVolume)
  return minmarketordervolume_;
}
 void PBContractInfo::set_minmarketordervolume(::google::protobuf::int32 value) {
  
  minmarketordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.minMarketOrderVolume)
}

// optional int32 maxLimitOrderVolume = 10;
void PBContractInfo::clear_maxlimitordervolume() {
  maxlimitordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::maxlimitordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.maxLimitOrderVolume)
  return maxlimitordervolume_;
}
 void PBContractInfo::set_maxlimitordervolume(::google::protobuf::int32 value) {
  
  maxlimitordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.maxLimitOrderVolume)
}

// optional int32 minLimitOrderVolume = 11;
void PBContractInfo::clear_minlimitordervolume() {
  minlimitordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::minlimitordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.minLimitOrderVolume)
  return minlimitordervolume_;
}
 void PBContractInfo::set_minlimitordervolume(::google::protobuf::int32 value) {
  
  minlimitordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.minLimitOrderVolume)
}

// optional int32 volumeMultiple = 12;
void PBContractInfo::clear_volumemultiple() {
  volumemultiple_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::volumemultiple() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.volumeMultiple)
  return volumemultiple_;
}
 void PBContractInfo::set_volumemultiple(::google::protobuf::int32 value) {
  
  volumemultiple_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.volumeMultiple)
}

// optional int32 priceTick = 13;
void PBContractInfo::clear_pricetick() {
  pricetick_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::pricetick() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.priceTick)
  return pricetick_;
}
 void PBContractInfo::set_pricetick(::google::protobuf::int32 value) {
  
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.priceTick)
}

// optional string createDate = 14;
void PBContractInfo::clear_createdate() {
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::createdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.createDate)
  return createdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_createdate(const ::std::string& value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.createDate)
}
 void PBContractInfo::set_createdate(const char* value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.createDate)
}
 void PBContractInfo::set_createdate(const char* value, size_t size) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.createDate)
}
 ::std::string* PBContractInfo::mutable_createdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.createDate)
  return createdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_createdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.createDate)
  
  return createdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_createdate(::std::string* createdate) {
  if (createdate != NULL) {
    
  } else {
    
  }
  createdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.createDate)
}

// optional string openDate = 15;
void PBContractInfo::clear_opendate() {
  opendate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::opendate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.openDate)
  return opendate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_opendate(const ::std::string& value) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.openDate)
}
 void PBContractInfo::set_opendate(const char* value) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.openDate)
}
 void PBContractInfo::set_opendate(const char* value, size_t size) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.openDate)
}
 ::std::string* PBContractInfo::mutable_opendate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.openDate)
  return opendate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_opendate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.openDate)
  
  return opendate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_opendate(::std::string* opendate) {
  if (opendate != NULL) {
    
  } else {
    
  }
  opendate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opendate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.openDate)
}

// optional string expireDate = 16;
void PBContractInfo::clear_expiredate() {
  expiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::expiredate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.expireDate)
  return expiredate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_expiredate(const ::std::string& value) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.expireDate)
}
 void PBContractInfo::set_expiredate(const char* value) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.expireDate)
}
 void PBContractInfo::set_expiredate(const char* value, size_t size) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.expireDate)
}
 ::std::string* PBContractInfo::mutable_expiredate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.expireDate)
  return expiredate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_expiredate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.expireDate)
  
  return expiredate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_expiredate(::std::string* expiredate) {
  if (expiredate != NULL) {
    
  } else {
    
  }
  expiredate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiredate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.expireDate)
}

// optional string startDelivDate = 17;
void PBContractInfo::clear_startdelivdate() {
  startdelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::startdelivdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
  return startdelivdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_startdelivdate(const ::std::string& value) {
  
  startdelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}
 void PBContractInfo::set_startdelivdate(const char* value) {
  
  startdelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}
 void PBContractInfo::set_startdelivdate(const char* value, size_t size) {
  
  startdelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}
 ::std::string* PBContractInfo::mutable_startdelivdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
  return startdelivdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_startdelivdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
  
  return startdelivdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_startdelivdate(::std::string* startdelivdate) {
  if (startdelivdate != NULL) {
    
  } else {
    
  }
  startdelivdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), startdelivdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}

// optional string endDelivDate = 18;
void PBContractInfo::clear_enddelivdate() {
  enddelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::enddelivdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
  return enddelivdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_enddelivdate(const ::std::string& value) {
  
  enddelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}
 void PBContractInfo::set_enddelivdate(const char* value) {
  
  enddelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}
 void PBContractInfo::set_enddelivdate(const char* value, size_t size) {
  
  enddelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}
 ::std::string* PBContractInfo::mutable_enddelivdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
  return enddelivdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_enddelivdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
  
  return enddelivdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_enddelivdate(::std::string* enddelivdate) {
  if (enddelivdate != NULL) {
    
  } else {
    
  }
  enddelivdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enddelivdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}

// optional int32 lifePhase = 19;
void PBContractInfo::clear_lifephase() {
  lifephase_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::lifephase() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.lifePhase)
  return lifephase_;
}
 void PBContractInfo::set_lifephase(::google::protobuf::int32 value) {
  
  lifephase_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.lifePhase)
}

// optional int32 isTrading = 20;
void PBContractInfo::clear_istrading() {
  istrading_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::istrading() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.isTrading)
  return istrading_;
}
 void PBContractInfo::set_istrading(::google::protobuf::int32 value) {
  
  istrading_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.isTrading)
}

// optional int32 positionType = 21;
void PBContractInfo::clear_positiontype() {
  positiontype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::positiontype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.positionType)
  return positiontype_;
}
 void PBContractInfo::set_positiontype(::google::protobuf::int32 value) {
  
  positiontype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.positionType)
}

// optional int32 positionDateType = 22;
void PBContractInfo::clear_positiondatetype() {
  positiondatetype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::positiondatetype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.positionDateType)
  return positiondatetype_;
}
 void PBContractInfo::set_positiondatetype(::google::protobuf::int32 value) {
  
  positiondatetype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.positionDateType)
}

// optional double longMarginRatio = 23;
void PBContractInfo::clear_longmarginratio() {
  longmarginratio_ = 0;
}
 double PBContractInfo::longmarginratio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.longMarginRatio)
  return longmarginratio_;
}
 void PBContractInfo::set_longmarginratio(double value) {
  
  longmarginratio_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.longMarginRatio)
}

// optional double shortMarginRatio = 24;
void PBContractInfo::clear_shortmarginratio() {
  shortmarginratio_ = 0;
}
 double PBContractInfo::shortmarginratio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.shortMarginRatio)
  return shortmarginratio_;
}
 void PBContractInfo::set_shortmarginratio(double value) {
  
  shortmarginratio_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.shortMarginRatio)
}

// optional string groupName = 25;
void PBContractInfo::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::groupname() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_groupname(const ::std::string& value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.groupName)
}
 void PBContractInfo::set_groupname(const char* value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.groupName)
}
 void PBContractInfo::set_groupname(const char* value, size_t size) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.groupName)
}
 ::std::string* PBContractInfo::mutable_groupname() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_groupname() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.groupName)
  
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    
  } else {
    
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.groupName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractInfoList::kContractInfoFieldNumber;
const int PBContractInfoList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractInfoList::PBContractInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractInfoList)
}

void PBContractInfoList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBContractInfoList::PBContractInfoList(const PBContractInfoList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractInfoList)
}

void PBContractInfoList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBContractInfoList::~PBContractInfoList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractInfoList)
  SharedDtor();
}

void PBContractInfoList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBContractInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractInfoList_descriptor_;
}

const PBContractInfoList& PBContractInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractInfoList* PBContractInfoList::default_instance_ = NULL;

PBContractInfoList* PBContractInfoList::New(::google::protobuf::Arena* arena) const {
  PBContractInfoList* n = new PBContractInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractInfoList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  contractinfo_.Clear();
}

bool PBContractInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_contractInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contractinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_contractInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractInfoList)
  return false;
#undef DO_
}

void PBContractInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractInfoList)
  // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 1;
  for (unsigned int i = 0, n = this->contractinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->contractinfo(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractInfoList)
}

::google::protobuf::uint8* PBContractInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractInfoList)
  // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 1;
  for (unsigned int i = 0, n = this->contractinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->contractinfo(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractInfoList)
  return target;
}

int PBContractInfoList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractInfoList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 1;
  total_size += 1 * this->contractinfo_size();
  for (int i = 0; i < this->contractinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contractinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractInfoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractInfoList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractInfoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractInfoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractInfoList)
    MergeFrom(*source);
  }
}

void PBContractInfoList::MergeFrom(const PBContractInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  contractinfo_.MergeFrom(from.contractinfo_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBContractInfoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractInfoList::CopyFrom(const PBContractInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractInfoList::IsInitialized() const {

  return true;
}

void PBContractInfoList::Swap(PBContractInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractInfoList::InternalSwap(PBContractInfoList* other) {
  contractinfo_.UnsafeArenaSwap(&other->contractinfo_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractInfoList_descriptor_;
  metadata.reflection = PBContractInfoList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractInfoList

// repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 1;
int PBContractInfoList::contractinfo_size() const {
  return contractinfo_.size();
}
void PBContractInfoList::clear_contractinfo() {
  contractinfo_.Clear();
}
const ::Micro::Future::Message::Business::PBContractInfo& PBContractInfoList::contractinfo(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_.Get(index);
}
::Micro::Future::Message::Business::PBContractInfo* PBContractInfoList::mutable_contractinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_.Mutable(index);
}
::Micro::Future::Message::Business::PBContractInfo* PBContractInfoList::add_contractinfo() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractInfo >*
PBContractInfoList::mutable_contractinfo() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return &contractinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractInfo >&
PBContractInfoList::contractinfo() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBContractInfoList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBContractInfoList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBContractInfoList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfoList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBContractInfoList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfoList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBContractInfoList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfoList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBContractInfoList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfoList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOptionPricing::kHeaderFieldNumber;
const int PBOptionPricing::kExchangeFieldNumber;
const int PBOptionPricing::kContractFieldNumber;
const int PBOptionPricing::kStrikePriceFieldNumber;
const int PBOptionPricing::kPutBidPriceFieldNumber;
const int PBOptionPricing::kPutAskPriceFieldNumber;
const int PBOptionPricing::kCallBidPriceFieldNumber;
const int PBOptionPricing::kCallAskPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOptionPricing::PBOptionPricing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOptionPricing)
}

void PBOptionPricing::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOptionPricing::PBOptionPricing(const PBOptionPricing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOptionPricing)
}

void PBOptionPricing::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBOptionPricing::~PBOptionPricing() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOptionPricing)
  SharedDtor();
}

void PBOptionPricing::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOptionPricing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOptionPricing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOptionPricing_descriptor_;
}

const PBOptionPricing& PBOptionPricing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOptionPricing* PBOptionPricing::default_instance_ = NULL;

PBOptionPricing* PBOptionPricing::New(::google::protobuf::Arena* arena) const {
  PBOptionPricing* n = new PBOptionPricing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOptionPricing::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOptionPricing)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strikeprice_.Clear();
  putbidprice_.Clear();
  putaskprice_.Clear();
  callbidprice_.Clear();
  callaskprice_.Clear();
}

bool PBOptionPricing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOptionPricing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOptionPricing.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOptionPricing.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_strikePrice;
        break;
      }

      // repeated double strikePrice = 4;
      case 4: {
        if (tag == 34) {
         parse_strikePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_strikeprice())));
        } else if (tag == 33) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 34, input, this->mutable_strikeprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_putBidPrice;
        break;
      }

      // repeated double putBidPrice = 5;
      case 5: {
        if (tag == 42) {
         parse_putBidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_putbidprice())));
        } else if (tag == 41) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 42, input, this->mutable_putbidprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_putAskPrice;
        break;
      }

      // repeated double putAskPrice = 6;
      case 6: {
        if (tag == 50) {
         parse_putAskPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_putaskprice())));
        } else if (tag == 49) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50, input, this->mutable_putaskprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_callBidPrice;
        break;
      }

      // repeated double callBidPrice = 7;
      case 7: {
        if (tag == 58) {
         parse_callBidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_callbidprice())));
        } else if (tag == 57) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 58, input, this->mutable_callbidprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_callAskPrice;
        break;
      }

      // repeated double callAskPrice = 8;
      case 8: {
        if (tag == 66) {
         parse_callAskPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_callaskprice())));
        } else if (tag == 65) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 66, input, this->mutable_callaskprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOptionPricing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOptionPricing)
  return false;
#undef DO_
}

void PBOptionPricing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOptionPricing)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOptionPricing.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOptionPricing.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // repeated double strikePrice = 4;
  if (this->strikeprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_strikeprice_cached_byte_size_);
  }
  for (int i = 0; i < this->strikeprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->strikeprice(i), output);
  }

  // repeated double putBidPrice = 5;
  if (this->putbidprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_putbidprice_cached_byte_size_);
  }
  for (int i = 0; i < this->putbidprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->putbidprice(i), output);
  }

  // repeated double putAskPrice = 6;
  if (this->putaskprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_putaskprice_cached_byte_size_);
  }
  for (int i = 0; i < this->putaskprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->putaskprice(i), output);
  }

  // repeated double callBidPrice = 7;
  if (this->callbidprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_callbidprice_cached_byte_size_);
  }
  for (int i = 0; i < this->callbidprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->callbidprice(i), output);
  }

  // repeated double callAskPrice = 8;
  if (this->callaskprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_callaskprice_cached_byte_size_);
  }
  for (int i = 0; i < this->callaskprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->callaskprice(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOptionPricing)
}

::google::protobuf::uint8* PBOptionPricing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOptionPricing)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOptionPricing.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOptionPricing.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // repeated double strikePrice = 4;
  if (this->strikeprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _strikeprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->strikeprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->strikeprice(i), target);
  }

  // repeated double putBidPrice = 5;
  if (this->putbidprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _putbidprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->putbidprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->putbidprice(i), target);
  }

  // repeated double putAskPrice = 6;
  if (this->putaskprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _putaskprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->putaskprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->putaskprice(i), target);
  }

  // repeated double callBidPrice = 7;
  if (this->callbidprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _callbidprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->callbidprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->callbidprice(i), target);
  }

  // repeated double callAskPrice = 8;
  if (this->callaskprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _callaskprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->callaskprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->callaskprice(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOptionPricing)
  return target;
}

int PBOptionPricing::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOptionPricing)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // repeated double strikePrice = 4;
  {
    int data_size = 0;
    data_size = 8 * this->strikeprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _strikeprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double putBidPrice = 5;
  {
    int data_size = 0;
    data_size = 8 * this->putbidprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _putbidprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double putAskPrice = 6;
  {
    int data_size = 0;
    data_size = 8 * this->putaskprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _putaskprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double callBidPrice = 7;
  {
    int data_size = 0;
    data_size = 8 * this->callbidprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _callbidprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double callAskPrice = 8;
  {
    int data_size = 0;
    data_size = 8 * this->callaskprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _callaskprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOptionPricing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOptionPricing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOptionPricing* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOptionPricing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOptionPricing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOptionPricing)
    MergeFrom(*source);
  }
}

void PBOptionPricing::MergeFrom(const PBOptionPricing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOptionPricing)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  strikeprice_.MergeFrom(from.strikeprice_);
  putbidprice_.MergeFrom(from.putbidprice_);
  putaskprice_.MergeFrom(from.putaskprice_);
  callbidprice_.MergeFrom(from.callbidprice_);
  callaskprice_.MergeFrom(from.callaskprice_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
}

void PBOptionPricing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOptionPricing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOptionPricing::CopyFrom(const PBOptionPricing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOptionPricing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOptionPricing::IsInitialized() const {

  return true;
}

void PBOptionPricing::Swap(PBOptionPricing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOptionPricing::InternalSwap(PBOptionPricing* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  strikeprice_.UnsafeArenaSwap(&other->strikeprice_);
  putbidprice_.UnsafeArenaSwap(&other->putbidprice_);
  putaskprice_.UnsafeArenaSwap(&other->putaskprice_);
  callbidprice_.UnsafeArenaSwap(&other->callbidprice_);
  callaskprice_.UnsafeArenaSwap(&other->callaskprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOptionPricing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOptionPricing_descriptor_;
  metadata.reflection = PBOptionPricing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOptionPricing

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBOptionPricing::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOptionPricing::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOptionPricing::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOptionPricing::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOptionPricing.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOptionPricing::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOptionPricing.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOptionPricing::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOptionPricing.header)
}

// optional string exchange = 2;
void PBOptionPricing::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOptionPricing::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOptionPricing::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.exchange)
}
 void PBOptionPricing::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOptionPricing.exchange)
}
 void PBOptionPricing::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOptionPricing.exchange)
}
 ::std::string* PBOptionPricing::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOptionPricing.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOptionPricing::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOptionPricing.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOptionPricing::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOptionPricing.exchange)
}

// optional string contract = 3;
void PBOptionPricing::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOptionPricing::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOptionPricing::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.contract)
}
 void PBOptionPricing::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOptionPricing.contract)
}
 void PBOptionPricing::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOptionPricing.contract)
}
 ::std::string* PBOptionPricing::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOptionPricing.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOptionPricing::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOptionPricing.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOptionPricing::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOptionPricing.contract)
}

// repeated double strikePrice = 4;
int PBOptionPricing::strikeprice_size() const {
  return strikeprice_.size();
}
void PBOptionPricing::clear_strikeprice() {
  strikeprice_.Clear();
}
 double PBOptionPricing::strikeprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.strikePrice)
  return strikeprice_.Get(index);
}
 void PBOptionPricing::set_strikeprice(int index, double value) {
  strikeprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.strikePrice)
}
 void PBOptionPricing::add_strikeprice(double value) {
  strikeprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOptionPricing.strikePrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBOptionPricing::strikeprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOptionPricing.strikePrice)
  return strikeprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBOptionPricing::mutable_strikeprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOptionPricing.strikePrice)
  return &strikeprice_;
}

// repeated double putBidPrice = 5;
int PBOptionPricing::putbidprice_size() const {
  return putbidprice_.size();
}
void PBOptionPricing::clear_putbidprice() {
  putbidprice_.Clear();
}
 double PBOptionPricing::putbidprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.putBidPrice)
  return putbidprice_.Get(index);
}
 void PBOptionPricing::set_putbidprice(int index, double value) {
  putbidprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.putBidPrice)
}
 void PBOptionPricing::add_putbidprice(double value) {
  putbidprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOptionPricing.putBidPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBOptionPricing::putbidprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOptionPricing.putBidPrice)
  return putbidprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBOptionPricing::mutable_putbidprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOptionPricing.putBidPrice)
  return &putbidprice_;
}

// repeated double putAskPrice = 6;
int PBOptionPricing::putaskprice_size() const {
  return putaskprice_.size();
}
void PBOptionPricing::clear_putaskprice() {
  putaskprice_.Clear();
}
 double PBOptionPricing::putaskprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.putAskPrice)
  return putaskprice_.Get(index);
}
 void PBOptionPricing::set_putaskprice(int index, double value) {
  putaskprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.putAskPrice)
}
 void PBOptionPricing::add_putaskprice(double value) {
  putaskprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOptionPricing.putAskPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBOptionPricing::putaskprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOptionPricing.putAskPrice)
  return putaskprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBOptionPricing::mutable_putaskprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOptionPricing.putAskPrice)
  return &putaskprice_;
}

// repeated double callBidPrice = 7;
int PBOptionPricing::callbidprice_size() const {
  return callbidprice_.size();
}
void PBOptionPricing::clear_callbidprice() {
  callbidprice_.Clear();
}
 double PBOptionPricing::callbidprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.callBidPrice)
  return callbidprice_.Get(index);
}
 void PBOptionPricing::set_callbidprice(int index, double value) {
  callbidprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.callBidPrice)
}
 void PBOptionPricing::add_callbidprice(double value) {
  callbidprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOptionPricing.callBidPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBOptionPricing::callbidprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOptionPricing.callBidPrice)
  return callbidprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBOptionPricing::mutable_callbidprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOptionPricing.callBidPrice)
  return &callbidprice_;
}

// repeated double callAskPrice = 8;
int PBOptionPricing::callaskprice_size() const {
  return callaskprice_.size();
}
void PBOptionPricing::clear_callaskprice() {
  callaskprice_.Clear();
}
 double PBOptionPricing::callaskprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionPricing.callAskPrice)
  return callaskprice_.Get(index);
}
 void PBOptionPricing::set_callaskprice(int index, double value) {
  callaskprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionPricing.callAskPrice)
}
 void PBOptionPricing::add_callaskprice(double value) {
  callaskprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOptionPricing.callAskPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBOptionPricing::callaskprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOptionPricing.callAskPrice)
  return callaskprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBOptionPricing::mutable_callaskprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOptionPricing.callAskPrice)
  return &callaskprice_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Business
}  // namespace Message
}  // namespace Future
}  // namespace Micro

// @@protoc_insertion_point(global_scope)
