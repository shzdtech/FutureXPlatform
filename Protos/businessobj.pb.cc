// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: businessobj.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "businessobj.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Micro {
namespace Future {
namespace Message {
namespace Business {

namespace {

const ::google::protobuf::Descriptor* PBInstrument_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBInstrument_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBInstrumentList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBInstrumentList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMarketData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMarketData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMarketDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMarketDataList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBHedgeContract_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBHedgeContract_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPortfolio_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPortfolio_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPortfolioList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPortfolioList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPricingData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPricingData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPricingDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPricingDataList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOptionMarketData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOptionMarketData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBImpliedVolatility_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBImpliedVolatility_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOptionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOptionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBWingsModelReturn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBWingsModelReturn_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTradingDeskOptionParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTradingDeskOptionParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPricingContract_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPricingContract_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBStrategy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBStrategy_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBStrategyList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBStrategyList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBRisk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBRisk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBRiskList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBRiskList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractParamList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractParamList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOTCUserParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOTCUserParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOTCUserParamList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOTCUserParamList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOrderRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOrderRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOrderInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOrderInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTradeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTradeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBAccountInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBAccountInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMarketInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMarketInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBContractInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBContractInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBankOpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBankOpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBankOpResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBankOpResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBUserAccountInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBUserAccountInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPositionCompare_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPositionCompare_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPositionCompareList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPositionCompareList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBValuationContract_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBValuationContract_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBValuationRisk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBValuationRisk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPositionPnL_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPositionPnL_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_businessobj_2eproto() {
  protobuf_AddDesc_businessobj_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "businessobj.proto");
  GOOGLE_CHECK(file != NULL);
  PBInstrument_descriptor_ = file->message_type(0);
  static const int PBInstrument_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrument, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrument, contract_),
  };
  PBInstrument_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBInstrument_descriptor_,
      PBInstrument::default_instance_,
      PBInstrument_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBInstrument),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrument, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrument, _is_default_instance_));
  PBInstrumentList_descriptor_ = file->message_type(1);
  static const int PBInstrumentList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrumentList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrumentList, instrument_),
  };
  PBInstrumentList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBInstrumentList_descriptor_,
      PBInstrumentList::default_instance_,
      PBInstrumentList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBInstrumentList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrumentList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBInstrumentList, _is_default_instance_));
  PBMarketData_descriptor_ = file->message_type(2);
  static const int PBMarketData_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, preclosevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, openvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, highvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, lowvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, matchprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, askvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, bidvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, presettleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, pricechange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, settleprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, highlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, lowlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, preopeninterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, openinterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, averageprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, tradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, closevalue_),
  };
  PBMarketData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMarketData_descriptor_,
      PBMarketData::default_instance_,
      PBMarketData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMarketData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketData, _is_default_instance_));
  PBMarketDataList_descriptor_ = file->message_type(3);
  static const int PBMarketDataList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, marketdata_),
  };
  PBMarketDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMarketDataList_descriptor_,
      PBMarketDataList::default_instance_,
      PBMarketDataList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMarketDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketDataList, _is_default_instance_));
  PBHedgeContract_descriptor_ = file->message_type(4);
  static const int PBHedgeContract_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHedgeContract, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHedgeContract, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHedgeContract, underlying_),
  };
  PBHedgeContract_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBHedgeContract_descriptor_,
      PBHedgeContract::default_instance_,
      PBHedgeContract_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBHedgeContract),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHedgeContract, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHedgeContract, _is_default_instance_));
  PBPortfolio_descriptor_ = file->message_type(5);
  static const int PBPortfolio_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, hedgedelay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, hedging_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, hedgevolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, hedgecontracts_),
  };
  PBPortfolio_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPortfolio_descriptor_,
      PBPortfolio::default_instance_,
      PBPortfolio_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPortfolio),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolio, _is_default_instance_));
  PBPortfolioList_descriptor_ = file->message_type(6);
  static const int PBPortfolioList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolioList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolioList, portfolio_),
  };
  PBPortfolioList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPortfolioList_descriptor_,
      PBPortfolioList::default_instance_,
      PBPortfolioList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPortfolioList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolioList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPortfolioList, _is_default_instance_));
  PBPricingData_descriptor_ = file->message_type(7);
  static const int PBPricingData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, asksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, bidsize_),
  };
  PBPricingData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPricingData_descriptor_,
      PBPricingData::default_instance_,
      PBPricingData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPricingData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingData, _is_default_instance_));
  PBPricingDataList_descriptor_ = file->message_type(8);
  static const int PBPricingDataList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, pricingdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, header_),
  };
  PBPricingDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPricingDataList_descriptor_,
      PBPricingDataList::default_instance_,
      PBPricingDataList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPricingDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingDataList, _is_default_instance_));
  PBOptionMarketData_descriptor_ = file->message_type(9);
  static const int PBOptionMarketData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionMarketData, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionMarketData, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionMarketData, asksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionMarketData, bidsize_),
  };
  PBOptionMarketData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOptionMarketData_descriptor_,
      PBOptionMarketData::default_instance_,
      PBOptionMarketData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOptionMarketData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionMarketData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionMarketData, _is_default_instance_));
  PBImpliedVolatility_descriptor_ = file->message_type(10);
  static const int PBImpliedVolatility_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBImpliedVolatility, askvolatility_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBImpliedVolatility, bidvolatility_),
  };
  PBImpliedVolatility_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBImpliedVolatility_descriptor_,
      PBImpliedVolatility::default_instance_,
      PBImpliedVolatility_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBImpliedVolatility),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBImpliedVolatility, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBImpliedVolatility, _is_default_instance_));
  PBOptionData_descriptor_ = file->message_type(11);
  static const int PBOptionData_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, asksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, bidsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, askvolatility_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, bidvolatility_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, midvolatility_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, delta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, gamma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, vega_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, rho_),
  };
  PBOptionData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOptionData_descriptor_,
      PBOptionData::default_instance_,
      PBOptionData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOptionData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOptionData, _is_default_instance_));
  PBWingsModelReturn_descriptor_ = file->message_type(12);
  static const int PBWingsModelReturn_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, f_atm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, f_ref_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, f_syn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, vol_curr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, vol_curr_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, slope_curr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, slope_curr_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, x0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, x1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, x2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, x3_),
  };
  PBWingsModelReturn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBWingsModelReturn_descriptor_,
      PBWingsModelReturn::default_instance_,
      PBWingsModelReturn_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBWingsModelReturn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBWingsModelReturn, _is_default_instance_));
  PBTradingDeskOptionParams_descriptor_ = file->message_type(13);
  static const int PBTradingDeskOptionParams_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, marketdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, impliedvol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, theodata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, wingsreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, theodatatemp_),
  };
  PBTradingDeskOptionParams_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTradingDeskOptionParams_descriptor_,
      PBTradingDeskOptionParams::default_instance_,
      PBTradingDeskOptionParams_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTradingDeskOptionParams),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradingDeskOptionParams, _is_default_instance_));
  PBPricingContract_descriptor_ = file->message_type(14);
  static const int PBPricingContract_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, adjust_),
  };
  PBPricingContract_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPricingContract_descriptor_,
      PBPricingContract::default_instance_,
      PBPricingContract_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPricingContract),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPricingContract, _is_default_instance_));
  PBStrategy_descriptor_ = file->message_type(15);
  static const int PBStrategy_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, underlying_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, hedging_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, bidenabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, askenabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, bidqv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, askqv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, pricingcontracts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, pricingmodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, ivmcontracts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, ivmodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, volcontracts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, volmodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, baseexchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, basecontract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, portfolio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, maxautotrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, bidcounter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, askcounter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, bidnotcross_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, closemode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, limitordercounter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, tif_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, volcond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, ticksizemult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, maxlimitorder_),
  };
  PBStrategy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBStrategy_descriptor_,
      PBStrategy::default_instance_,
      PBStrategy_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBStrategy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategy, _is_default_instance_));
  PBStrategyList_descriptor_ = file->message_type(16);
  static const int PBStrategyList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, strategy_),
  };
  PBStrategyList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBStrategyList_descriptor_,
      PBStrategyList::default_instance_,
      PBStrategyList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBStrategyList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBStrategyList, _is_default_instance_));
  PBRisk_descriptor_ = file->message_type(17);
  static const int PBRisk_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, underlying_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, delta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, gamma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, vega_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, rho_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, price_),
  };
  PBRisk_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBRisk_descriptor_,
      PBRisk::default_instance_,
      PBRisk_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBRisk),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRisk, _is_default_instance_));
  PBRiskList_descriptor_ = file->message_type(18);
  static const int PBRiskList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRiskList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRiskList, risk_),
  };
  PBRiskList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBRiskList_descriptor_,
      PBRiskList::default_instance_,
      PBRiskList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBRiskList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRiskList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBRiskList, _is_default_instance_));
  PBContractParam_descriptor_ = file->message_type(19);
  static const int PBContractParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, depthvol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, gamma_),
  };
  PBContractParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractParam_descriptor_,
      PBContractParam::default_instance_,
      PBContractParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParam, _is_default_instance_));
  PBContractParamList_descriptor_ = file->message_type(20);
  static const int PBContractParamList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, params_),
  };
  PBContractParamList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractParamList_descriptor_,
      PBContractParamList::default_instance_,
      PBContractParamList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractParamList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractParamList, _is_default_instance_));
  PBOTCUserParam_descriptor_ = file->message_type(21);
  static const int PBOTCUserParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, quantity_),
  };
  PBOTCUserParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOTCUserParam_descriptor_,
      PBOTCUserParam::default_instance_,
      PBOTCUserParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOTCUserParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParam, _is_default_instance_));
  PBOTCUserParamList_descriptor_ = file->message_type(22);
  static const int PBOTCUserParamList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, params_),
  };
  PBOTCUserParamList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOTCUserParamList_descriptor_,
      PBOTCUserParamList::default_instance_,
      PBOTCUserParamList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOTCUserParamList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOTCUserParamList, _is_default_instance_));
  PBOrderRequest_descriptor_ = file->message_type(23);
  static const int PBOrderRequest_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, ordersysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, limitprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, exectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, tif_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, openclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, portfolio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, volcond_),
  };
  PBOrderRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOrderRequest_descriptor_,
      PBOrderRequest::default_instance_,
      PBOrderRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOrderRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderRequest, _is_default_instance_));
  PBOrderInfo_descriptor_ = file->message_type(24);
  static const int PBOrderInfo_offsets_[29] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, ordersysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, investorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, exectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, tif_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, tradingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, limitprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, stopprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, orderstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, ordertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, inserttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, canceltime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volumetraded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volumeremain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, volumecondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, tradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, openclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, portfolio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, insertdate_),
  };
  PBOrderInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOrderInfo_descriptor_,
      PBOrderInfo::default_instance_,
      PBOrderInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOrderInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOrderInfo, _is_default_instance_));
  PBTradeInfo_descriptor_ = file->message_type(25);
  static const int PBTradeInfo_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, openclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, ordersysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, investorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, tradetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, hedgeflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, commission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, portfolio_),
  };
  PBTradeInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTradeInfo_descriptor_,
      PBTradeInfo::default_instance_,
      PBTradeInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTradeInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTradeInfo, _is_default_instance_));
  PBPosition_descriptor_ = file->message_type(26);
  static const int PBPosition_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, tdposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, ydposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, positiondateflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, openvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, closevolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, openamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, closeamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, tdcost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, ydcost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, opencost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, closeprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, usemargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, hedgeflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, portfolio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, profit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, longfrozenvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, shortfrozenvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, longfrozenamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, shortfrozenamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, lastprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, avgprice_),
  };
  PBPosition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPosition_descriptor_,
      PBPosition::default_instance_,
      PBPosition_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPosition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _is_default_instance_));
  PBAccountInfo_descriptor_ = file->message_type(27);
  static const int PBAccountInfo_offsets_[34] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, premortgage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, precredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, predeposit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, prebalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, premargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, interestbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, interest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, deposit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, withdraw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, frozenmargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, frozencash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, frozencommission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, currmargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, cashin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, commission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, closeprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, positionprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, available_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, withdrawquota_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, reserve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, tradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, settlementid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, credit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, mortgage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, exchangemargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, deliverymargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, exchangedeliverymargin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, reservebalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, userbalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, riskratio_),
  };
  PBAccountInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBAccountInfo_descriptor_,
      PBAccountInfo::default_instance_,
      PBAccountInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBAccountInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAccountInfo, _is_default_instance_));
  PBMarketInfo_descriptor_ = file->message_type(28);
  static const int PBMarketInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, property_),
  };
  PBMarketInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMarketInfo_descriptor_,
      PBMarketInfo::default_instance_,
      PBMarketInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMarketInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMarketInfo, _is_default_instance_));
  PBContractInfo_descriptor_ = file->message_type(29);
  static const int PBContractInfo_offsets_[28] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, producttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, deliveryyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, deliverymonth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, maxmarketordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, minmarketordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, maxlimitordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, minlimitordervolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, volumemultiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, pricetick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, createdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, opendate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, expiredate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, startdelivdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, enddelivdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, lifephase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, istrading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, positiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, positiondatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, longmarginratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, shortmarginratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, underlyingexchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, underlyingcontract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, contracttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, strikeprice_),
  };
  PBContractInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractInfo_descriptor_,
      PBContractInfo::default_instance_,
      PBContractInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfo, _is_default_instance_));
  PBContractInfoList_descriptor_ = file->message_type(30);
  static const int PBContractInfoList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, contractinfo_),
  };
  PBContractInfoList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBContractInfoList_descriptor_,
      PBContractInfoList::default_instance_,
      PBContractInfoList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBContractInfoList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBContractInfoList, _is_default_instance_));
  PBBankOpRequest_descriptor_ = file->message_type(31);
  static const int PBBankOpRequest_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, bankid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, bankbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, bankpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, bankaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, brokerbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, currencyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, tradeamount_),
  };
  PBBankOpRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBBankOpRequest_descriptor_,
      PBBankOpRequest::default_instance_,
      PBBankOpRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBBankOpRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpRequest, _is_default_instance_));
  PBBankOpResult_descriptor_ = file->message_type(32);
  static const int PBBankOpResult_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, bankid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, bankbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, bankpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, bankaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, brokerbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, currencyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, tradeamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, serialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, tradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, tradedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, tradetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, tradecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, bankserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, futureacctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, bankacctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, futureserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, custfee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, brokerfee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, errorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, errormsg_),
  };
  PBBankOpResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBBankOpResult_descriptor_,
      PBBankOpResult::default_instance_,
      PBBankOpResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBBankOpResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankOpResult, _is_default_instance_));
  PBBankInfo_descriptor_ = file->message_type(33);
  static const int PBBankInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankInfo, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankInfo, bankid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankInfo, branchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankInfo, name_),
  };
  PBBankInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBBankInfo_descriptor_,
      PBBankInfo::default_instance_,
      PBBankInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBBankInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBankInfo, _is_default_instance_));
  PBUserAccountInfo_descriptor_ = file->message_type(34);
  static const int PBUserAccountInfo_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, bankid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, bankbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, bankaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, brokerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, brokerbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, idcardno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, customername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, currencyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, custtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, bankacctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, bankuseamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, bankfetchamount_),
  };
  PBUserAccountInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBUserAccountInfo_descriptor_,
      PBUserAccountInfo::default_instance_,
      PBUserAccountInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBUserAccountInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBUserAccountInfo, _is_default_instance_));
  PBPositionCompare_descriptor_ = file->message_type(35);
  static const int PBPositionCompare_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, portfolio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, dbposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, sysposition_),
  };
  PBPositionCompare_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPositionCompare_descriptor_,
      PBPositionCompare::default_instance_,
      PBPositionCompare_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPositionCompare),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompare, _is_default_instance_));
  PBPositionCompareList_descriptor_ = file->message_type(36);
  static const int PBPositionCompareList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompareList, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompareList, positions_),
  };
  PBPositionCompareList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPositionCompareList_descriptor_,
      PBPositionCompareList::default_instance_,
      PBPositionCompareList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPositionCompareList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompareList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionCompareList, _is_default_instance_));
  PBValuationContract_descriptor_ = file->message_type(37);
  static const int PBValuationContract_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationContract, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationContract, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationContract, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationContract, volatility_),
  };
  PBValuationContract_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBValuationContract_descriptor_,
      PBValuationContract::default_instance_,
      PBValuationContract_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBValuationContract),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationContract, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationContract, _is_default_instance_));
  PBValuationRisk_descriptor_ = file->message_type(38);
  static const int PBValuationRisk_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, contractvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, daysremain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, interest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, portfolio_),
  };
  PBValuationRisk_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBValuationRisk_descriptor_,
      PBValuationRisk::default_instance_,
      PBValuationRisk_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBValuationRisk),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBValuationRisk, _is_default_instance_));
  PBPositionPnL_descriptor_ = file->message_type(39);
  static const int PBPositionPnL_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, contract_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, portfolio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, tdbuyposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, ydbuyposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, tdsellposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, ydsellposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, tdbuyamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, tdsellamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, buyprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, sellprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, lastprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, avgbuyprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, avgsellprice_),
  };
  PBPositionPnL_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPositionPnL_descriptor_,
      PBPositionPnL::default_instance_,
      PBPositionPnL_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPositionPnL),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPositionPnL, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_businessobj_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBInstrument_descriptor_, &PBInstrument::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBInstrumentList_descriptor_, &PBInstrumentList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMarketData_descriptor_, &PBMarketData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMarketDataList_descriptor_, &PBMarketDataList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBHedgeContract_descriptor_, &PBHedgeContract::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPortfolio_descriptor_, &PBPortfolio::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPortfolioList_descriptor_, &PBPortfolioList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPricingData_descriptor_, &PBPricingData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPricingDataList_descriptor_, &PBPricingDataList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOptionMarketData_descriptor_, &PBOptionMarketData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBImpliedVolatility_descriptor_, &PBImpliedVolatility::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOptionData_descriptor_, &PBOptionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBWingsModelReturn_descriptor_, &PBWingsModelReturn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTradingDeskOptionParams_descriptor_, &PBTradingDeskOptionParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPricingContract_descriptor_, &PBPricingContract::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBStrategy_descriptor_, &PBStrategy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBStrategyList_descriptor_, &PBStrategyList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBRisk_descriptor_, &PBRisk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBRiskList_descriptor_, &PBRiskList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractParam_descriptor_, &PBContractParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractParamList_descriptor_, &PBContractParamList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOTCUserParam_descriptor_, &PBOTCUserParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOTCUserParamList_descriptor_, &PBOTCUserParamList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOrderRequest_descriptor_, &PBOrderRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOrderInfo_descriptor_, &PBOrderInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTradeInfo_descriptor_, &PBTradeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPosition_descriptor_, &PBPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBAccountInfo_descriptor_, &PBAccountInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMarketInfo_descriptor_, &PBMarketInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractInfo_descriptor_, &PBContractInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBContractInfoList_descriptor_, &PBContractInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBBankOpRequest_descriptor_, &PBBankOpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBBankOpResult_descriptor_, &PBBankOpResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBBankInfo_descriptor_, &PBBankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBUserAccountInfo_descriptor_, &PBUserAccountInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPositionCompare_descriptor_, &PBPositionCompare::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPositionCompareList_descriptor_, &PBPositionCompareList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBValuationContract_descriptor_, &PBValuationContract::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBValuationRisk_descriptor_, &PBValuationRisk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPositionPnL_descriptor_, &PBPositionPnL::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_businessobj_2eproto() {
  delete PBInstrument::default_instance_;
  delete PBInstrument_reflection_;
  delete PBInstrumentList::default_instance_;
  delete PBInstrumentList_reflection_;
  delete PBMarketData::default_instance_;
  delete PBMarketData_reflection_;
  delete PBMarketDataList::default_instance_;
  delete PBMarketDataList_reflection_;
  delete PBHedgeContract::default_instance_;
  delete PBHedgeContract_reflection_;
  delete PBPortfolio::default_instance_;
  delete PBPortfolio_reflection_;
  delete PBPortfolioList::default_instance_;
  delete PBPortfolioList_reflection_;
  delete PBPricingData::default_instance_;
  delete PBPricingData_reflection_;
  delete PBPricingDataList::default_instance_;
  delete PBPricingDataList_reflection_;
  delete PBOptionMarketData::default_instance_;
  delete PBOptionMarketData_reflection_;
  delete PBImpliedVolatility::default_instance_;
  delete PBImpliedVolatility_reflection_;
  delete PBOptionData::default_instance_;
  delete PBOptionData_reflection_;
  delete PBWingsModelReturn::default_instance_;
  delete PBWingsModelReturn_reflection_;
  delete PBTradingDeskOptionParams::default_instance_;
  delete PBTradingDeskOptionParams_reflection_;
  delete PBPricingContract::default_instance_;
  delete PBPricingContract_reflection_;
  delete PBStrategy::default_instance_;
  delete PBStrategy_reflection_;
  delete PBStrategyList::default_instance_;
  delete PBStrategyList_reflection_;
  delete PBRisk::default_instance_;
  delete PBRisk_reflection_;
  delete PBRiskList::default_instance_;
  delete PBRiskList_reflection_;
  delete PBContractParam::default_instance_;
  delete PBContractParam_reflection_;
  delete PBContractParamList::default_instance_;
  delete PBContractParamList_reflection_;
  delete PBOTCUserParam::default_instance_;
  delete PBOTCUserParam_reflection_;
  delete PBOTCUserParamList::default_instance_;
  delete PBOTCUserParamList_reflection_;
  delete PBOrderRequest::default_instance_;
  delete PBOrderRequest_reflection_;
  delete PBOrderInfo::default_instance_;
  delete PBOrderInfo_reflection_;
  delete PBTradeInfo::default_instance_;
  delete PBTradeInfo_reflection_;
  delete PBPosition::default_instance_;
  delete PBPosition_reflection_;
  delete PBAccountInfo::default_instance_;
  delete PBAccountInfo_reflection_;
  delete PBMarketInfo::default_instance_;
  delete PBMarketInfo_reflection_;
  delete PBContractInfo::default_instance_;
  delete PBContractInfo_reflection_;
  delete PBContractInfoList::default_instance_;
  delete PBContractInfoList_reflection_;
  delete PBBankOpRequest::default_instance_;
  delete PBBankOpRequest_reflection_;
  delete PBBankOpResult::default_instance_;
  delete PBBankOpResult_reflection_;
  delete PBBankInfo::default_instance_;
  delete PBBankInfo_reflection_;
  delete PBUserAccountInfo::default_instance_;
  delete PBUserAccountInfo_reflection_;
  delete PBPositionCompare::default_instance_;
  delete PBPositionCompare_reflection_;
  delete PBPositionCompareList::default_instance_;
  delete PBPositionCompareList_reflection_;
  delete PBValuationContract::default_instance_;
  delete PBValuationContract_reflection_;
  delete PBValuationRisk::default_instance_;
  delete PBValuationRisk_reflection_;
  delete PBPositionPnL::default_instance_;
  delete PBPositionPnL_reflection_;
}

void protobuf_AddDesc_businessobj_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Micro::Future::Message::protobuf_AddDesc_commondefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021businessobj.proto\022\035Micro.Future.Messag"
    "e.Business\032\022commondefine.proto\"2\n\014PBInst"
    "rument\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 \001"
    "(\t\"\205\001\n\020PBInstrumentList\0220\n\006header\030\001 \001(\0132"
    " .Micro.Future.Message.DataHeader\022\?\n\nins"
    "trument\030\002 \003(\0132+.Micro.Future.Message.Bus"
    "iness.PBInstrument\"\233\004\n\014PBMarketData\0220\n\006h"
    "eader\030\001 \001(\0132 .Micro.Future.Message.DataH"
    "eader\022\020\n\010exchange\030\002 \001(\t\022\020\n\010contract\030\003 \001("
    "\t\022\025\n\rpreCloseValue\030\004 \001(\001\022\021\n\topenValue\030\005 "
    "\001(\001\022\020\n\010turnover\030\006 \001(\001\022\016\n\006volume\030\007 \001(\005\022\021\n"
    "\thighValue\030\010 \001(\001\022\020\n\010lowValue\030\t \001(\001\022\022\n\nma"
    "tchPrice\030\n \001(\001\022\020\n\010askPrice\030\013 \003(\001\022\021\n\taskV"
    "olume\030\014 \003(\005\022\020\n\010bidPrice\030\r \003(\001\022\021\n\tbidVolu"
    "me\030\016 \003(\005\022\026\n\016preSettlePrice\030\017 \001(\001\022\023\n\013pric"
    "eChange\030\020 \001(\001\022\023\n\013settlePrice\030\021 \001(\001\022\021\n\thi"
    "ghLimit\030\022 \001(\001\022\020\n\010lowLimit\030\023 \001(\001\022\027\n\017preOp"
    "enInterest\030\024 \001(\001\022\024\n\014openInterest\030\025 \001(\001\022\024"
    "\n\014averagePrice\030\026 \001(\001\022\022\n\nupdateTime\030\027 \001(\005"
    "\022\022\n\ntradingDay\030\030 \001(\005\022\022\n\ncloseValue\030\031 \001(\001"
    "\"\205\001\n\020PBMarketDataList\0220\n\006header\030\001 \001(\0132 ."
    "Micro.Future.Message.DataHeader\022\?\n\nmarke"
    "tData\030\002 \003(\0132+.Micro.Future.Message.Busin"
    "ess.PBMarketData\"I\n\017PBHedgeContract\022\020\n\010e"
    "xchange\030\001 \001(\t\022\020\n\010contract\030\002 \001(\t\022\022\n\nunder"
    "lying\030\003 \001(\t\"\342\001\n\013PBPortfolio\0220\n\006header\030\001 "
    "\001(\0132 .Micro.Future.Message.DataHeader\022\014\n"
    "\004name\030\002 \001(\t\022\022\n\nhedgeDelay\030\003 \001(\005\022\021\n\tthres"
    "hold\030\004 \001(\001\022\017\n\007hedging\030\005 \001(\010\022\023\n\013hedgeVolu"
    "me\030\006 \001(\005\022F\n\016hedgeContracts\030\007 \003(\0132..Micro"
    ".Future.Message.Business.PBHedgeContract"
    "\"\202\001\n\017PBPortfolioList\0220\n\006header\030\001 \001(\0132 .M"
    "icro.Future.Message.DataHeader\022=\n\tportfo"
    "lio\030\002 \003(\0132*.Micro.Future.Message.Busines"
    "s.PBPortfolio\"\253\001\n\rPBPricingData\0220\n\006heade"
    "r\030\001 \001(\0132 .Micro.Future.Message.DataHeade"
    "r\022\020\n\010exchange\030\002 \001(\t\022\020\n\010contract\030\003 \001(\t\022\020\n"
    "\010askPrice\030\004 \001(\001\022\020\n\010bidPrice\030\005 \001(\001\022\017\n\007ask"
    "Size\030\006 \001(\005\022\017\n\007bidSize\030\007 \001(\005\"\210\001\n\021PBPricin"
    "gDataList\022A\n\013pricingData\030\001 \003(\0132,.Micro.F"
    "uture.Message.Business.PBPricingData\0220\n\006"
    "header\030\002 \001(\0132 .Micro.Future.Message.Data"
    "Header\"Z\n\022PBOptionMarketData\022\020\n\010askPrice"
    "\030\001 \001(\001\022\020\n\010bidPrice\030\002 \001(\001\022\017\n\007askSize\030\003 \001("
    "\005\022\017\n\007bidSize\030\004 \001(\005\"C\n\023PBImpliedVolatilit"
    "y\022\025\n\raskVolatility\030\001 \001(\001\022\025\n\rbidVolatilit"
    "y\030\002 \001(\001\"\341\001\n\014PBOptionData\022\020\n\010askPrice\030\001 \001"
    "(\001\022\020\n\010bidPrice\030\002 \001(\001\022\017\n\007askSize\030\003 \001(\005\022\017\n"
    "\007bidSize\030\004 \001(\005\022\025\n\raskVolatility\030\005 \001(\001\022\025\n"
    "\rbidVolatility\030\006 \001(\001\022\025\n\rmidVolatility\030\007 "
    "\001(\001\022\r\n\005delta\030\010 \001(\001\022\r\n\005theta\030\t \001(\001\022\r\n\005gam"
    "ma\030\n \001(\001\022\014\n\004vega\030\013 \001(\001\022\013\n\003rho\030\014 \001(\001\"\313\001\n\022"
    "PBWingsModelReturn\022\r\n\005f_atm\030\001 \001(\001\022\r\n\005f_r"
    "ef\030\002 \001(\001\022\r\n\005f_syn\030\003 \001(\001\022\020\n\010vol_curr\030\005 \001("
    "\001\022\027\n\017vol_curr_offset\030\006 \001(\001\022\022\n\nslope_curr"
    "\030\007 \001(\001\022\031\n\021slope_curr_offset\030\010 \001(\001\022\n\n\002x0\030"
    "\t \001(\001\022\n\n\002x1\030\013 \001(\001\022\n\n\002x2\030\r \001(\001\022\n\n\002x3\030\017 \001("
    "\001\"\312\003\n\031PBTradingDeskOptionParams\0220\n\006heade"
    "r\030\001 \001(\0132 .Micro.Future.Message.DataHeade"
    "r\022\020\n\010exchange\030\002 \001(\t\022\020\n\010contract\030\003 \001(\t\022E\n"
    "\nmarketData\030\004 \001(\01321.Micro.Future.Message"
    ".Business.PBOptionMarketData\022F\n\nimpliedV"
    "ol\030\005 \001(\01322.Micro.Future.Message.Business"
    ".PBImpliedVolatility\022=\n\010theoData\030\006 \001(\0132+"
    ".Micro.Future.Message.Business.PBOptionD"
    "ata\022F\n\013wingsReturn\030\007 \001(\01321.Micro.Future."
    "Message.Business.PBWingsModelReturn\022A\n\014t"
    "heoDataTemp\030\010 \001(\0132+.Micro.Future.Message"
    ".Business.PBOptionData\"W\n\021PBPricingContr"
    "act\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 \001(\t\022"
    "\016\n\006weight\030\003 \001(\001\022\016\n\006adjust\030\004 \001(\001\"\214\006\n\nPBSt"
    "rategy\0220\n\006header\030\001 \001(\0132 .Micro.Future.Me"
    "ssage.DataHeader\022\020\n\010exchange\030\002 \001(\t\022\020\n\010co"
    "ntract\030\003 \001(\t\022\022\n\nunderlying\030\004 \001(\t\022\016\n\006symb"
    "ol\030\005 \001(\t\022\017\n\007hedging\030\006 \001(\010\022\022\n\nbidEnabled\030"
    "\007 \001(\010\022\022\n\naskEnabled\030\010 \001(\010\022\r\n\005bidQV\030\t \001(\005"
    "\022\r\n\005askQV\030\n \001(\005\022\r\n\005depth\030\013 \001(\005\022J\n\020pricin"
    "gContracts\030\014 \003(\01320.Micro.Future.Message."
    "Business.PBPricingContract\022\024\n\014pricingMod"
    "el\030\r \001(\t\022F\n\014ivmContracts\030\016 \003(\01320.Micro.F"
    "uture.Message.Business.PBPricingContract"
    "\022\017\n\007ivModel\030\017 \001(\t\022F\n\014volContracts\030\020 \003(\0132"
    "0.Micro.Future.Message.Business.PBPricin"
    "gContract\022\020\n\010volModel\030\021 \001(\t\022\024\n\014baseExcha"
    "nge\030\022 \001(\t\022\024\n\014baseContract\030\023 \001(\t\022\021\n\tportf"
    "olio\030\024 \001(\t\022\024\n\014maxAutoTrade\030\025 \001(\005\022\022\n\nbidC"
    "ounter\030\026 \001(\005\022\022\n\naskCounter\030\027 \001(\005\022\023\n\013bidN"
    "otCross\030\030 \001(\010\022\021\n\tcloseMode\030\031 \001(\010\022\031\n\021limi"
    "tOrderCounter\030\032 \001(\005\022\013\n\003tif\030\033 \001(\005\022\017\n\007volC"
    "ond\030\034 \001(\005\022\024\n\014tickSizeMult\030\035 \001(\005\022\025\n\rmaxLi"
    "mitOrder\030\036 \001(\005\"\177\n\016PBStrategyList\0220\n\006head"
    "er\030\001 \001(\0132 .Micro.Future.Message.DataHead"
    "er\022;\n\010strategy\030\002 \003(\0132).Micro.Future.Mess"
    "age.Business.PBStrategy\"\333\001\n\006PBRisk\0220\n\006he"
    "ader\030\001 \001(\0132 .Micro.Future.Message.DataHe"
    "ader\022\020\n\010exchange\030\002 \001(\t\022\020\n\010contract\030\003 \001(\t"
    "\022\022\n\nunderlying\030\004 \001(\t\022\020\n\010position\030\005 \001(\005\022\r"
    "\n\005delta\030\006 \001(\001\022\r\n\005theta\030\007 \001(\001\022\r\n\005gamma\030\010 "
    "\001(\001\022\014\n\004vega\030\t \001(\001\022\013\n\003rho\030\n \001(\001\022\r\n\005price\030"
    "\013 \001(\001\"s\n\nPBRiskList\0220\n\006header\030\001 \001(\0132 .Mi"
    "cro.Future.Message.DataHeader\0223\n\004risk\030\002 "
    "\003(\0132%.Micro.Future.Message.Business.PBRi"
    "sk\"V\n\017PBContractParam\022\020\n\010exchange\030\001 \001(\t\022"
    "\020\n\010contract\030\002 \001(\t\022\020\n\010depthVol\030\003 \001(\005\022\r\n\005g"
    "amma\030\004 \001(\001\"\207\001\n\023PBContractParamList\0220\n\006he"
    "ader\030\001 \001(\0132 .Micro.Future.Message.DataHe"
    "ader\022>\n\006params\030\002 \003(\0132..Micro.Future.Mess"
    "age.Business.PBContractParam\"F\n\016PBOTCUse"
    "rParam\022\020\n\010exchange\030\001 \001(\t\022\020\n\010contract\030\002 \001"
    "(\t\022\020\n\010quantity\030\003 \001(\001\"\205\001\n\022PBOTCUserParamL"
    "ist\0220\n\006header\030\001 \001(\0132 .Micro.Future.Messa"
    "ge.DataHeader\022=\n\006params\030\002 \003(\0132-.Micro.Fu"
    "ture.Message.Business.PBOTCUserParam\"\230\002\n"
    "\016PBOrderRequest\0220\n\006header\030\001 \001(\0132 .Micro."
    "Future.Message.DataHeader\022\017\n\007orderID\030\002 \001"
    "(\004\022\022\n\norderSysID\030\003 \001(\004\022\020\n\010exchange\030\004 \001(\t"
    "\022\020\n\010contract\030\005 \001(\t\022\022\n\nlimitPrice\030\006 \001(\001\022\016"
    "\n\006volume\030\007 \001(\005\022\020\n\010execType\030\010 \001(\005\022\013\n\003tif\030"
    "\t \001(\005\022\021\n\tdirection\030\n \001(\005\022\021\n\topenclose\030\013 "
    "\001(\005\022\021\n\tportfolio\030\014 \001(\t\022\017\n\007volCond\030\r \001(\005\""
    "\327\004\n\013PBOrderInfo\0220\n\006header\030\001 \001(\0132 .Micro."
    "Future.Message.DataHeader\022\017\n\007orderID\030\002 \001"
    "(\004\022\022\n\norderSysID\030\003 \001(\004\022\020\n\010brokerID\030\004 \001(\t"
    "\022\022\n\ninvestorID\030\005 \001(\t\022\020\n\010exchange\030\006 \001(\t\022\020"
    "\n\010contract\030\007 \001(\t\022\020\n\010execType\030\010 \001(\005\022\013\n\003ti"
    "f\030\t \001(\005\022\023\n\013tradingType\030\n \001(\005\022\021\n\tdirectio"
    "n\030\013 \001(\005\022\022\n\nlimitPrice\030\014 \001(\001\022\021\n\tstopPrice"
    "\030\r \001(\001\022\023\n\013orderStatus\030\016 \001(\005\022\021\n\torderType"
    "\030\017 \001(\005\022\016\n\006volume\030\020 \001(\005\022\022\n\ninsertTime\030\021 \001"
    "(\t\022\022\n\nupdateTime\030\022 \001(\t\022\022\n\ncancelTime\030\023 \001"
    "(\t\022\024\n\014volumeTraded\030\024 \001(\005\022\024\n\014volumeRemain"
    "\030\025 \001(\005\022\027\n\017volumeCondition\030\026 \001(\005\022\022\n\ntradi"
    "ngDay\030\027 \001(\005\022\016\n\006active\030\030 \001(\010\022\021\n\topenclose"
    "\030\031 \001(\005\022\017\n\007message\030\032 \001(\014\022\021\n\tsessionID\030\033 \001"
    "(\005\022\021\n\tportfolio\030\034 \001(\t\022\022\n\ninsertDate\030\035 \001("
    "\t\"\207\003\n\013PBTradeInfo\0220\n\006header\030\001 \001(\0132 .Micr"
    "o.Future.Message.DataHeader\022\017\n\007tradeID\030\002"
    " \001(\004\022\021\n\tdirection\030\003 \001(\005\022\021\n\topenclose\030\004 \001"
    "(\005\022\022\n\norderSysID\030\005 \001(\004\022\017\n\007orderID\030\006 \001(\004\022"
    "\r\n\005price\030\007 \001(\001\022\016\n\006volume\030\010 \001(\005\022\020\n\010broker"
    "ID\030\t \001(\t\022\022\n\ninvestorID\030\n \001(\t\022\020\n\010exchange"
    "\030\013 \001(\t\022\020\n\010contract\030\014 \001(\t\022\016\n\006userID\030\r \001(\t"
    "\022\021\n\ttradeDate\030\016 \001(\t\022\021\n\ttradeTime\030\017 \001(\t\022\021"
    "\n\ttradeType\030\020 \001(\005\022\021\n\thedgeFlag\030\021 \001(\005\022\022\n\n"
    "commission\030\022 \001(\001\022\021\n\tportfolio\030\023 \001(\t\"\250\004\n\n"
    "PBPosition\0220\n\006header\030\001 \001(\0132 .Micro.Futur"
    "e.Message.DataHeader\022\020\n\010exchange\030\002 \001(\t\022\020"
    "\n\010contract\030\003 \001(\t\022\021\n\tdirection\030\004 \001(\005\022\022\n\nt"
    "dPosition\030\005 \001(\005\022\022\n\nydPosition\030\006 \001(\005\022\030\n\020p"
    "ositionDateFlag\030\007 \001(\005\022\022\n\nopenVolume\030\010 \001("
    "\005\022\023\n\013closeVolume\030\t \001(\005\022\022\n\nopenAmount\030\n \001"
    "(\001\022\023\n\013closeAmount\030\013 \001(\001\022\016\n\006tdCost\030\014 \001(\001\022"
    "\016\n\006ydCost\030\r \001(\001\022\020\n\010openCost\030\016 \001(\001\022\023\n\013clo"
    "seProfit\030\017 \001(\001\022\021\n\tuseMargin\030\020 \001(\001\022\021\n\thed"
    "geFlag\030\021 \001(\005\022\021\n\tportfolio\030\023 \001(\t\022\016\n\006profi"
    "t\030\024 \001(\001\022\030\n\020longFrozenVolume\030\025 \001(\005\022\031\n\021sho"
    "rtFrozenVolume\030\026 \001(\005\022\030\n\020longFrozenAmount"
    "\030\027 \001(\001\022\031\n\021shortFrozenAmount\030\030 \001(\001\022\021\n\tlas"
    "tPrice\030\031 \001(\001\022\020\n\010avgPrice\030\032 \001(\001\"\345\005\n\rPBAcc"
    "ountInfo\0220\n\006header\030\001 \001(\0132 .Micro.Future."
    "Message.DataHeader\022\020\n\010brokerID\030\002 \001(\t\022\021\n\t"
    "accountID\030\003 \001(\t\022\023\n\013preMortgage\030\004 \001(\001\022\021\n\t"
    "preCredit\030\005 \001(\001\022\022\n\npreDeposit\030\006 \001(\001\022\022\n\np"
    "reBalance\030\007 \001(\001\022\021\n\tpreMargin\030\010 \001(\001\022\024\n\014in"
    "terestBase\030\t \001(\001\022\020\n\010interest\030\n \001(\001\022\017\n\007de"
    "posit\030\013 \001(\001\022\020\n\010withdraw\030\014 \001(\001\022\024\n\014frozenM"
    "argin\030\r \001(\001\022\022\n\nfrozenCash\030\016 \001(\001\022\030\n\020froze"
    "nCommission\030\017 \001(\001\022\022\n\ncurrMargin\030\020 \001(\001\022\016\n"
    "\006cashIn\030\021 \001(\001\022\022\n\ncommission\030\022 \001(\001\022\023\n\013clo"
    "seProfit\030\023 \001(\001\022\026\n\016positionProfit\030\024 \001(\001\022\017"
    "\n\007balance\030\025 \001(\001\022\021\n\tavailable\030\026 \001(\001\022\025\n\rwi"
    "thdrawQuota\030\027 \001(\001\022\017\n\007reserve\030\030 \001(\001\022\022\n\ntr"
    "adingDay\030\031 \001(\005\022\024\n\014settlementID\030\032 \001(\005\022\016\n\006"
    "credit\030\033 \001(\001\022\020\n\010mortgage\030\034 \001(\001\022\026\n\016exchan"
    "geMargin\030\035 \001(\001\022\026\n\016deliveryMargin\030\036 \001(\001\022\036"
    "\n\026exchangeDeliveryMargin\030\037 \001(\001\022\026\n\016reserv"
    "eBalance\030  \001(\001\022\023\n\013userBalance\030! \001(\001\022\021\n\tr"
    "iskRatio\030\" \001(\001\"r\n\014PBMarketInfo\0220\n\006header"
    "\030\001 \001(\0132 .Micro.Future.Message.DataHeader"
    "\022\020\n\010exchange\030\002 \001(\t\022\014\n\004name\030\003 \001(\014\022\020\n\010prop"
    "erty\030\004 \001(\014\"\214\005\n\016PBContractInfo\022\020\n\010exchang"
    "e\030\001 \001(\t\022\020\n\010contract\030\002 \001(\t\022\014\n\004name\030\003 \001(\014\022"
    "\021\n\tproductID\030\004 \001(\t\022\023\n\013productType\030\005 \001(\005\022"
    "\024\n\014deliveryYear\030\006 \001(\005\022\025\n\rdeliveryMonth\030\007"
    " \001(\005\022\034\n\024maxMarketOrderVolume\030\010 \001(\005\022\034\n\024mi"
    "nMarketOrderVolume\030\t \001(\005\022\033\n\023maxLimitOrde"
    "rVolume\030\n \001(\005\022\033\n\023minLimitOrderVolume\030\013 \001"
    "(\005\022\026\n\016volumeMultiple\030\014 \001(\005\022\021\n\tpriceTick\030"
    "\r \001(\001\022\022\n\ncreateDate\030\016 \001(\t\022\020\n\010openDate\030\017 "
    "\001(\t\022\022\n\nexpireDate\030\020 \001(\t\022\026\n\016startDelivDat"
    "e\030\021 \001(\t\022\024\n\014endDelivDate\030\022 \001(\t\022\021\n\tlifePha"
    "se\030\023 \001(\005\022\021\n\tisTrading\030\024 \001(\010\022\024\n\014positionT"
    "ype\030\025 \001(\005\022\030\n\020positionDateType\030\026 \001(\005\022\027\n\017l"
    "ongMarginRatio\030\027 \001(\001\022\030\n\020shortMarginRatio"
    "\030\030 \001(\001\022\032\n\022underlyingExchange\030\031 \001(\t\022\032\n\022un"
    "derlyingContract\030\032 \001(\t\022\024\n\014contractType\030\033"
    " \001(\005\022\023\n\013strikePrice\030\034 \001(\001\"\213\001\n\022PBContract"
    "InfoList\0220\n\006header\030\001 \001(\0132 .Micro.Future."
    "Message.DataHeader\022C\n\014contractInfo\030\002 \003(\013"
    "2-.Micro.Future.Message.Business.PBContr"
    "actInfo\"\214\002\n\017PBBankOpRequest\0220\n\006header\030\001 "
    "\001(\0132 .Micro.Future.Message.DataHeader\022\016\n"
    "\006bankID\030\002 \001(\t\022\024\n\014bankBranchID\030\003 \001(\t\022\024\n\014b"
    "ankPassword\030\004 \001(\t\022\023\n\013bankAccount\030\005 \001(\t\022\020"
    "\n\010brokerID\030\006 \001(\t\022\026\n\016brokerBranchID\030\007 \001(\t"
    "\022\021\n\taccountID\030\010 \001(\t\022\020\n\010password\030\t \001(\t\022\022\n"
    "\ncurrencyID\030\n \001(\t\022\023\n\013tradeAmount\030\013 \001(\001\"\210"
    "\004\n\016PBBankOpResult\0220\n\006header\030\001 \001(\0132 .Micr"
    "o.Future.Message.DataHeader\022\016\n\006bankID\030\002 "
    "\001(\t\022\024\n\014bankBranchID\030\003 \001(\t\022\024\n\014bankPasswor"
    "d\030\004 \001(\t\022\023\n\013bankAccount\030\005 \001(\t\022\020\n\010brokerID"
    "\030\006 \001(\t\022\026\n\016brokerBranchID\030\007 \001(\t\022\021\n\taccoun"
    "tID\030\010 \001(\t\022\020\n\010password\030\t \001(\t\022\022\n\ncurrencyI"
    "D\030\n \001(\t\022\023\n\013tradeAmount\030\013 \001(\001\022\021\n\tserialNu"
    "m\030\014 \001(\t\022\022\n\ntradingDay\030\r \001(\005\022\021\n\ttradeDate"
    "\030\016 \001(\t\022\021\n\ttradeTime\030\017 \001(\t\022\021\n\ttradeCode\030\020"
    " \001(\t\022\022\n\nbankSerial\030\021 \001(\t\022\025\n\rfutureAccTyp"
    "e\030\022 \001(\005\022\023\n\013bankAccType\030\023 \001(\005\022\024\n\014futureSe"
    "rial\030\024 \001(\t\022\017\n\007custFee\030\025 \001(\001\022\021\n\tbrokerFee"
    "\030\026 \001(\001\022\017\n\007errorID\030\027 \001(\005\022\020\n\010errorMsg\030\030 \001("
    "\014\"n\n\nPBBankInfo\0220\n\006header\030\001 \001(\0132 .Micro."
    "Future.Message.DataHeader\022\016\n\006bankID\030\002 \001("
    "\t\022\020\n\010branchID\030\003 \001(\t\022\014\n\004name\030\004 \001(\014\"\320\002\n\021PB"
    "UserAccountInfo\0220\n\006header\030\001 \001(\0132 .Micro."
    "Future.Message.DataHeader\022\016\n\006bankID\030\002 \001("
    "\t\022\024\n\014bankBranchID\030\003 \001(\t\022\023\n\013bankAccount\030\004"
    " \001(\t\022\020\n\010brokerID\030\005 \001(\t\022\026\n\016brokerBranchID"
    "\030\006 \001(\t\022\021\n\taccountID\030\007 \001(\t\022\020\n\010idCardNo\030\010 "
    "\001(\t\022\024\n\014customerName\030\t \001(\014\022\022\n\ncurrencyID\030"
    "\n \001(\t\022\020\n\010custType\030\013 \001(\005\022\023\n\013bankAccType\030\014"
    " \001(\005\022\025\n\rbankUseAmount\030\r \001(\001\022\027\n\017bankFetch"
    "Amount\030\016 \001(\001\"t\n\021PBPositionCompare\022\020\n\010con"
    "tract\030\001 \001(\t\022\021\n\tportfolio\030\002 \001(\t\022\021\n\tdirect"
    "ion\030\003 \001(\005\022\022\n\ndbPosition\030\004 \001(\005\022\023\n\013sysPosi"
    "tion\030\005 \001(\005\"\216\001\n\025PBPositionCompareList\0220\n\006"
    "header\030\001 \001(\0132 .Micro.Future.Message.Data"
    "Header\022C\n\tpositions\030\002 \003(\01320.Micro.Future"
    ".Message.Business.PBPositionCompare\"\\\n\023P"
    "BValuationContract\022\020\n\010exchange\030\001 \001(\t\022\020\n\010"
    "contract\030\002 \001(\t\022\r\n\005price\030\003 \001(\001\022\022\n\nvolatil"
    "ity\030\004 \001(\001\"\307\001\n\017PBValuationRisk\0220\n\006header\030"
    "\001 \001(\0132 .Micro.Future.Message.DataHeader\022"
    "I\n\rcontractValue\030\002 \003(\01322.Micro.Future.Me"
    "ssage.Business.PBValuationContract\022\022\n\nda"
    "ysRemain\030\003 \001(\005\022\020\n\010interest\030\004 \001(\001\022\021\n\tport"
    "folio\030\005 \001(\t\"\346\002\n\rPBPositionPnL\0220\n\006header\030"
    "\001 \001(\0132 .Micro.Future.Message.DataHeader\022"
    "\020\n\010exchange\030\002 \001(\t\022\020\n\010contract\030\003 \001(\t\022\021\n\tp"
    "ortfolio\030\004 \001(\t\022\025\n\rtdBuyPosition\030\005 \001(\005\022\025\n"
    "\rydBuyPosition\030\006 \001(\005\022\026\n\016tdSellPosition\030\007"
    " \001(\005\022\026\n\016ydSellPosition\030\010 \001(\005\022\023\n\013tdBuyAmo"
    "unt\030\t \001(\001\022\024\n\014tdSellAmount\030\n \001(\001\022\021\n\tbuyPr"
    "ofit\030\013 \001(\001\022\022\n\nsellProfit\030\014 \001(\001\022\021\n\tlastPr"
    "ice\030\r \001(\001\022\023\n\013avgBuyPrice\030\016 \001(\001\022\024\n\014avgSel"
    "lPrice\030\017 \001(\001b\006proto3", 10180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "businessobj.proto", &protobuf_RegisterTypes);
  PBInstrument::default_instance_ = new PBInstrument();
  PBInstrumentList::default_instance_ = new PBInstrumentList();
  PBMarketData::default_instance_ = new PBMarketData();
  PBMarketDataList::default_instance_ = new PBMarketDataList();
  PBHedgeContract::default_instance_ = new PBHedgeContract();
  PBPortfolio::default_instance_ = new PBPortfolio();
  PBPortfolioList::default_instance_ = new PBPortfolioList();
  PBPricingData::default_instance_ = new PBPricingData();
  PBPricingDataList::default_instance_ = new PBPricingDataList();
  PBOptionMarketData::default_instance_ = new PBOptionMarketData();
  PBImpliedVolatility::default_instance_ = new PBImpliedVolatility();
  PBOptionData::default_instance_ = new PBOptionData();
  PBWingsModelReturn::default_instance_ = new PBWingsModelReturn();
  PBTradingDeskOptionParams::default_instance_ = new PBTradingDeskOptionParams();
  PBPricingContract::default_instance_ = new PBPricingContract();
  PBStrategy::default_instance_ = new PBStrategy();
  PBStrategyList::default_instance_ = new PBStrategyList();
  PBRisk::default_instance_ = new PBRisk();
  PBRiskList::default_instance_ = new PBRiskList();
  PBContractParam::default_instance_ = new PBContractParam();
  PBContractParamList::default_instance_ = new PBContractParamList();
  PBOTCUserParam::default_instance_ = new PBOTCUserParam();
  PBOTCUserParamList::default_instance_ = new PBOTCUserParamList();
  PBOrderRequest::default_instance_ = new PBOrderRequest();
  PBOrderInfo::default_instance_ = new PBOrderInfo();
  PBTradeInfo::default_instance_ = new PBTradeInfo();
  PBPosition::default_instance_ = new PBPosition();
  PBAccountInfo::default_instance_ = new PBAccountInfo();
  PBMarketInfo::default_instance_ = new PBMarketInfo();
  PBContractInfo::default_instance_ = new PBContractInfo();
  PBContractInfoList::default_instance_ = new PBContractInfoList();
  PBBankOpRequest::default_instance_ = new PBBankOpRequest();
  PBBankOpResult::default_instance_ = new PBBankOpResult();
  PBBankInfo::default_instance_ = new PBBankInfo();
  PBUserAccountInfo::default_instance_ = new PBUserAccountInfo();
  PBPositionCompare::default_instance_ = new PBPositionCompare();
  PBPositionCompareList::default_instance_ = new PBPositionCompareList();
  PBValuationContract::default_instance_ = new PBValuationContract();
  PBValuationRisk::default_instance_ = new PBValuationRisk();
  PBPositionPnL::default_instance_ = new PBPositionPnL();
  PBInstrument::default_instance_->InitAsDefaultInstance();
  PBInstrumentList::default_instance_->InitAsDefaultInstance();
  PBMarketData::default_instance_->InitAsDefaultInstance();
  PBMarketDataList::default_instance_->InitAsDefaultInstance();
  PBHedgeContract::default_instance_->InitAsDefaultInstance();
  PBPortfolio::default_instance_->InitAsDefaultInstance();
  PBPortfolioList::default_instance_->InitAsDefaultInstance();
  PBPricingData::default_instance_->InitAsDefaultInstance();
  PBPricingDataList::default_instance_->InitAsDefaultInstance();
  PBOptionMarketData::default_instance_->InitAsDefaultInstance();
  PBImpliedVolatility::default_instance_->InitAsDefaultInstance();
  PBOptionData::default_instance_->InitAsDefaultInstance();
  PBWingsModelReturn::default_instance_->InitAsDefaultInstance();
  PBTradingDeskOptionParams::default_instance_->InitAsDefaultInstance();
  PBPricingContract::default_instance_->InitAsDefaultInstance();
  PBStrategy::default_instance_->InitAsDefaultInstance();
  PBStrategyList::default_instance_->InitAsDefaultInstance();
  PBRisk::default_instance_->InitAsDefaultInstance();
  PBRiskList::default_instance_->InitAsDefaultInstance();
  PBContractParam::default_instance_->InitAsDefaultInstance();
  PBContractParamList::default_instance_->InitAsDefaultInstance();
  PBOTCUserParam::default_instance_->InitAsDefaultInstance();
  PBOTCUserParamList::default_instance_->InitAsDefaultInstance();
  PBOrderRequest::default_instance_->InitAsDefaultInstance();
  PBOrderInfo::default_instance_->InitAsDefaultInstance();
  PBTradeInfo::default_instance_->InitAsDefaultInstance();
  PBPosition::default_instance_->InitAsDefaultInstance();
  PBAccountInfo::default_instance_->InitAsDefaultInstance();
  PBMarketInfo::default_instance_->InitAsDefaultInstance();
  PBContractInfo::default_instance_->InitAsDefaultInstance();
  PBContractInfoList::default_instance_->InitAsDefaultInstance();
  PBBankOpRequest::default_instance_->InitAsDefaultInstance();
  PBBankOpResult::default_instance_->InitAsDefaultInstance();
  PBBankInfo::default_instance_->InitAsDefaultInstance();
  PBUserAccountInfo::default_instance_->InitAsDefaultInstance();
  PBPositionCompare::default_instance_->InitAsDefaultInstance();
  PBPositionCompareList::default_instance_->InitAsDefaultInstance();
  PBValuationContract::default_instance_->InitAsDefaultInstance();
  PBValuationRisk::default_instance_->InitAsDefaultInstance();
  PBPositionPnL::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_businessobj_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_businessobj_2eproto {
  StaticDescriptorInitializer_businessobj_2eproto() {
    protobuf_AddDesc_businessobj_2eproto();
  }
} static_descriptor_initializer_businessobj_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBInstrument::kExchangeFieldNumber;
const int PBInstrument::kContractFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBInstrument::PBInstrument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBInstrument)
}

void PBInstrument::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBInstrument::PBInstrument(const PBInstrument& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBInstrument)
}

void PBInstrument::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBInstrument::~PBInstrument() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBInstrument)
  SharedDtor();
}

void PBInstrument::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBInstrument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBInstrument::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBInstrument_descriptor_;
}

const PBInstrument& PBInstrument::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBInstrument* PBInstrument::default_instance_ = NULL;

PBInstrument* PBInstrument::New(::google::protobuf::Arena* arena) const {
  PBInstrument* n = new PBInstrument;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBInstrument::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBInstrument)
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PBInstrument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBInstrument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBInstrument.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBInstrument.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBInstrument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBInstrument)
  return false;
#undef DO_
}

void PBInstrument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBInstrument)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBInstrument.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBInstrument.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBInstrument)
}

::google::protobuf::uint8* PBInstrument::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBInstrument)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBInstrument.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBInstrument.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBInstrument)
  return target;
}

int PBInstrument::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBInstrument)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBInstrument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBInstrument)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBInstrument* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBInstrument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBInstrument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBInstrument)
    MergeFrom(*source);
  }
}

void PBInstrument::MergeFrom(const PBInstrument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBInstrument)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
}

void PBInstrument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBInstrument::CopyFrom(const PBInstrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBInstrument::IsInitialized() const {

  return true;
}

void PBInstrument::Swap(PBInstrument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBInstrument::InternalSwap(PBInstrument* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBInstrument::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBInstrument_descriptor_;
  metadata.reflection = PBInstrument_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBInstrument

// optional string exchange = 1;
void PBInstrument::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBInstrument::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBInstrument.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBInstrument::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBInstrument.exchange)
}
 void PBInstrument::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBInstrument.exchange)
}
 void PBInstrument::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBInstrument.exchange)
}
 ::std::string* PBInstrument::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBInstrument.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBInstrument::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBInstrument.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBInstrument::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBInstrument.exchange)
}

// optional string contract = 2;
void PBInstrument::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBInstrument::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBInstrument.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBInstrument::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBInstrument.contract)
}
 void PBInstrument::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBInstrument.contract)
}
 void PBInstrument::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBInstrument.contract)
}
 ::std::string* PBInstrument::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBInstrument.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBInstrument::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBInstrument.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBInstrument::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBInstrument.contract)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBInstrumentList::kHeaderFieldNumber;
const int PBInstrumentList::kInstrumentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBInstrumentList::PBInstrumentList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBInstrumentList)
}

void PBInstrumentList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBInstrumentList::PBInstrumentList(const PBInstrumentList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBInstrumentList)
}

void PBInstrumentList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBInstrumentList::~PBInstrumentList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBInstrumentList)
  SharedDtor();
}

void PBInstrumentList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBInstrumentList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBInstrumentList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBInstrumentList_descriptor_;
}

const PBInstrumentList& PBInstrumentList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBInstrumentList* PBInstrumentList::default_instance_ = NULL;

PBInstrumentList* PBInstrumentList::New(::google::protobuf::Arena* arena) const {
  PBInstrumentList* n = new PBInstrumentList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBInstrumentList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBInstrumentList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  instrument_.Clear();
}

bool PBInstrumentList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBInstrumentList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_instrument;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBInstrument instrument = 2;
      case 2: {
        if (tag == 18) {
         parse_instrument:
          DO_(input->IncrementRecursionDepth());
         parse_loop_instrument:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_instrument()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_instrument;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBInstrumentList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBInstrumentList)
  return false;
#undef DO_
}

void PBInstrumentList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBInstrumentList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBInstrument instrument = 2;
  for (unsigned int i = 0, n = this->instrument_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->instrument(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBInstrumentList)
}

::google::protobuf::uint8* PBInstrumentList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBInstrumentList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBInstrument instrument = 2;
  for (unsigned int i = 0, n = this->instrument_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->instrument(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBInstrumentList)
  return target;
}

int PBInstrumentList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBInstrumentList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBInstrument instrument = 2;
  total_size += 1 * this->instrument_size();
  for (int i = 0; i < this->instrument_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instrument(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBInstrumentList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBInstrumentList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBInstrumentList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBInstrumentList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBInstrumentList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBInstrumentList)
    MergeFrom(*source);
  }
}

void PBInstrumentList::MergeFrom(const PBInstrumentList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBInstrumentList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  instrument_.MergeFrom(from.instrument_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBInstrumentList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBInstrumentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBInstrumentList::CopyFrom(const PBInstrumentList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBInstrumentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBInstrumentList::IsInitialized() const {

  return true;
}

void PBInstrumentList::Swap(PBInstrumentList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBInstrumentList::InternalSwap(PBInstrumentList* other) {
  std::swap(header_, other->header_);
  instrument_.UnsafeArenaSwap(&other->instrument_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBInstrumentList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBInstrumentList_descriptor_;
  metadata.reflection = PBInstrumentList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBInstrumentList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBInstrumentList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBInstrumentList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBInstrumentList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBInstrumentList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBInstrumentList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBInstrumentList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBInstrumentList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBInstrumentList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBInstrumentList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBInstrumentList.header)
}

// repeated .Micro.Future.Message.Business.PBInstrument instrument = 2;
int PBInstrumentList::instrument_size() const {
  return instrument_.size();
}
void PBInstrumentList::clear_instrument() {
  instrument_.Clear();
}
const ::Micro::Future::Message::Business::PBInstrument& PBInstrumentList::instrument(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBInstrumentList.instrument)
  return instrument_.Get(index);
}
::Micro::Future::Message::Business::PBInstrument* PBInstrumentList::mutable_instrument(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBInstrumentList.instrument)
  return instrument_.Mutable(index);
}
::Micro::Future::Message::Business::PBInstrument* PBInstrumentList::add_instrument() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBInstrumentList.instrument)
  return instrument_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBInstrument >*
PBInstrumentList::mutable_instrument() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBInstrumentList.instrument)
  return &instrument_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBInstrument >&
PBInstrumentList::instrument() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBInstrumentList.instrument)
  return instrument_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMarketData::kHeaderFieldNumber;
const int PBMarketData::kExchangeFieldNumber;
const int PBMarketData::kContractFieldNumber;
const int PBMarketData::kPreCloseValueFieldNumber;
const int PBMarketData::kOpenValueFieldNumber;
const int PBMarketData::kTurnoverFieldNumber;
const int PBMarketData::kVolumeFieldNumber;
const int PBMarketData::kHighValueFieldNumber;
const int PBMarketData::kLowValueFieldNumber;
const int PBMarketData::kMatchPriceFieldNumber;
const int PBMarketData::kAskPriceFieldNumber;
const int PBMarketData::kAskVolumeFieldNumber;
const int PBMarketData::kBidPriceFieldNumber;
const int PBMarketData::kBidVolumeFieldNumber;
const int PBMarketData::kPreSettlePriceFieldNumber;
const int PBMarketData::kPriceChangeFieldNumber;
const int PBMarketData::kSettlePriceFieldNumber;
const int PBMarketData::kHighLimitFieldNumber;
const int PBMarketData::kLowLimitFieldNumber;
const int PBMarketData::kPreOpenInterestFieldNumber;
const int PBMarketData::kOpenInterestFieldNumber;
const int PBMarketData::kAveragePriceFieldNumber;
const int PBMarketData::kUpdateTimeFieldNumber;
const int PBMarketData::kTradingDayFieldNumber;
const int PBMarketData::kCloseValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMarketData::PBMarketData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBMarketData)
}

void PBMarketData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBMarketData::PBMarketData(const PBMarketData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBMarketData)
}

void PBMarketData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preclosevalue_ = 0;
  openvalue_ = 0;
  turnover_ = 0;
  volume_ = 0;
  highvalue_ = 0;
  lowvalue_ = 0;
  matchprice_ = 0;
  presettleprice_ = 0;
  pricechange_ = 0;
  settleprice_ = 0;
  highlimit_ = 0;
  lowlimit_ = 0;
  preopeninterest_ = 0;
  openinterest_ = 0;
  averageprice_ = 0;
  updatetime_ = 0;
  tradingday_ = 0;
  closevalue_ = 0;
}

PBMarketData::~PBMarketData() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBMarketData)
  SharedDtor();
}

void PBMarketData::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBMarketData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMarketData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMarketData_descriptor_;
}

const PBMarketData& PBMarketData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBMarketData* PBMarketData::default_instance_ = NULL;

PBMarketData* PBMarketData::New(::google::protobuf::Arena* arena) const {
  PBMarketData* n = new PBMarketData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMarketData::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBMarketData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBMarketData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBMarketData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(preclosevalue_, highvalue_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_ = 0;
  ZR_(lowvalue_, matchprice_);
  presettleprice_ = 0;
  pricechange_ = 0;
  ZR_(settleprice_, averageprice_);
  updatetime_ = 0;
  tradingday_ = 0;
  closevalue_ = 0;

#undef ZR_HELPER_
#undef ZR_

  askprice_.Clear();
  askvolume_.Clear();
  bidprice_.Clear();
  bidvolume_.Clear();
}

bool PBMarketData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBMarketData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBMarketData.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBMarketData.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_preCloseValue;
        break;
      }

      // optional double preCloseValue = 4;
      case 4: {
        if (tag == 33) {
         parse_preCloseValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preclosevalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_openValue;
        break;
      }

      // optional double openValue = 5;
      case 5: {
        if (tag == 41) {
         parse_openValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_turnover;
        break;
      }

      // optional double turnover = 6;
      case 6: {
        if (tag == 49) {
         parse_turnover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_volume;
        break;
      }

      // optional int32 volume = 7;
      case 7: {
        if (tag == 56) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_highValue;
        break;
      }

      // optional double highValue = 8;
      case 8: {
        if (tag == 65) {
         parse_highValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_lowValue;
        break;
      }

      // optional double lowValue = 9;
      case 9: {
        if (tag == 73) {
         parse_lowValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_matchPrice;
        break;
      }

      // optional double matchPrice = 10;
      case 10: {
        if (tag == 81) {
         parse_matchPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &matchprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_askPrice;
        break;
      }

      // repeated double askPrice = 11;
      case 11: {
        if (tag == 90) {
         parse_askPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_askprice())));
        } else if (tag == 89) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 90, input, this->mutable_askprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_askVolume;
        break;
      }

      // repeated int32 askVolume = 12;
      case 12: {
        if (tag == 98) {
         parse_askVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_askvolume())));
        } else if (tag == 96) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98, input, this->mutable_askvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_bidPrice;
        break;
      }

      // repeated double bidPrice = 13;
      case 13: {
        if (tag == 106) {
         parse_bidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bidprice())));
        } else if (tag == 105) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 106, input, this->mutable_bidprice())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_bidVolume;
        break;
      }

      // repeated int32 bidVolume = 14;
      case 14: {
        if (tag == 114) {
         parse_bidVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bidvolume())));
        } else if (tag == 112) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114, input, this->mutable_bidvolume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_preSettlePrice;
        break;
      }

      // optional double preSettlePrice = 15;
      case 15: {
        if (tag == 121) {
         parse_preSettlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &presettleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_priceChange;
        break;
      }

      // optional double priceChange = 16;
      case 16: {
        if (tag == 129) {
         parse_priceChange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricechange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_settlePrice;
        break;
      }

      // optional double settlePrice = 17;
      case 17: {
        if (tag == 137) {
         parse_settlePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settleprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_highLimit;
        break;
      }

      // optional double highLimit = 18;
      case 18: {
        if (tag == 145) {
         parse_highLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_lowLimit;
        break;
      }

      // optional double lowLimit = 19;
      case 19: {
        if (tag == 153) {
         parse_lowLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowlimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_preOpenInterest;
        break;
      }

      // optional double preOpenInterest = 20;
      case 20: {
        if (tag == 161) {
         parse_preOpenInterest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preopeninterest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_openInterest;
        break;
      }

      // optional double openInterest = 21;
      case 21: {
        if (tag == 169) {
         parse_openInterest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_averagePrice;
        break;
      }

      // optional double averagePrice = 22;
      case 22: {
        if (tag == 177) {
         parse_averagePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &averageprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_updateTime;
        break;
      }

      // optional int32 updateTime = 23;
      case 23: {
        if (tag == 184) {
         parse_updateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatetime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_tradingDay;
        break;
      }

      // optional int32 tradingDay = 24;
      case 24: {
        if (tag == 192) {
         parse_tradingDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingday_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(201)) goto parse_closeValue;
        break;
      }

      // optional double closeValue = 25;
      case 25: {
        if (tag == 201) {
         parse_closeValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closevalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBMarketData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBMarketData)
  return false;
#undef DO_
}

void PBMarketData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBMarketData)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional double preCloseValue = 4;
  if (this->preclosevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->preclosevalue(), output);
  }

  // optional double openValue = 5;
  if (this->openvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->openvalue(), output);
  }

  // optional double turnover = 6;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->turnover(), output);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->volume(), output);
  }

  // optional double highValue = 8;
  if (this->highvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->highvalue(), output);
  }

  // optional double lowValue = 9;
  if (this->lowvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->lowvalue(), output);
  }

  // optional double matchPrice = 10;
  if (this->matchprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->matchprice(), output);
  }

  // repeated double askPrice = 11;
  if (this->askprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_askprice_cached_byte_size_);
  }
  for (int i = 0; i < this->askprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->askprice(i), output);
  }

  // repeated int32 askVolume = 12;
  if (this->askvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_askvolume_cached_byte_size_);
  }
  for (int i = 0; i < this->askvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->askvolume(i), output);
  }

  // repeated double bidPrice = 13;
  if (this->bidprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bidprice_cached_byte_size_);
  }
  for (int i = 0; i < this->bidprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->bidprice(i), output);
  }

  // repeated int32 bidVolume = 14;
  if (this->bidvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bidvolume_cached_byte_size_);
  }
  for (int i = 0; i < this->bidvolume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->bidvolume(i), output);
  }

  // optional double preSettlePrice = 15;
  if (this->presettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->presettleprice(), output);
  }

  // optional double priceChange = 16;
  if (this->pricechange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->pricechange(), output);
  }

  // optional double settlePrice = 17;
  if (this->settleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->settleprice(), output);
  }

  // optional double highLimit = 18;
  if (this->highlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->highlimit(), output);
  }

  // optional double lowLimit = 19;
  if (this->lowlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->lowlimit(), output);
  }

  // optional double preOpenInterest = 20;
  if (this->preopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->preopeninterest(), output);
  }

  // optional double openInterest = 21;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->openinterest(), output);
  }

  // optional double averagePrice = 22;
  if (this->averageprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->averageprice(), output);
  }

  // optional int32 updateTime = 23;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->updatetime(), output);
  }

  // optional int32 tradingDay = 24;
  if (this->tradingday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->tradingday(), output);
  }

  // optional double closeValue = 25;
  if (this->closevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->closevalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBMarketData)
}

::google::protobuf::uint8* PBMarketData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBMarketData)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketData.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional double preCloseValue = 4;
  if (this->preclosevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->preclosevalue(), target);
  }

  // optional double openValue = 5;
  if (this->openvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->openvalue(), target);
  }

  // optional double turnover = 6;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->turnover(), target);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->volume(), target);
  }

  // optional double highValue = 8;
  if (this->highvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->highvalue(), target);
  }

  // optional double lowValue = 9;
  if (this->lowvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->lowvalue(), target);
  }

  // optional double matchPrice = 10;
  if (this->matchprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->matchprice(), target);
  }

  // repeated double askPrice = 11;
  if (this->askprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _askprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->askprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->askprice(i), target);
  }

  // repeated int32 askVolume = 12;
  if (this->askvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _askvolume_cached_byte_size_, target);
  }
  for (int i = 0; i < this->askvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->askvolume(i), target);
  }

  // repeated double bidPrice = 13;
  if (this->bidprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bidprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bidprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bidprice(i), target);
  }

  // repeated int32 bidVolume = 14;
  if (this->bidvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bidvolume_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bidvolume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->bidvolume(i), target);
  }

  // optional double preSettlePrice = 15;
  if (this->presettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->presettleprice(), target);
  }

  // optional double priceChange = 16;
  if (this->pricechange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->pricechange(), target);
  }

  // optional double settlePrice = 17;
  if (this->settleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->settleprice(), target);
  }

  // optional double highLimit = 18;
  if (this->highlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->highlimit(), target);
  }

  // optional double lowLimit = 19;
  if (this->lowlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->lowlimit(), target);
  }

  // optional double preOpenInterest = 20;
  if (this->preopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->preopeninterest(), target);
  }

  // optional double openInterest = 21;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->openinterest(), target);
  }

  // optional double averagePrice = 22;
  if (this->averageprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->averageprice(), target);
  }

  // optional int32 updateTime = 23;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->updatetime(), target);
  }

  // optional int32 tradingDay = 24;
  if (this->tradingday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->tradingday(), target);
  }

  // optional double closeValue = 25;
  if (this->closevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->closevalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBMarketData)
  return target;
}

int PBMarketData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBMarketData)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double preCloseValue = 4;
  if (this->preclosevalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double openValue = 5;
  if (this->openvalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double turnover = 6;
  if (this->turnover() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional double highValue = 8;
  if (this->highvalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double lowValue = 9;
  if (this->lowvalue() != 0) {
    total_size += 1 + 8;
  }

  // optional double matchPrice = 10;
  if (this->matchprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double preSettlePrice = 15;
  if (this->presettleprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double priceChange = 16;
  if (this->pricechange() != 0) {
    total_size += 2 + 8;
  }

  // optional double settlePrice = 17;
  if (this->settleprice() != 0) {
    total_size += 2 + 8;
  }

  // optional double highLimit = 18;
  if (this->highlimit() != 0) {
    total_size += 2 + 8;
  }

  // optional double lowLimit = 19;
  if (this->lowlimit() != 0) {
    total_size += 2 + 8;
  }

  // optional double preOpenInterest = 20;
  if (this->preopeninterest() != 0) {
    total_size += 2 + 8;
  }

  // optional double openInterest = 21;
  if (this->openinterest() != 0) {
    total_size += 2 + 8;
  }

  // optional double averagePrice = 22;
  if (this->averageprice() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 updateTime = 23;
  if (this->updatetime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->updatetime());
  }

  // optional int32 tradingDay = 24;
  if (this->tradingday() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingday());
  }

  // optional double closeValue = 25;
  if (this->closevalue() != 0) {
    total_size += 2 + 8;
  }

  // repeated double askPrice = 11;
  {
    int data_size = 0;
    data_size = 8 * this->askprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _askprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 askVolume = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->askvolume_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->askvolume(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _askvolume_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double bidPrice = 13;
  {
    int data_size = 0;
    data_size = 8 * this->bidprice_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bidprice_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 bidVolume = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->bidvolume_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->bidvolume(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bidvolume_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMarketData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBMarketData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMarketData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMarketData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBMarketData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBMarketData)
    MergeFrom(*source);
  }
}

void PBMarketData::MergeFrom(const PBMarketData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBMarketData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  askprice_.MergeFrom(from.askprice_);
  askvolume_.MergeFrom(from.askvolume_);
  bidprice_.MergeFrom(from.bidprice_);
  bidvolume_.MergeFrom(from.bidvolume_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.preclosevalue() != 0) {
    set_preclosevalue(from.preclosevalue());
  }
  if (from.openvalue() != 0) {
    set_openvalue(from.openvalue());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.highvalue() != 0) {
    set_highvalue(from.highvalue());
  }
  if (from.lowvalue() != 0) {
    set_lowvalue(from.lowvalue());
  }
  if (from.matchprice() != 0) {
    set_matchprice(from.matchprice());
  }
  if (from.presettleprice() != 0) {
    set_presettleprice(from.presettleprice());
  }
  if (from.pricechange() != 0) {
    set_pricechange(from.pricechange());
  }
  if (from.settleprice() != 0) {
    set_settleprice(from.settleprice());
  }
  if (from.highlimit() != 0) {
    set_highlimit(from.highlimit());
  }
  if (from.lowlimit() != 0) {
    set_lowlimit(from.lowlimit());
  }
  if (from.preopeninterest() != 0) {
    set_preopeninterest(from.preopeninterest());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.averageprice() != 0) {
    set_averageprice(from.averageprice());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.tradingday() != 0) {
    set_tradingday(from.tradingday());
  }
  if (from.closevalue() != 0) {
    set_closevalue(from.closevalue());
  }
}

void PBMarketData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMarketData::CopyFrom(const PBMarketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMarketData::IsInitialized() const {

  return true;
}

void PBMarketData::Swap(PBMarketData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMarketData::InternalSwap(PBMarketData* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(preclosevalue_, other->preclosevalue_);
  std::swap(openvalue_, other->openvalue_);
  std::swap(turnover_, other->turnover_);
  std::swap(volume_, other->volume_);
  std::swap(highvalue_, other->highvalue_);
  std::swap(lowvalue_, other->lowvalue_);
  std::swap(matchprice_, other->matchprice_);
  askprice_.UnsafeArenaSwap(&other->askprice_);
  askvolume_.UnsafeArenaSwap(&other->askvolume_);
  bidprice_.UnsafeArenaSwap(&other->bidprice_);
  bidvolume_.UnsafeArenaSwap(&other->bidvolume_);
  std::swap(presettleprice_, other->presettleprice_);
  std::swap(pricechange_, other->pricechange_);
  std::swap(settleprice_, other->settleprice_);
  std::swap(highlimit_, other->highlimit_);
  std::swap(lowlimit_, other->lowlimit_);
  std::swap(preopeninterest_, other->preopeninterest_);
  std::swap(openinterest_, other->openinterest_);
  std::swap(averageprice_, other->averageprice_);
  std::swap(updatetime_, other->updatetime_);
  std::swap(tradingday_, other->tradingday_);
  std::swap(closevalue_, other->closevalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMarketData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMarketData_descriptor_;
  metadata.reflection = PBMarketData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMarketData

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBMarketData::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBMarketData::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBMarketData::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBMarketData::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketData.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBMarketData::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketData.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBMarketData::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketData.header)
}

// optional string exchange = 2;
void PBMarketData::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketData::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.exchange)
}
 void PBMarketData::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketData.exchange)
}
 void PBMarketData::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketData.exchange)
}
 ::std::string* PBMarketData::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketData.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketData::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketData.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketData.exchange)
}

// optional string contract = 3;
void PBMarketData::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketData::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.contract)
}
 void PBMarketData::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketData.contract)
}
 void PBMarketData::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketData.contract)
}
 ::std::string* PBMarketData::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketData.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketData::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketData.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketData::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketData.contract)
}

// optional double preCloseValue = 4;
void PBMarketData::clear_preclosevalue() {
  preclosevalue_ = 0;
}
 double PBMarketData::preclosevalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.preCloseValue)
  return preclosevalue_;
}
 void PBMarketData::set_preclosevalue(double value) {
  
  preclosevalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.preCloseValue)
}

// optional double openValue = 5;
void PBMarketData::clear_openvalue() {
  openvalue_ = 0;
}
 double PBMarketData::openvalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.openValue)
  return openvalue_;
}
 void PBMarketData::set_openvalue(double value) {
  
  openvalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.openValue)
}

// optional double turnover = 6;
void PBMarketData::clear_turnover() {
  turnover_ = 0;
}
 double PBMarketData::turnover() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.turnover)
  return turnover_;
}
 void PBMarketData::set_turnover(double value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.turnover)
}

// optional int32 volume = 7;
void PBMarketData::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBMarketData::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.volume)
  return volume_;
}
 void PBMarketData::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.volume)
}

// optional double highValue = 8;
void PBMarketData::clear_highvalue() {
  highvalue_ = 0;
}
 double PBMarketData::highvalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.highValue)
  return highvalue_;
}
 void PBMarketData::set_highvalue(double value) {
  
  highvalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.highValue)
}

// optional double lowValue = 9;
void PBMarketData::clear_lowvalue() {
  lowvalue_ = 0;
}
 double PBMarketData::lowvalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.lowValue)
  return lowvalue_;
}
 void PBMarketData::set_lowvalue(double value) {
  
  lowvalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.lowValue)
}

// optional double matchPrice = 10;
void PBMarketData::clear_matchprice() {
  matchprice_ = 0;
}
 double PBMarketData::matchprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.matchPrice)
  return matchprice_;
}
 void PBMarketData::set_matchprice(double value) {
  
  matchprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.matchPrice)
}

// repeated double askPrice = 11;
int PBMarketData::askprice_size() const {
  return askprice_.size();
}
void PBMarketData::clear_askprice() {
  askprice_.Clear();
}
 double PBMarketData::askprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.askPrice)
  return askprice_.Get(index);
}
 void PBMarketData::set_askprice(int index, double value) {
  askprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.askPrice)
}
 void PBMarketData::add_askprice(double value) {
  askprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.askPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBMarketData::askprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.askPrice)
  return askprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBMarketData::mutable_askprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.askPrice)
  return &askprice_;
}

// repeated int32 askVolume = 12;
int PBMarketData::askvolume_size() const {
  return askvolume_.size();
}
void PBMarketData::clear_askvolume() {
  askvolume_.Clear();
}
 ::google::protobuf::int32 PBMarketData::askvolume(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.askVolume)
  return askvolume_.Get(index);
}
 void PBMarketData::set_askvolume(int index, ::google::protobuf::int32 value) {
  askvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.askVolume)
}
 void PBMarketData::add_askvolume(::google::protobuf::int32 value) {
  askvolume_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.askVolume)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBMarketData::askvolume() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.askVolume)
  return askvolume_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBMarketData::mutable_askvolume() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.askVolume)
  return &askvolume_;
}

// repeated double bidPrice = 13;
int PBMarketData::bidprice_size() const {
  return bidprice_.size();
}
void PBMarketData::clear_bidprice() {
  bidprice_.Clear();
}
 double PBMarketData::bidprice(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.bidPrice)
  return bidprice_.Get(index);
}
 void PBMarketData::set_bidprice(int index, double value) {
  bidprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.bidPrice)
}
 void PBMarketData::add_bidprice(double value) {
  bidprice_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.bidPrice)
}
 const ::google::protobuf::RepeatedField< double >&
PBMarketData::bidprice() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.bidPrice)
  return bidprice_;
}
 ::google::protobuf::RepeatedField< double >*
PBMarketData::mutable_bidprice() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.bidPrice)
  return &bidprice_;
}

// repeated int32 bidVolume = 14;
int PBMarketData::bidvolume_size() const {
  return bidvolume_.size();
}
void PBMarketData::clear_bidvolume() {
  bidvolume_.Clear();
}
 ::google::protobuf::int32 PBMarketData::bidvolume(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.bidVolume)
  return bidvolume_.Get(index);
}
 void PBMarketData::set_bidvolume(int index, ::google::protobuf::int32 value) {
  bidvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.bidVolume)
}
 void PBMarketData::add_bidvolume(::google::protobuf::int32 value) {
  bidvolume_.Add(value);
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketData.bidVolume)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBMarketData::bidvolume() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketData.bidVolume)
  return bidvolume_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBMarketData::mutable_bidvolume() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketData.bidVolume)
  return &bidvolume_;
}

// optional double preSettlePrice = 15;
void PBMarketData::clear_presettleprice() {
  presettleprice_ = 0;
}
 double PBMarketData::presettleprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.preSettlePrice)
  return presettleprice_;
}
 void PBMarketData::set_presettleprice(double value) {
  
  presettleprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.preSettlePrice)
}

// optional double priceChange = 16;
void PBMarketData::clear_pricechange() {
  pricechange_ = 0;
}
 double PBMarketData::pricechange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.priceChange)
  return pricechange_;
}
 void PBMarketData::set_pricechange(double value) {
  
  pricechange_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.priceChange)
}

// optional double settlePrice = 17;
void PBMarketData::clear_settleprice() {
  settleprice_ = 0;
}
 double PBMarketData::settleprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.settlePrice)
  return settleprice_;
}
 void PBMarketData::set_settleprice(double value) {
  
  settleprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.settlePrice)
}

// optional double highLimit = 18;
void PBMarketData::clear_highlimit() {
  highlimit_ = 0;
}
 double PBMarketData::highlimit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.highLimit)
  return highlimit_;
}
 void PBMarketData::set_highlimit(double value) {
  
  highlimit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.highLimit)
}

// optional double lowLimit = 19;
void PBMarketData::clear_lowlimit() {
  lowlimit_ = 0;
}
 double PBMarketData::lowlimit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.lowLimit)
  return lowlimit_;
}
 void PBMarketData::set_lowlimit(double value) {
  
  lowlimit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.lowLimit)
}

// optional double preOpenInterest = 20;
void PBMarketData::clear_preopeninterest() {
  preopeninterest_ = 0;
}
 double PBMarketData::preopeninterest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.preOpenInterest)
  return preopeninterest_;
}
 void PBMarketData::set_preopeninterest(double value) {
  
  preopeninterest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.preOpenInterest)
}

// optional double openInterest = 21;
void PBMarketData::clear_openinterest() {
  openinterest_ = 0;
}
 double PBMarketData::openinterest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.openInterest)
  return openinterest_;
}
 void PBMarketData::set_openinterest(double value) {
  
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.openInterest)
}

// optional double averagePrice = 22;
void PBMarketData::clear_averageprice() {
  averageprice_ = 0;
}
 double PBMarketData::averageprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.averagePrice)
  return averageprice_;
}
 void PBMarketData::set_averageprice(double value) {
  
  averageprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.averagePrice)
}

// optional int32 updateTime = 23;
void PBMarketData::clear_updatetime() {
  updatetime_ = 0;
}
 ::google::protobuf::int32 PBMarketData::updatetime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.updateTime)
  return updatetime_;
}
 void PBMarketData::set_updatetime(::google::protobuf::int32 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.updateTime)
}

// optional int32 tradingDay = 24;
void PBMarketData::clear_tradingday() {
  tradingday_ = 0;
}
 ::google::protobuf::int32 PBMarketData::tradingday() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.tradingDay)
  return tradingday_;
}
 void PBMarketData::set_tradingday(::google::protobuf::int32 value) {
  
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.tradingDay)
}

// optional double closeValue = 25;
void PBMarketData::clear_closevalue() {
  closevalue_ = 0;
}
 double PBMarketData::closevalue() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketData.closeValue)
  return closevalue_;
}
 void PBMarketData::set_closevalue(double value) {
  
  closevalue_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketData.closeValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMarketDataList::kHeaderFieldNumber;
const int PBMarketDataList::kMarketDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMarketDataList::PBMarketDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBMarketDataList)
}

void PBMarketDataList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBMarketDataList::PBMarketDataList(const PBMarketDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBMarketDataList)
}

void PBMarketDataList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBMarketDataList::~PBMarketDataList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBMarketDataList)
  SharedDtor();
}

void PBMarketDataList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBMarketDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMarketDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMarketDataList_descriptor_;
}

const PBMarketDataList& PBMarketDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBMarketDataList* PBMarketDataList::default_instance_ = NULL;

PBMarketDataList* PBMarketDataList::New(::google::protobuf::Arena* arena) const {
  PBMarketDataList* n = new PBMarketDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMarketDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBMarketDataList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  marketdata_.Clear();
}

bool PBMarketDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBMarketDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_marketData;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBMarketData marketData = 2;
      case 2: {
        if (tag == 18) {
         parse_marketData:
          DO_(input->IncrementRecursionDepth());
         parse_loop_marketData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_marketdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_marketData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBMarketDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBMarketDataList)
  return false;
#undef DO_
}

void PBMarketDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBMarketDataList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBMarketData marketData = 2;
  for (unsigned int i = 0, n = this->marketdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->marketdata(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBMarketDataList)
}

::google::protobuf::uint8* PBMarketDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBMarketDataList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBMarketData marketData = 2;
  for (unsigned int i = 0, n = this->marketdata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->marketdata(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBMarketDataList)
  return target;
}

int PBMarketDataList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBMarketDataList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBMarketData marketData = 2;
  total_size += 1 * this->marketdata_size();
  for (int i = 0; i < this->marketdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->marketdata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMarketDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMarketDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMarketDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBMarketDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBMarketDataList)
    MergeFrom(*source);
  }
}

void PBMarketDataList::MergeFrom(const PBMarketDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  marketdata_.MergeFrom(from.marketdata_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBMarketDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMarketDataList::CopyFrom(const PBMarketDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBMarketDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMarketDataList::IsInitialized() const {

  return true;
}

void PBMarketDataList::Swap(PBMarketDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMarketDataList::InternalSwap(PBMarketDataList* other) {
  std::swap(header_, other->header_);
  marketdata_.UnsafeArenaSwap(&other->marketdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMarketDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMarketDataList_descriptor_;
  metadata.reflection = PBMarketDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMarketDataList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBMarketDataList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBMarketDataList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBMarketDataList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketDataList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBMarketDataList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketDataList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBMarketDataList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketDataList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBMarketDataList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketDataList.header)
}

// repeated .Micro.Future.Message.Business.PBMarketData marketData = 2;
int PBMarketDataList::marketdata_size() const {
  return marketdata_.size();
}
void PBMarketDataList::clear_marketdata() {
  marketdata_.Clear();
}
const ::Micro::Future::Message::Business::PBMarketData& PBMarketDataList::marketdata(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_.Get(index);
}
::Micro::Future::Message::Business::PBMarketData* PBMarketDataList::mutable_marketdata(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_.Mutable(index);
}
::Micro::Future::Message::Business::PBMarketData* PBMarketDataList::add_marketdata() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBMarketData >*
PBMarketDataList::mutable_marketdata() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return &marketdata_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBMarketData >&
PBMarketDataList::marketdata() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBMarketDataList.marketData)
  return marketdata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBHedgeContract::kExchangeFieldNumber;
const int PBHedgeContract::kContractFieldNumber;
const int PBHedgeContract::kUnderlyingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBHedgeContract::PBHedgeContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBHedgeContract)
}

void PBHedgeContract::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBHedgeContract::PBHedgeContract(const PBHedgeContract& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBHedgeContract)
}

void PBHedgeContract::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBHedgeContract::~PBHedgeContract() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBHedgeContract)
  SharedDtor();
}

void PBHedgeContract::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBHedgeContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBHedgeContract::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBHedgeContract_descriptor_;
}

const PBHedgeContract& PBHedgeContract::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBHedgeContract* PBHedgeContract::default_instance_ = NULL;

PBHedgeContract* PBHedgeContract::New(::google::protobuf::Arena* arena) const {
  PBHedgeContract* n = new PBHedgeContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBHedgeContract::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBHedgeContract)
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PBHedgeContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBHedgeContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBHedgeContract.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBHedgeContract.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_underlying;
        break;
      }

      // optional string underlying = 3;
      case 3: {
        if (tag == 26) {
         parse_underlying:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlying()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlying().data(), this->underlying().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBHedgeContract.underlying"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBHedgeContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBHedgeContract)
  return false;
#undef DO_
}

void PBHedgeContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBHedgeContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBHedgeContract.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBHedgeContract.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional string underlying = 3;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBHedgeContract.underlying");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->underlying(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBHedgeContract)
}

::google::protobuf::uint8* PBHedgeContract::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBHedgeContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBHedgeContract.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBHedgeContract.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional string underlying = 3;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBHedgeContract.underlying");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->underlying(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBHedgeContract)
  return target;
}

int PBHedgeContract::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBHedgeContract)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string underlying = 3;
  if (this->underlying().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlying());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBHedgeContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBHedgeContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBHedgeContract* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBHedgeContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBHedgeContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBHedgeContract)
    MergeFrom(*source);
  }
}

void PBHedgeContract::MergeFrom(const PBHedgeContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBHedgeContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.underlying().size() > 0) {

    underlying_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlying_);
  }
}

void PBHedgeContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBHedgeContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBHedgeContract::CopyFrom(const PBHedgeContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBHedgeContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBHedgeContract::IsInitialized() const {

  return true;
}

void PBHedgeContract::Swap(PBHedgeContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBHedgeContract::InternalSwap(PBHedgeContract* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  underlying_.Swap(&other->underlying_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBHedgeContract::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBHedgeContract_descriptor_;
  metadata.reflection = PBHedgeContract_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBHedgeContract

// optional string exchange = 1;
void PBHedgeContract::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBHedgeContract::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBHedgeContract.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBHedgeContract::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBHedgeContract.exchange)
}
 void PBHedgeContract::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBHedgeContract.exchange)
}
 void PBHedgeContract::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBHedgeContract.exchange)
}
 ::std::string* PBHedgeContract::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBHedgeContract.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBHedgeContract::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBHedgeContract.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBHedgeContract::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBHedgeContract.exchange)
}

// optional string contract = 2;
void PBHedgeContract::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBHedgeContract::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBHedgeContract.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBHedgeContract::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBHedgeContract.contract)
}
 void PBHedgeContract::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBHedgeContract.contract)
}
 void PBHedgeContract::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBHedgeContract.contract)
}
 ::std::string* PBHedgeContract::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBHedgeContract.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBHedgeContract::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBHedgeContract.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBHedgeContract::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBHedgeContract.contract)
}

// optional string underlying = 3;
void PBHedgeContract::clear_underlying() {
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBHedgeContract::underlying() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBHedgeContract.underlying)
  return underlying_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBHedgeContract::set_underlying(const ::std::string& value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBHedgeContract.underlying)
}
 void PBHedgeContract::set_underlying(const char* value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBHedgeContract.underlying)
}
 void PBHedgeContract::set_underlying(const char* value, size_t size) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBHedgeContract.underlying)
}
 ::std::string* PBHedgeContract::mutable_underlying() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBHedgeContract.underlying)
  return underlying_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBHedgeContract::release_underlying() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBHedgeContract.underlying)
  
  return underlying_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBHedgeContract::set_allocated_underlying(::std::string* underlying) {
  if (underlying != NULL) {
    
  } else {
    
  }
  underlying_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlying);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBHedgeContract.underlying)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPortfolio::kHeaderFieldNumber;
const int PBPortfolio::kNameFieldNumber;
const int PBPortfolio::kHedgeDelayFieldNumber;
const int PBPortfolio::kThresholdFieldNumber;
const int PBPortfolio::kHedgingFieldNumber;
const int PBPortfolio::kHedgeVolumeFieldNumber;
const int PBPortfolio::kHedgeContractsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPortfolio::PBPortfolio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPortfolio)
}

void PBPortfolio::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPortfolio::PBPortfolio(const PBPortfolio& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPortfolio)
}

void PBPortfolio::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgedelay_ = 0;
  threshold_ = 0;
  hedging_ = false;
  hedgevolume_ = 0;
}

PBPortfolio::~PBPortfolio() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPortfolio)
  SharedDtor();
}

void PBPortfolio::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPortfolio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPortfolio::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPortfolio_descriptor_;
}

const PBPortfolio& PBPortfolio::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPortfolio* PBPortfolio::default_instance_ = NULL;

PBPortfolio* PBPortfolio::New(::google::protobuf::Arena* arena) const {
  PBPortfolio* n = new PBPortfolio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPortfolio::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPortfolio)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPortfolio, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPortfolio*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(threshold_, hedging_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedgevolume_ = 0;

#undef ZR_HELPER_
#undef ZR_

  hedgecontracts_.Clear();
}

bool PBPortfolio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPortfolio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPortfolio.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hedgeDelay;
        break;
      }

      // optional int32 hedgeDelay = 3;
      case 3: {
        if (tag == 24) {
         parse_hedgeDelay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hedgedelay_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_threshold;
        break;
      }

      // optional double threshold = 4;
      case 4: {
        if (tag == 33) {
         parse_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hedging;
        break;
      }

      // optional bool hedging = 5;
      case 5: {
        if (tag == 40) {
         parse_hedging:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hedging_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hedgeVolume;
        break;
      }

      // optional int32 hedgeVolume = 6;
      case 6: {
        if (tag == 48) {
         parse_hedgeVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hedgevolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_hedgeContracts;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBHedgeContract hedgeContracts = 7;
      case 7: {
        if (tag == 58) {
         parse_hedgeContracts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_hedgeContracts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_hedgecontracts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_hedgeContracts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPortfolio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPortfolio)
  return false;
#undef DO_
}

void PBPortfolio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPortfolio)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPortfolio.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 hedgeDelay = 3;
  if (this->hedgedelay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hedgedelay(), output);
  }

  // optional double threshold = 4;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->threshold(), output);
  }

  // optional bool hedging = 5;
  if (this->hedging() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->hedging(), output);
  }

  // optional int32 hedgeVolume = 6;
  if (this->hedgevolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hedgevolume(), output);
  }

  // repeated .Micro.Future.Message.Business.PBHedgeContract hedgeContracts = 7;
  for (unsigned int i = 0, n = this->hedgecontracts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->hedgecontracts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPortfolio)
}

::google::protobuf::uint8* PBPortfolio::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPortfolio)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPortfolio.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 hedgeDelay = 3;
  if (this->hedgedelay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hedgedelay(), target);
  }

  // optional double threshold = 4;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->threshold(), target);
  }

  // optional bool hedging = 5;
  if (this->hedging() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->hedging(), target);
  }

  // optional int32 hedgeVolume = 6;
  if (this->hedgevolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hedgevolume(), target);
  }

  // repeated .Micro.Future.Message.Business.PBHedgeContract hedgeContracts = 7;
  for (unsigned int i = 0, n = this->hedgecontracts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->hedgecontracts(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPortfolio)
  return target;
}

int PBPortfolio::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPortfolio)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 hedgeDelay = 3;
  if (this->hedgedelay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hedgedelay());
  }

  // optional double threshold = 4;
  if (this->threshold() != 0) {
    total_size += 1 + 8;
  }

  // optional bool hedging = 5;
  if (this->hedging() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 hedgeVolume = 6;
  if (this->hedgevolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hedgevolume());
  }

  // repeated .Micro.Future.Message.Business.PBHedgeContract hedgeContracts = 7;
  total_size += 1 * this->hedgecontracts_size();
  for (int i = 0; i < this->hedgecontracts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hedgecontracts(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPortfolio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPortfolio)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPortfolio* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPortfolio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPortfolio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPortfolio)
    MergeFrom(*source);
  }
}

void PBPortfolio::MergeFrom(const PBPortfolio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPortfolio)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  hedgecontracts_.MergeFrom(from.hedgecontracts_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.hedgedelay() != 0) {
    set_hedgedelay(from.hedgedelay());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.hedging() != 0) {
    set_hedging(from.hedging());
  }
  if (from.hedgevolume() != 0) {
    set_hedgevolume(from.hedgevolume());
  }
}

void PBPortfolio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPortfolio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPortfolio::CopyFrom(const PBPortfolio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPortfolio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPortfolio::IsInitialized() const {

  return true;
}

void PBPortfolio::Swap(PBPortfolio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPortfolio::InternalSwap(PBPortfolio* other) {
  std::swap(header_, other->header_);
  name_.Swap(&other->name_);
  std::swap(hedgedelay_, other->hedgedelay_);
  std::swap(threshold_, other->threshold_);
  std::swap(hedging_, other->hedging_);
  std::swap(hedgevolume_, other->hedgevolume_);
  hedgecontracts_.UnsafeArenaSwap(&other->hedgecontracts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPortfolio::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPortfolio_descriptor_;
  metadata.reflection = PBPortfolio_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPortfolio

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBPortfolio::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPortfolio::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPortfolio::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPortfolio::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPortfolio.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPortfolio::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPortfolio.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPortfolio::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPortfolio.header)
}

// optional string name = 2;
void PBPortfolio::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPortfolio::name() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPortfolio::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPortfolio.name)
}
 void PBPortfolio::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPortfolio.name)
}
 void PBPortfolio::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPortfolio.name)
}
 ::std::string* PBPortfolio::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPortfolio.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPortfolio::release_name() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPortfolio.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPortfolio::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPortfolio.name)
}

// optional int32 hedgeDelay = 3;
void PBPortfolio::clear_hedgedelay() {
  hedgedelay_ = 0;
}
 ::google::protobuf::int32 PBPortfolio::hedgedelay() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.hedgeDelay)
  return hedgedelay_;
}
 void PBPortfolio::set_hedgedelay(::google::protobuf::int32 value) {
  
  hedgedelay_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPortfolio.hedgeDelay)
}

// optional double threshold = 4;
void PBPortfolio::clear_threshold() {
  threshold_ = 0;
}
 double PBPortfolio::threshold() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.threshold)
  return threshold_;
}
 void PBPortfolio::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPortfolio.threshold)
}

// optional bool hedging = 5;
void PBPortfolio::clear_hedging() {
  hedging_ = false;
}
 bool PBPortfolio::hedging() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.hedging)
  return hedging_;
}
 void PBPortfolio::set_hedging(bool value) {
  
  hedging_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPortfolio.hedging)
}

// optional int32 hedgeVolume = 6;
void PBPortfolio::clear_hedgevolume() {
  hedgevolume_ = 0;
}
 ::google::protobuf::int32 PBPortfolio::hedgevolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.hedgeVolume)
  return hedgevolume_;
}
 void PBPortfolio::set_hedgevolume(::google::protobuf::int32 value) {
  
  hedgevolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPortfolio.hedgeVolume)
}

// repeated .Micro.Future.Message.Business.PBHedgeContract hedgeContracts = 7;
int PBPortfolio::hedgecontracts_size() const {
  return hedgecontracts_.size();
}
void PBPortfolio::clear_hedgecontracts() {
  hedgecontracts_.Clear();
}
const ::Micro::Future::Message::Business::PBHedgeContract& PBPortfolio::hedgecontracts(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolio.hedgeContracts)
  return hedgecontracts_.Get(index);
}
::Micro::Future::Message::Business::PBHedgeContract* PBPortfolio::mutable_hedgecontracts(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPortfolio.hedgeContracts)
  return hedgecontracts_.Mutable(index);
}
::Micro::Future::Message::Business::PBHedgeContract* PBPortfolio::add_hedgecontracts() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBPortfolio.hedgeContracts)
  return hedgecontracts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBHedgeContract >*
PBPortfolio::mutable_hedgecontracts() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBPortfolio.hedgeContracts)
  return &hedgecontracts_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBHedgeContract >&
PBPortfolio::hedgecontracts() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBPortfolio.hedgeContracts)
  return hedgecontracts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPortfolioList::kHeaderFieldNumber;
const int PBPortfolioList::kPortfolioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPortfolioList::PBPortfolioList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPortfolioList)
}

void PBPortfolioList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPortfolioList::PBPortfolioList(const PBPortfolioList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPortfolioList)
}

void PBPortfolioList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBPortfolioList::~PBPortfolioList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPortfolioList)
  SharedDtor();
}

void PBPortfolioList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPortfolioList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPortfolioList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPortfolioList_descriptor_;
}

const PBPortfolioList& PBPortfolioList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPortfolioList* PBPortfolioList::default_instance_ = NULL;

PBPortfolioList* PBPortfolioList::New(::google::protobuf::Arena* arena) const {
  PBPortfolioList* n = new PBPortfolioList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPortfolioList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPortfolioList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  portfolio_.Clear();
}

bool PBPortfolioList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPortfolioList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_portfolio;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBPortfolio portfolio = 2;
      case 2: {
        if (tag == 18) {
         parse_portfolio:
          DO_(input->IncrementRecursionDepth());
         parse_loop_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_portfolio()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_portfolio;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPortfolioList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPortfolioList)
  return false;
#undef DO_
}

void PBPortfolioList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPortfolioList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBPortfolio portfolio = 2;
  for (unsigned int i = 0, n = this->portfolio_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->portfolio(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPortfolioList)
}

::google::protobuf::uint8* PBPortfolioList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPortfolioList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBPortfolio portfolio = 2;
  for (unsigned int i = 0, n = this->portfolio_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->portfolio(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPortfolioList)
  return target;
}

int PBPortfolioList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPortfolioList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBPortfolio portfolio = 2;
  total_size += 1 * this->portfolio_size();
  for (int i = 0; i < this->portfolio_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->portfolio(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPortfolioList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPortfolioList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPortfolioList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPortfolioList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPortfolioList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPortfolioList)
    MergeFrom(*source);
  }
}

void PBPortfolioList::MergeFrom(const PBPortfolioList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPortfolioList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  portfolio_.MergeFrom(from.portfolio_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBPortfolioList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPortfolioList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPortfolioList::CopyFrom(const PBPortfolioList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPortfolioList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPortfolioList::IsInitialized() const {

  return true;
}

void PBPortfolioList::Swap(PBPortfolioList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPortfolioList::InternalSwap(PBPortfolioList* other) {
  std::swap(header_, other->header_);
  portfolio_.UnsafeArenaSwap(&other->portfolio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPortfolioList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPortfolioList_descriptor_;
  metadata.reflection = PBPortfolioList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPortfolioList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBPortfolioList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPortfolioList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPortfolioList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolioList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPortfolioList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPortfolioList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPortfolioList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPortfolioList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPortfolioList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPortfolioList.header)
}

// repeated .Micro.Future.Message.Business.PBPortfolio portfolio = 2;
int PBPortfolioList::portfolio_size() const {
  return portfolio_.size();
}
void PBPortfolioList::clear_portfolio() {
  portfolio_.Clear();
}
const ::Micro::Future::Message::Business::PBPortfolio& PBPortfolioList::portfolio(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPortfolioList.portfolio)
  return portfolio_.Get(index);
}
::Micro::Future::Message::Business::PBPortfolio* PBPortfolioList::mutable_portfolio(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPortfolioList.portfolio)
  return portfolio_.Mutable(index);
}
::Micro::Future::Message::Business::PBPortfolio* PBPortfolioList::add_portfolio() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBPortfolioList.portfolio)
  return portfolio_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPortfolio >*
PBPortfolioList::mutable_portfolio() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBPortfolioList.portfolio)
  return &portfolio_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPortfolio >&
PBPortfolioList::portfolio() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBPortfolioList.portfolio)
  return portfolio_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPricingData::kHeaderFieldNumber;
const int PBPricingData::kExchangeFieldNumber;
const int PBPricingData::kContractFieldNumber;
const int PBPricingData::kAskPriceFieldNumber;
const int PBPricingData::kBidPriceFieldNumber;
const int PBPricingData::kAskSizeFieldNumber;
const int PBPricingData::kBidSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPricingData::PBPricingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPricingData)
}

void PBPricingData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPricingData::PBPricingData(const PBPricingData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPricingData)
}

void PBPricingData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askprice_ = 0;
  bidprice_ = 0;
  asksize_ = 0;
  bidsize_ = 0;
}

PBPricingData::~PBPricingData() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPricingData)
  SharedDtor();
}

void PBPricingData::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPricingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPricingData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPricingData_descriptor_;
}

const PBPricingData& PBPricingData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPricingData* PBPricingData::default_instance_ = NULL;

PBPricingData* PBPricingData::New(::google::protobuf::Arena* arena) const {
  PBPricingData* n = new PBPricingData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPricingData::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPricingData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPricingData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPricingData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(askprice_, bidsize_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBPricingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPricingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingData.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingData.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_askPrice;
        break;
      }

      // optional double askPrice = 4;
      case 4: {
        if (tag == 33) {
         parse_askPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_bidPrice;
        break;
      }

      // optional double bidPrice = 5;
      case 5: {
        if (tag == 41) {
         parse_bidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_askSize;
        break;
      }

      // optional int32 askSize = 6;
      case 6: {
        if (tag == 48) {
         parse_askSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asksize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_bidSize;
        break;
      }

      // optional int32 bidSize = 7;
      case 7: {
        if (tag == 56) {
         parse_bidSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPricingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPricingData)
  return false;
#undef DO_
}

void PBPricingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPricingData)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional double askPrice = 4;
  if (this->askprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->askprice(), output);
  }

  // optional double bidPrice = 5;
  if (this->bidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bidprice(), output);
  }

  // optional int32 askSize = 6;
  if (this->asksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->asksize(), output);
  }

  // optional int32 bidSize = 7;
  if (this->bidsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bidsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPricingData)
}

::google::protobuf::uint8* PBPricingData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPricingData)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingData.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional double askPrice = 4;
  if (this->askprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->askprice(), target);
  }

  // optional double bidPrice = 5;
  if (this->bidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bidprice(), target);
  }

  // optional int32 askSize = 6;
  if (this->asksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->asksize(), target);
  }

  // optional int32 bidSize = 7;
  if (this->bidsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bidsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPricingData)
  return target;
}

int PBPricingData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPricingData)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double askPrice = 4;
  if (this->askprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double bidPrice = 5;
  if (this->bidprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 askSize = 6;
  if (this->asksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->asksize());
  }

  // optional int32 bidSize = 7;
  if (this->bidsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidsize());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPricingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPricingData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPricingData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPricingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPricingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPricingData)
    MergeFrom(*source);
  }
}

void PBPricingData::MergeFrom(const PBPricingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPricingData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.askprice() != 0) {
    set_askprice(from.askprice());
  }
  if (from.bidprice() != 0) {
    set_bidprice(from.bidprice());
  }
  if (from.asksize() != 0) {
    set_asksize(from.asksize());
  }
  if (from.bidsize() != 0) {
    set_bidsize(from.bidsize());
  }
}

void PBPricingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPricingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPricingData::CopyFrom(const PBPricingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPricingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPricingData::IsInitialized() const {

  return true;
}

void PBPricingData::Swap(PBPricingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPricingData::InternalSwap(PBPricingData* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(askprice_, other->askprice_);
  std::swap(bidprice_, other->bidprice_);
  std::swap(asksize_, other->asksize_);
  std::swap(bidsize_, other->bidsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPricingData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPricingData_descriptor_;
  metadata.reflection = PBPricingData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPricingData

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBPricingData::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPricingData::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPricingData::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPricingData::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingData.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPricingData::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingData.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPricingData::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingData.header)
}

// optional string exchange = 2;
void PBPricingData::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingData::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.exchange)
}
 void PBPricingData::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingData.exchange)
}
 void PBPricingData::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingData.exchange)
}
 ::std::string* PBPricingData::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingData.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingData::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingData.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingData.exchange)
}

// optional string contract = 3;
void PBPricingData::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingData::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.contract)
}
 void PBPricingData::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingData.contract)
}
 void PBPricingData::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingData.contract)
}
 ::std::string* PBPricingData::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingData.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingData::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingData.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingData::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingData.contract)
}

// optional double askPrice = 4;
void PBPricingData::clear_askprice() {
  askprice_ = 0;
}
 double PBPricingData::askprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.askPrice)
  return askprice_;
}
 void PBPricingData::set_askprice(double value) {
  
  askprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.askPrice)
}

// optional double bidPrice = 5;
void PBPricingData::clear_bidprice() {
  bidprice_ = 0;
}
 double PBPricingData::bidprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.bidPrice)
  return bidprice_;
}
 void PBPricingData::set_bidprice(double value) {
  
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.bidPrice)
}

// optional int32 askSize = 6;
void PBPricingData::clear_asksize() {
  asksize_ = 0;
}
 ::google::protobuf::int32 PBPricingData::asksize() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.askSize)
  return asksize_;
}
 void PBPricingData::set_asksize(::google::protobuf::int32 value) {
  
  asksize_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.askSize)
}

// optional int32 bidSize = 7;
void PBPricingData::clear_bidsize() {
  bidsize_ = 0;
}
 ::google::protobuf::int32 PBPricingData::bidsize() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingData.bidSize)
  return bidsize_;
}
 void PBPricingData::set_bidsize(::google::protobuf::int32 value) {
  
  bidsize_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingData.bidSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPricingDataList::kPricingDataFieldNumber;
const int PBPricingDataList::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPricingDataList::PBPricingDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPricingDataList)
}

void PBPricingDataList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPricingDataList::PBPricingDataList(const PBPricingDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPricingDataList)
}

void PBPricingDataList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBPricingDataList::~PBPricingDataList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPricingDataList)
  SharedDtor();
}

void PBPricingDataList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPricingDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPricingDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPricingDataList_descriptor_;
}

const PBPricingDataList& PBPricingDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPricingDataList* PBPricingDataList::default_instance_ = NULL;

PBPricingDataList* PBPricingDataList::New(::google::protobuf::Arena* arena) const {
  PBPricingDataList* n = new PBPricingDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPricingDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPricingDataList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  pricingdata_.Clear();
}

bool PBPricingDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPricingDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pricingData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pricingdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pricingData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_header;
        break;
      }

      // optional .Micro.Future.Message.DataHeader header = 2;
      case 2: {
        if (tag == 18) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPricingDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPricingDataList)
  return false;
#undef DO_
}

void PBPricingDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPricingDataList)
  // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
  for (unsigned int i = 0, n = this->pricingdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pricingdata(i), output);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPricingDataList)
}

::google::protobuf::uint8* PBPricingDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPricingDataList)
  // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
  for (unsigned int i = 0, n = this->pricingdata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pricingdata(i), target);
  }

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->header_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPricingDataList)
  return target;
}

int PBPricingDataList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPricingDataList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
  total_size += 1 * this->pricingdata_size();
  for (int i = 0; i < this->pricingdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pricingdata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPricingDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPricingDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPricingDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPricingDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPricingDataList)
    MergeFrom(*source);
  }
}

void PBPricingDataList::MergeFrom(const PBPricingDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  pricingdata_.MergeFrom(from.pricingdata_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBPricingDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPricingDataList::CopyFrom(const PBPricingDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPricingDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPricingDataList::IsInitialized() const {

  return true;
}

void PBPricingDataList::Swap(PBPricingDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPricingDataList::InternalSwap(PBPricingDataList* other) {
  pricingdata_.UnsafeArenaSwap(&other->pricingdata_);
  std::swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPricingDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPricingDataList_descriptor_;
  metadata.reflection = PBPricingDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPricingDataList

// repeated .Micro.Future.Message.Business.PBPricingData pricingData = 1;
int PBPricingDataList::pricingdata_size() const {
  return pricingdata_.size();
}
void PBPricingDataList::clear_pricingdata() {
  pricingdata_.Clear();
}
const ::Micro::Future::Message::Business::PBPricingData& PBPricingDataList::pricingdata(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_.Get(index);
}
::Micro::Future::Message::Business::PBPricingData* PBPricingDataList::mutable_pricingdata(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_.Mutable(index);
}
::Micro::Future::Message::Business::PBPricingData* PBPricingDataList::add_pricingdata() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingData >*
PBPricingDataList::mutable_pricingdata() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return &pricingdata_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingData >&
PBPricingDataList::pricingdata() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBPricingDataList.pricingData)
  return pricingdata_;
}

// optional .Micro.Future.Message.DataHeader header = 2;
bool PBPricingDataList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPricingDataList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPricingDataList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingDataList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPricingDataList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingDataList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPricingDataList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingDataList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPricingDataList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingDataList.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOptionMarketData::kAskPriceFieldNumber;
const int PBOptionMarketData::kBidPriceFieldNumber;
const int PBOptionMarketData::kAskSizeFieldNumber;
const int PBOptionMarketData::kBidSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOptionMarketData::PBOptionMarketData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOptionMarketData)
}

void PBOptionMarketData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBOptionMarketData::PBOptionMarketData(const PBOptionMarketData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOptionMarketData)
}

void PBOptionMarketData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  askprice_ = 0;
  bidprice_ = 0;
  asksize_ = 0;
  bidsize_ = 0;
}

PBOptionMarketData::~PBOptionMarketData() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOptionMarketData)
  SharedDtor();
}

void PBOptionMarketData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBOptionMarketData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOptionMarketData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOptionMarketData_descriptor_;
}

const PBOptionMarketData& PBOptionMarketData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOptionMarketData* PBOptionMarketData::default_instance_ = NULL;

PBOptionMarketData* PBOptionMarketData::New(::google::protobuf::Arena* arena) const {
  PBOptionMarketData* n = new PBOptionMarketData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOptionMarketData::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOptionMarketData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBOptionMarketData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBOptionMarketData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(askprice_, bidsize_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBOptionMarketData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOptionMarketData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double askPrice = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_bidPrice;
        break;
      }

      // optional double bidPrice = 2;
      case 2: {
        if (tag == 17) {
         parse_bidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_askSize;
        break;
      }

      // optional int32 askSize = 3;
      case 3: {
        if (tag == 24) {
         parse_askSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asksize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bidSize;
        break;
      }

      // optional int32 bidSize = 4;
      case 4: {
        if (tag == 32) {
         parse_bidSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOptionMarketData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOptionMarketData)
  return false;
#undef DO_
}

void PBOptionMarketData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOptionMarketData)
  // optional double askPrice = 1;
  if (this->askprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->askprice(), output);
  }

  // optional double bidPrice = 2;
  if (this->bidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->bidprice(), output);
  }

  // optional int32 askSize = 3;
  if (this->asksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->asksize(), output);
  }

  // optional int32 bidSize = 4;
  if (this->bidsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bidsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOptionMarketData)
}

::google::protobuf::uint8* PBOptionMarketData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOptionMarketData)
  // optional double askPrice = 1;
  if (this->askprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->askprice(), target);
  }

  // optional double bidPrice = 2;
  if (this->bidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->bidprice(), target);
  }

  // optional int32 askSize = 3;
  if (this->asksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->asksize(), target);
  }

  // optional int32 bidSize = 4;
  if (this->bidsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bidsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOptionMarketData)
  return target;
}

int PBOptionMarketData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOptionMarketData)
  int total_size = 0;

  // optional double askPrice = 1;
  if (this->askprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double bidPrice = 2;
  if (this->bidprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 askSize = 3;
  if (this->asksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->asksize());
  }

  // optional int32 bidSize = 4;
  if (this->bidsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidsize());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOptionMarketData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOptionMarketData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOptionMarketData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOptionMarketData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOptionMarketData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOptionMarketData)
    MergeFrom(*source);
  }
}

void PBOptionMarketData::MergeFrom(const PBOptionMarketData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOptionMarketData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.askprice() != 0) {
    set_askprice(from.askprice());
  }
  if (from.bidprice() != 0) {
    set_bidprice(from.bidprice());
  }
  if (from.asksize() != 0) {
    set_asksize(from.asksize());
  }
  if (from.bidsize() != 0) {
    set_bidsize(from.bidsize());
  }
}

void PBOptionMarketData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOptionMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOptionMarketData::CopyFrom(const PBOptionMarketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOptionMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOptionMarketData::IsInitialized() const {

  return true;
}

void PBOptionMarketData::Swap(PBOptionMarketData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOptionMarketData::InternalSwap(PBOptionMarketData* other) {
  std::swap(askprice_, other->askprice_);
  std::swap(bidprice_, other->bidprice_);
  std::swap(asksize_, other->asksize_);
  std::swap(bidsize_, other->bidsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOptionMarketData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOptionMarketData_descriptor_;
  metadata.reflection = PBOptionMarketData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOptionMarketData

// optional double askPrice = 1;
void PBOptionMarketData::clear_askprice() {
  askprice_ = 0;
}
 double PBOptionMarketData::askprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionMarketData.askPrice)
  return askprice_;
}
 void PBOptionMarketData::set_askprice(double value) {
  
  askprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionMarketData.askPrice)
}

// optional double bidPrice = 2;
void PBOptionMarketData::clear_bidprice() {
  bidprice_ = 0;
}
 double PBOptionMarketData::bidprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionMarketData.bidPrice)
  return bidprice_;
}
 void PBOptionMarketData::set_bidprice(double value) {
  
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionMarketData.bidPrice)
}

// optional int32 askSize = 3;
void PBOptionMarketData::clear_asksize() {
  asksize_ = 0;
}
 ::google::protobuf::int32 PBOptionMarketData::asksize() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionMarketData.askSize)
  return asksize_;
}
 void PBOptionMarketData::set_asksize(::google::protobuf::int32 value) {
  
  asksize_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionMarketData.askSize)
}

// optional int32 bidSize = 4;
void PBOptionMarketData::clear_bidsize() {
  bidsize_ = 0;
}
 ::google::protobuf::int32 PBOptionMarketData::bidsize() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionMarketData.bidSize)
  return bidsize_;
}
 void PBOptionMarketData::set_bidsize(::google::protobuf::int32 value) {
  
  bidsize_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionMarketData.bidSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBImpliedVolatility::kAskVolatilityFieldNumber;
const int PBImpliedVolatility::kBidVolatilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBImpliedVolatility::PBImpliedVolatility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBImpliedVolatility)
}

void PBImpliedVolatility::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBImpliedVolatility::PBImpliedVolatility(const PBImpliedVolatility& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBImpliedVolatility)
}

void PBImpliedVolatility::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  askvolatility_ = 0;
  bidvolatility_ = 0;
}

PBImpliedVolatility::~PBImpliedVolatility() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBImpliedVolatility)
  SharedDtor();
}

void PBImpliedVolatility::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBImpliedVolatility::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBImpliedVolatility::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBImpliedVolatility_descriptor_;
}

const PBImpliedVolatility& PBImpliedVolatility::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBImpliedVolatility* PBImpliedVolatility::default_instance_ = NULL;

PBImpliedVolatility* PBImpliedVolatility::New(::google::protobuf::Arena* arena) const {
  PBImpliedVolatility* n = new PBImpliedVolatility;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBImpliedVolatility::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBImpliedVolatility)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBImpliedVolatility, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBImpliedVolatility*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(askvolatility_, bidvolatility_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBImpliedVolatility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBImpliedVolatility)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double askVolatility = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askvolatility_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_bidVolatility;
        break;
      }

      // optional double bidVolatility = 2;
      case 2: {
        if (tag == 17) {
         parse_bidVolatility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidvolatility_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBImpliedVolatility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBImpliedVolatility)
  return false;
#undef DO_
}

void PBImpliedVolatility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBImpliedVolatility)
  // optional double askVolatility = 1;
  if (this->askvolatility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->askvolatility(), output);
  }

  // optional double bidVolatility = 2;
  if (this->bidvolatility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->bidvolatility(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBImpliedVolatility)
}

::google::protobuf::uint8* PBImpliedVolatility::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBImpliedVolatility)
  // optional double askVolatility = 1;
  if (this->askvolatility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->askvolatility(), target);
  }

  // optional double bidVolatility = 2;
  if (this->bidvolatility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->bidvolatility(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBImpliedVolatility)
  return target;
}

int PBImpliedVolatility::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBImpliedVolatility)
  int total_size = 0;

  // optional double askVolatility = 1;
  if (this->askvolatility() != 0) {
    total_size += 1 + 8;
  }

  // optional double bidVolatility = 2;
  if (this->bidvolatility() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBImpliedVolatility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBImpliedVolatility)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBImpliedVolatility* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBImpliedVolatility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBImpliedVolatility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBImpliedVolatility)
    MergeFrom(*source);
  }
}

void PBImpliedVolatility::MergeFrom(const PBImpliedVolatility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBImpliedVolatility)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.askvolatility() != 0) {
    set_askvolatility(from.askvolatility());
  }
  if (from.bidvolatility() != 0) {
    set_bidvolatility(from.bidvolatility());
  }
}

void PBImpliedVolatility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBImpliedVolatility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBImpliedVolatility::CopyFrom(const PBImpliedVolatility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBImpliedVolatility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBImpliedVolatility::IsInitialized() const {

  return true;
}

void PBImpliedVolatility::Swap(PBImpliedVolatility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBImpliedVolatility::InternalSwap(PBImpliedVolatility* other) {
  std::swap(askvolatility_, other->askvolatility_);
  std::swap(bidvolatility_, other->bidvolatility_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBImpliedVolatility::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBImpliedVolatility_descriptor_;
  metadata.reflection = PBImpliedVolatility_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBImpliedVolatility

// optional double askVolatility = 1;
void PBImpliedVolatility::clear_askvolatility() {
  askvolatility_ = 0;
}
 double PBImpliedVolatility::askvolatility() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBImpliedVolatility.askVolatility)
  return askvolatility_;
}
 void PBImpliedVolatility::set_askvolatility(double value) {
  
  askvolatility_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBImpliedVolatility.askVolatility)
}

// optional double bidVolatility = 2;
void PBImpliedVolatility::clear_bidvolatility() {
  bidvolatility_ = 0;
}
 double PBImpliedVolatility::bidvolatility() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBImpliedVolatility.bidVolatility)
  return bidvolatility_;
}
 void PBImpliedVolatility::set_bidvolatility(double value) {
  
  bidvolatility_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBImpliedVolatility.bidVolatility)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOptionData::kAskPriceFieldNumber;
const int PBOptionData::kBidPriceFieldNumber;
const int PBOptionData::kAskSizeFieldNumber;
const int PBOptionData::kBidSizeFieldNumber;
const int PBOptionData::kAskVolatilityFieldNumber;
const int PBOptionData::kBidVolatilityFieldNumber;
const int PBOptionData::kMidVolatilityFieldNumber;
const int PBOptionData::kDeltaFieldNumber;
const int PBOptionData::kThetaFieldNumber;
const int PBOptionData::kGammaFieldNumber;
const int PBOptionData::kVegaFieldNumber;
const int PBOptionData::kRhoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOptionData::PBOptionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOptionData)
}

void PBOptionData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBOptionData::PBOptionData(const PBOptionData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOptionData)
}

void PBOptionData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  askprice_ = 0;
  bidprice_ = 0;
  asksize_ = 0;
  bidsize_ = 0;
  askvolatility_ = 0;
  bidvolatility_ = 0;
  midvolatility_ = 0;
  delta_ = 0;
  theta_ = 0;
  gamma_ = 0;
  vega_ = 0;
  rho_ = 0;
}

PBOptionData::~PBOptionData() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOptionData)
  SharedDtor();
}

void PBOptionData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBOptionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOptionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOptionData_descriptor_;
}

const PBOptionData& PBOptionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOptionData* PBOptionData::default_instance_ = NULL;

PBOptionData* PBOptionData::New(::google::protobuf::Arena* arena) const {
  PBOptionData* n = new PBOptionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOptionData::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOptionData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBOptionData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBOptionData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(askprice_, delta_);
  ZR_(theta_, rho_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBOptionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOptionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double askPrice = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_bidPrice;
        break;
      }

      // optional double bidPrice = 2;
      case 2: {
        if (tag == 17) {
         parse_bidPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_askSize;
        break;
      }

      // optional int32 askSize = 3;
      case 3: {
        if (tag == 24) {
         parse_askSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asksize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bidSize;
        break;
      }

      // optional int32 bidSize = 4;
      case 4: {
        if (tag == 32) {
         parse_bidSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_askVolatility;
        break;
      }

      // optional double askVolatility = 5;
      case 5: {
        if (tag == 41) {
         parse_askVolatility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askvolatility_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_bidVolatility;
        break;
      }

      // optional double bidVolatility = 6;
      case 6: {
        if (tag == 49) {
         parse_bidVolatility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidvolatility_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_midVolatility;
        break;
      }

      // optional double midVolatility = 7;
      case 7: {
        if (tag == 57) {
         parse_midVolatility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &midvolatility_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_delta;
        break;
      }

      // optional double delta = 8;
      case 8: {
        if (tag == 65) {
         parse_delta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_theta;
        break;
      }

      // optional double theta = 9;
      case 9: {
        if (tag == 73) {
         parse_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_gamma;
        break;
      }

      // optional double gamma = 10;
      case 10: {
        if (tag == 81) {
         parse_gamma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gamma_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_vega;
        break;
      }

      // optional double vega = 11;
      case 11: {
        if (tag == 89) {
         parse_vega:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vega_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_rho;
        break;
      }

      // optional double rho = 12;
      case 12: {
        if (tag == 97) {
         parse_rho:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rho_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOptionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOptionData)
  return false;
#undef DO_
}

void PBOptionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOptionData)
  // optional double askPrice = 1;
  if (this->askprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->askprice(), output);
  }

  // optional double bidPrice = 2;
  if (this->bidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->bidprice(), output);
  }

  // optional int32 askSize = 3;
  if (this->asksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->asksize(), output);
  }

  // optional int32 bidSize = 4;
  if (this->bidsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bidsize(), output);
  }

  // optional double askVolatility = 5;
  if (this->askvolatility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->askvolatility(), output);
  }

  // optional double bidVolatility = 6;
  if (this->bidvolatility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bidvolatility(), output);
  }

  // optional double midVolatility = 7;
  if (this->midvolatility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->midvolatility(), output);
  }

  // optional double delta = 8;
  if (this->delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->delta(), output);
  }

  // optional double theta = 9;
  if (this->theta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->theta(), output);
  }

  // optional double gamma = 10;
  if (this->gamma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->gamma(), output);
  }

  // optional double vega = 11;
  if (this->vega() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->vega(), output);
  }

  // optional double rho = 12;
  if (this->rho() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->rho(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOptionData)
}

::google::protobuf::uint8* PBOptionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOptionData)
  // optional double askPrice = 1;
  if (this->askprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->askprice(), target);
  }

  // optional double bidPrice = 2;
  if (this->bidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->bidprice(), target);
  }

  // optional int32 askSize = 3;
  if (this->asksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->asksize(), target);
  }

  // optional int32 bidSize = 4;
  if (this->bidsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bidsize(), target);
  }

  // optional double askVolatility = 5;
  if (this->askvolatility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->askvolatility(), target);
  }

  // optional double bidVolatility = 6;
  if (this->bidvolatility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bidvolatility(), target);
  }

  // optional double midVolatility = 7;
  if (this->midvolatility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->midvolatility(), target);
  }

  // optional double delta = 8;
  if (this->delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->delta(), target);
  }

  // optional double theta = 9;
  if (this->theta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->theta(), target);
  }

  // optional double gamma = 10;
  if (this->gamma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->gamma(), target);
  }

  // optional double vega = 11;
  if (this->vega() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->vega(), target);
  }

  // optional double rho = 12;
  if (this->rho() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->rho(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOptionData)
  return target;
}

int PBOptionData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOptionData)
  int total_size = 0;

  // optional double askPrice = 1;
  if (this->askprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double bidPrice = 2;
  if (this->bidprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 askSize = 3;
  if (this->asksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->asksize());
  }

  // optional int32 bidSize = 4;
  if (this->bidsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidsize());
  }

  // optional double askVolatility = 5;
  if (this->askvolatility() != 0) {
    total_size += 1 + 8;
  }

  // optional double bidVolatility = 6;
  if (this->bidvolatility() != 0) {
    total_size += 1 + 8;
  }

  // optional double midVolatility = 7;
  if (this->midvolatility() != 0) {
    total_size += 1 + 8;
  }

  // optional double delta = 8;
  if (this->delta() != 0) {
    total_size += 1 + 8;
  }

  // optional double theta = 9;
  if (this->theta() != 0) {
    total_size += 1 + 8;
  }

  // optional double gamma = 10;
  if (this->gamma() != 0) {
    total_size += 1 + 8;
  }

  // optional double vega = 11;
  if (this->vega() != 0) {
    total_size += 1 + 8;
  }

  // optional double rho = 12;
  if (this->rho() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOptionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOptionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOptionData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOptionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOptionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOptionData)
    MergeFrom(*source);
  }
}

void PBOptionData::MergeFrom(const PBOptionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOptionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.askprice() != 0) {
    set_askprice(from.askprice());
  }
  if (from.bidprice() != 0) {
    set_bidprice(from.bidprice());
  }
  if (from.asksize() != 0) {
    set_asksize(from.asksize());
  }
  if (from.bidsize() != 0) {
    set_bidsize(from.bidsize());
  }
  if (from.askvolatility() != 0) {
    set_askvolatility(from.askvolatility());
  }
  if (from.bidvolatility() != 0) {
    set_bidvolatility(from.bidvolatility());
  }
  if (from.midvolatility() != 0) {
    set_midvolatility(from.midvolatility());
  }
  if (from.delta() != 0) {
    set_delta(from.delta());
  }
  if (from.theta() != 0) {
    set_theta(from.theta());
  }
  if (from.gamma() != 0) {
    set_gamma(from.gamma());
  }
  if (from.vega() != 0) {
    set_vega(from.vega());
  }
  if (from.rho() != 0) {
    set_rho(from.rho());
  }
}

void PBOptionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOptionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOptionData::CopyFrom(const PBOptionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOptionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOptionData::IsInitialized() const {

  return true;
}

void PBOptionData::Swap(PBOptionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOptionData::InternalSwap(PBOptionData* other) {
  std::swap(askprice_, other->askprice_);
  std::swap(bidprice_, other->bidprice_);
  std::swap(asksize_, other->asksize_);
  std::swap(bidsize_, other->bidsize_);
  std::swap(askvolatility_, other->askvolatility_);
  std::swap(bidvolatility_, other->bidvolatility_);
  std::swap(midvolatility_, other->midvolatility_);
  std::swap(delta_, other->delta_);
  std::swap(theta_, other->theta_);
  std::swap(gamma_, other->gamma_);
  std::swap(vega_, other->vega_);
  std::swap(rho_, other->rho_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOptionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOptionData_descriptor_;
  metadata.reflection = PBOptionData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOptionData

// optional double askPrice = 1;
void PBOptionData::clear_askprice() {
  askprice_ = 0;
}
 double PBOptionData::askprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.askPrice)
  return askprice_;
}
 void PBOptionData::set_askprice(double value) {
  
  askprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.askPrice)
}

// optional double bidPrice = 2;
void PBOptionData::clear_bidprice() {
  bidprice_ = 0;
}
 double PBOptionData::bidprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.bidPrice)
  return bidprice_;
}
 void PBOptionData::set_bidprice(double value) {
  
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.bidPrice)
}

// optional int32 askSize = 3;
void PBOptionData::clear_asksize() {
  asksize_ = 0;
}
 ::google::protobuf::int32 PBOptionData::asksize() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.askSize)
  return asksize_;
}
 void PBOptionData::set_asksize(::google::protobuf::int32 value) {
  
  asksize_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.askSize)
}

// optional int32 bidSize = 4;
void PBOptionData::clear_bidsize() {
  bidsize_ = 0;
}
 ::google::protobuf::int32 PBOptionData::bidsize() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.bidSize)
  return bidsize_;
}
 void PBOptionData::set_bidsize(::google::protobuf::int32 value) {
  
  bidsize_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.bidSize)
}

// optional double askVolatility = 5;
void PBOptionData::clear_askvolatility() {
  askvolatility_ = 0;
}
 double PBOptionData::askvolatility() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.askVolatility)
  return askvolatility_;
}
 void PBOptionData::set_askvolatility(double value) {
  
  askvolatility_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.askVolatility)
}

// optional double bidVolatility = 6;
void PBOptionData::clear_bidvolatility() {
  bidvolatility_ = 0;
}
 double PBOptionData::bidvolatility() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.bidVolatility)
  return bidvolatility_;
}
 void PBOptionData::set_bidvolatility(double value) {
  
  bidvolatility_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.bidVolatility)
}

// optional double midVolatility = 7;
void PBOptionData::clear_midvolatility() {
  midvolatility_ = 0;
}
 double PBOptionData::midvolatility() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.midVolatility)
  return midvolatility_;
}
 void PBOptionData::set_midvolatility(double value) {
  
  midvolatility_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.midVolatility)
}

// optional double delta = 8;
void PBOptionData::clear_delta() {
  delta_ = 0;
}
 double PBOptionData::delta() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.delta)
  return delta_;
}
 void PBOptionData::set_delta(double value) {
  
  delta_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.delta)
}

// optional double theta = 9;
void PBOptionData::clear_theta() {
  theta_ = 0;
}
 double PBOptionData::theta() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.theta)
  return theta_;
}
 void PBOptionData::set_theta(double value) {
  
  theta_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.theta)
}

// optional double gamma = 10;
void PBOptionData::clear_gamma() {
  gamma_ = 0;
}
 double PBOptionData::gamma() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.gamma)
  return gamma_;
}
 void PBOptionData::set_gamma(double value) {
  
  gamma_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.gamma)
}

// optional double vega = 11;
void PBOptionData::clear_vega() {
  vega_ = 0;
}
 double PBOptionData::vega() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.vega)
  return vega_;
}
 void PBOptionData::set_vega(double value) {
  
  vega_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.vega)
}

// optional double rho = 12;
void PBOptionData::clear_rho() {
  rho_ = 0;
}
 double PBOptionData::rho() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOptionData.rho)
  return rho_;
}
 void PBOptionData::set_rho(double value) {
  
  rho_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOptionData.rho)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBWingsModelReturn::kFAtmFieldNumber;
const int PBWingsModelReturn::kFRefFieldNumber;
const int PBWingsModelReturn::kFSynFieldNumber;
const int PBWingsModelReturn::kVolCurrFieldNumber;
const int PBWingsModelReturn::kVolCurrOffsetFieldNumber;
const int PBWingsModelReturn::kSlopeCurrFieldNumber;
const int PBWingsModelReturn::kSlopeCurrOffsetFieldNumber;
const int PBWingsModelReturn::kX0FieldNumber;
const int PBWingsModelReturn::kX1FieldNumber;
const int PBWingsModelReturn::kX2FieldNumber;
const int PBWingsModelReturn::kX3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBWingsModelReturn::PBWingsModelReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBWingsModelReturn)
}

void PBWingsModelReturn::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBWingsModelReturn::PBWingsModelReturn(const PBWingsModelReturn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBWingsModelReturn)
}

void PBWingsModelReturn::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  f_atm_ = 0;
  f_ref_ = 0;
  f_syn_ = 0;
  vol_curr_ = 0;
  vol_curr_offset_ = 0;
  slope_curr_ = 0;
  slope_curr_offset_ = 0;
  x0_ = 0;
  x1_ = 0;
  x2_ = 0;
  x3_ = 0;
}

PBWingsModelReturn::~PBWingsModelReturn() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBWingsModelReturn)
  SharedDtor();
}

void PBWingsModelReturn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBWingsModelReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBWingsModelReturn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBWingsModelReturn_descriptor_;
}

const PBWingsModelReturn& PBWingsModelReturn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBWingsModelReturn* PBWingsModelReturn::default_instance_ = NULL;

PBWingsModelReturn* PBWingsModelReturn::New(::google::protobuf::Arena* arena) const {
  PBWingsModelReturn* n = new PBWingsModelReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBWingsModelReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBWingsModelReturn)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBWingsModelReturn, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBWingsModelReturn*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(f_atm_, x0_);
  ZR_(x1_, x3_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBWingsModelReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBWingsModelReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double f_atm = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_atm_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_f_ref;
        break;
      }

      // optional double f_ref = 2;
      case 2: {
        if (tag == 17) {
         parse_f_ref:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_ref_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_f_syn;
        break;
      }

      // optional double f_syn = 3;
      case 3: {
        if (tag == 25) {
         parse_f_syn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_syn_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_vol_curr;
        break;
      }

      // optional double vol_curr = 5;
      case 5: {
        if (tag == 41) {
         parse_vol_curr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol_curr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_vol_curr_offset;
        break;
      }

      // optional double vol_curr_offset = 6;
      case 6: {
        if (tag == 49) {
         parse_vol_curr_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol_curr_offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_slope_curr;
        break;
      }

      // optional double slope_curr = 7;
      case 7: {
        if (tag == 57) {
         parse_slope_curr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slope_curr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_slope_curr_offset;
        break;
      }

      // optional double slope_curr_offset = 8;
      case 8: {
        if (tag == 65) {
         parse_slope_curr_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slope_curr_offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_x0;
        break;
      }

      // optional double x0 = 9;
      case 9: {
        if (tag == 73) {
         parse_x0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_x1;
        break;
      }

      // optional double x1 = 11;
      case 11: {
        if (tag == 89) {
         parse_x1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_x2;
        break;
      }

      // optional double x2 = 13;
      case 13: {
        if (tag == 105) {
         parse_x2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_x3;
        break;
      }

      // optional double x3 = 15;
      case 15: {
        if (tag == 121) {
         parse_x3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBWingsModelReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBWingsModelReturn)
  return false;
#undef DO_
}

void PBWingsModelReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBWingsModelReturn)
  // optional double f_atm = 1;
  if (this->f_atm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->f_atm(), output);
  }

  // optional double f_ref = 2;
  if (this->f_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->f_ref(), output);
  }

  // optional double f_syn = 3;
  if (this->f_syn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->f_syn(), output);
  }

  // optional double vol_curr = 5;
  if (this->vol_curr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->vol_curr(), output);
  }

  // optional double vol_curr_offset = 6;
  if (this->vol_curr_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vol_curr_offset(), output);
  }

  // optional double slope_curr = 7;
  if (this->slope_curr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->slope_curr(), output);
  }

  // optional double slope_curr_offset = 8;
  if (this->slope_curr_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->slope_curr_offset(), output);
  }

  // optional double x0 = 9;
  if (this->x0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->x0(), output);
  }

  // optional double x1 = 11;
  if (this->x1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->x1(), output);
  }

  // optional double x2 = 13;
  if (this->x2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->x2(), output);
  }

  // optional double x3 = 15;
  if (this->x3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->x3(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBWingsModelReturn)
}

::google::protobuf::uint8* PBWingsModelReturn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBWingsModelReturn)
  // optional double f_atm = 1;
  if (this->f_atm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->f_atm(), target);
  }

  // optional double f_ref = 2;
  if (this->f_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->f_ref(), target);
  }

  // optional double f_syn = 3;
  if (this->f_syn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->f_syn(), target);
  }

  // optional double vol_curr = 5;
  if (this->vol_curr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->vol_curr(), target);
  }

  // optional double vol_curr_offset = 6;
  if (this->vol_curr_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->vol_curr_offset(), target);
  }

  // optional double slope_curr = 7;
  if (this->slope_curr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->slope_curr(), target);
  }

  // optional double slope_curr_offset = 8;
  if (this->slope_curr_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->slope_curr_offset(), target);
  }

  // optional double x0 = 9;
  if (this->x0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->x0(), target);
  }

  // optional double x1 = 11;
  if (this->x1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->x1(), target);
  }

  // optional double x2 = 13;
  if (this->x2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->x2(), target);
  }

  // optional double x3 = 15;
  if (this->x3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->x3(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBWingsModelReturn)
  return target;
}

int PBWingsModelReturn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBWingsModelReturn)
  int total_size = 0;

  // optional double f_atm = 1;
  if (this->f_atm() != 0) {
    total_size += 1 + 8;
  }

  // optional double f_ref = 2;
  if (this->f_ref() != 0) {
    total_size += 1 + 8;
  }

  // optional double f_syn = 3;
  if (this->f_syn() != 0) {
    total_size += 1 + 8;
  }

  // optional double vol_curr = 5;
  if (this->vol_curr() != 0) {
    total_size += 1 + 8;
  }

  // optional double vol_curr_offset = 6;
  if (this->vol_curr_offset() != 0) {
    total_size += 1 + 8;
  }

  // optional double slope_curr = 7;
  if (this->slope_curr() != 0) {
    total_size += 1 + 8;
  }

  // optional double slope_curr_offset = 8;
  if (this->slope_curr_offset() != 0) {
    total_size += 1 + 8;
  }

  // optional double x0 = 9;
  if (this->x0() != 0) {
    total_size += 1 + 8;
  }

  // optional double x1 = 11;
  if (this->x1() != 0) {
    total_size += 1 + 8;
  }

  // optional double x2 = 13;
  if (this->x2() != 0) {
    total_size += 1 + 8;
  }

  // optional double x3 = 15;
  if (this->x3() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBWingsModelReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBWingsModelReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBWingsModelReturn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBWingsModelReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBWingsModelReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBWingsModelReturn)
    MergeFrom(*source);
  }
}

void PBWingsModelReturn::MergeFrom(const PBWingsModelReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBWingsModelReturn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.f_atm() != 0) {
    set_f_atm(from.f_atm());
  }
  if (from.f_ref() != 0) {
    set_f_ref(from.f_ref());
  }
  if (from.f_syn() != 0) {
    set_f_syn(from.f_syn());
  }
  if (from.vol_curr() != 0) {
    set_vol_curr(from.vol_curr());
  }
  if (from.vol_curr_offset() != 0) {
    set_vol_curr_offset(from.vol_curr_offset());
  }
  if (from.slope_curr() != 0) {
    set_slope_curr(from.slope_curr());
  }
  if (from.slope_curr_offset() != 0) {
    set_slope_curr_offset(from.slope_curr_offset());
  }
  if (from.x0() != 0) {
    set_x0(from.x0());
  }
  if (from.x1() != 0) {
    set_x1(from.x1());
  }
  if (from.x2() != 0) {
    set_x2(from.x2());
  }
  if (from.x3() != 0) {
    set_x3(from.x3());
  }
}

void PBWingsModelReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBWingsModelReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBWingsModelReturn::CopyFrom(const PBWingsModelReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBWingsModelReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWingsModelReturn::IsInitialized() const {

  return true;
}

void PBWingsModelReturn::Swap(PBWingsModelReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBWingsModelReturn::InternalSwap(PBWingsModelReturn* other) {
  std::swap(f_atm_, other->f_atm_);
  std::swap(f_ref_, other->f_ref_);
  std::swap(f_syn_, other->f_syn_);
  std::swap(vol_curr_, other->vol_curr_);
  std::swap(vol_curr_offset_, other->vol_curr_offset_);
  std::swap(slope_curr_, other->slope_curr_);
  std::swap(slope_curr_offset_, other->slope_curr_offset_);
  std::swap(x0_, other->x0_);
  std::swap(x1_, other->x1_);
  std::swap(x2_, other->x2_);
  std::swap(x3_, other->x3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBWingsModelReturn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBWingsModelReturn_descriptor_;
  metadata.reflection = PBWingsModelReturn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBWingsModelReturn

// optional double f_atm = 1;
void PBWingsModelReturn::clear_f_atm() {
  f_atm_ = 0;
}
 double PBWingsModelReturn::f_atm() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.f_atm)
  return f_atm_;
}
 void PBWingsModelReturn::set_f_atm(double value) {
  
  f_atm_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.f_atm)
}

// optional double f_ref = 2;
void PBWingsModelReturn::clear_f_ref() {
  f_ref_ = 0;
}
 double PBWingsModelReturn::f_ref() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.f_ref)
  return f_ref_;
}
 void PBWingsModelReturn::set_f_ref(double value) {
  
  f_ref_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.f_ref)
}

// optional double f_syn = 3;
void PBWingsModelReturn::clear_f_syn() {
  f_syn_ = 0;
}
 double PBWingsModelReturn::f_syn() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.f_syn)
  return f_syn_;
}
 void PBWingsModelReturn::set_f_syn(double value) {
  
  f_syn_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.f_syn)
}

// optional double vol_curr = 5;
void PBWingsModelReturn::clear_vol_curr() {
  vol_curr_ = 0;
}
 double PBWingsModelReturn::vol_curr() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.vol_curr)
  return vol_curr_;
}
 void PBWingsModelReturn::set_vol_curr(double value) {
  
  vol_curr_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.vol_curr)
}

// optional double vol_curr_offset = 6;
void PBWingsModelReturn::clear_vol_curr_offset() {
  vol_curr_offset_ = 0;
}
 double PBWingsModelReturn::vol_curr_offset() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.vol_curr_offset)
  return vol_curr_offset_;
}
 void PBWingsModelReturn::set_vol_curr_offset(double value) {
  
  vol_curr_offset_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.vol_curr_offset)
}

// optional double slope_curr = 7;
void PBWingsModelReturn::clear_slope_curr() {
  slope_curr_ = 0;
}
 double PBWingsModelReturn::slope_curr() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.slope_curr)
  return slope_curr_;
}
 void PBWingsModelReturn::set_slope_curr(double value) {
  
  slope_curr_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.slope_curr)
}

// optional double slope_curr_offset = 8;
void PBWingsModelReturn::clear_slope_curr_offset() {
  slope_curr_offset_ = 0;
}
 double PBWingsModelReturn::slope_curr_offset() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.slope_curr_offset)
  return slope_curr_offset_;
}
 void PBWingsModelReturn::set_slope_curr_offset(double value) {
  
  slope_curr_offset_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.slope_curr_offset)
}

// optional double x0 = 9;
void PBWingsModelReturn::clear_x0() {
  x0_ = 0;
}
 double PBWingsModelReturn::x0() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.x0)
  return x0_;
}
 void PBWingsModelReturn::set_x0(double value) {
  
  x0_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.x0)
}

// optional double x1 = 11;
void PBWingsModelReturn::clear_x1() {
  x1_ = 0;
}
 double PBWingsModelReturn::x1() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.x1)
  return x1_;
}
 void PBWingsModelReturn::set_x1(double value) {
  
  x1_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.x1)
}

// optional double x2 = 13;
void PBWingsModelReturn::clear_x2() {
  x2_ = 0;
}
 double PBWingsModelReturn::x2() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.x2)
  return x2_;
}
 void PBWingsModelReturn::set_x2(double value) {
  
  x2_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.x2)
}

// optional double x3 = 15;
void PBWingsModelReturn::clear_x3() {
  x3_ = 0;
}
 double PBWingsModelReturn::x3() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBWingsModelReturn.x3)
  return x3_;
}
 void PBWingsModelReturn::set_x3(double value) {
  
  x3_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBWingsModelReturn.x3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTradingDeskOptionParams::kHeaderFieldNumber;
const int PBTradingDeskOptionParams::kExchangeFieldNumber;
const int PBTradingDeskOptionParams::kContractFieldNumber;
const int PBTradingDeskOptionParams::kMarketDataFieldNumber;
const int PBTradingDeskOptionParams::kImpliedVolFieldNumber;
const int PBTradingDeskOptionParams::kTheoDataFieldNumber;
const int PBTradingDeskOptionParams::kWingsReturnFieldNumber;
const int PBTradingDeskOptionParams::kTheoDataTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTradingDeskOptionParams::PBTradingDeskOptionParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBTradingDeskOptionParams)
}

void PBTradingDeskOptionParams::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
  marketdata_ = const_cast< ::Micro::Future::Message::Business::PBOptionMarketData*>(&::Micro::Future::Message::Business::PBOptionMarketData::default_instance());
  impliedvol_ = const_cast< ::Micro::Future::Message::Business::PBImpliedVolatility*>(&::Micro::Future::Message::Business::PBImpliedVolatility::default_instance());
  theodata_ = const_cast< ::Micro::Future::Message::Business::PBOptionData*>(&::Micro::Future::Message::Business::PBOptionData::default_instance());
  wingsreturn_ = const_cast< ::Micro::Future::Message::Business::PBWingsModelReturn*>(&::Micro::Future::Message::Business::PBWingsModelReturn::default_instance());
  theodatatemp_ = const_cast< ::Micro::Future::Message::Business::PBOptionData*>(&::Micro::Future::Message::Business::PBOptionData::default_instance());
}

PBTradingDeskOptionParams::PBTradingDeskOptionParams(const PBTradingDeskOptionParams& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBTradingDeskOptionParams)
}

void PBTradingDeskOptionParams::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketdata_ = NULL;
  impliedvol_ = NULL;
  theodata_ = NULL;
  wingsreturn_ = NULL;
  theodatatemp_ = NULL;
}

PBTradingDeskOptionParams::~PBTradingDeskOptionParams() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  SharedDtor();
}

void PBTradingDeskOptionParams::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
    delete marketdata_;
    delete impliedvol_;
    delete theodata_;
    delete wingsreturn_;
    delete theodatatemp_;
  }
}

void PBTradingDeskOptionParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTradingDeskOptionParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTradingDeskOptionParams_descriptor_;
}

const PBTradingDeskOptionParams& PBTradingDeskOptionParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBTradingDeskOptionParams* PBTradingDeskOptionParams::default_instance_ = NULL;

PBTradingDeskOptionParams* PBTradingDeskOptionParams::New(::google::protobuf::Arena* arena) const {
  PBTradingDeskOptionParams* n = new PBTradingDeskOptionParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTradingDeskOptionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) delete marketdata_;
  marketdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && impliedvol_ != NULL) delete impliedvol_;
  impliedvol_ = NULL;
  if (GetArenaNoVirtual() == NULL && theodata_ != NULL) delete theodata_;
  theodata_ = NULL;
  if (GetArenaNoVirtual() == NULL && wingsreturn_ != NULL) delete wingsreturn_;
  wingsreturn_ = NULL;
  if (GetArenaNoVirtual() == NULL && theodatatemp_ != NULL) delete theodatatemp_;
  theodatatemp_ = NULL;
}

bool PBTradingDeskOptionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradingDeskOptionParams.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_marketData;
        break;
      }

      // optional .Micro.Future.Message.Business.PBOptionMarketData marketData = 4;
      case 4: {
        if (tag == 34) {
         parse_marketData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_marketdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_impliedVol;
        break;
      }

      // optional .Micro.Future.Message.Business.PBImpliedVolatility impliedVol = 5;
      case 5: {
        if (tag == 42) {
         parse_impliedVol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_impliedvol()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_theoData;
        break;
      }

      // optional .Micro.Future.Message.Business.PBOptionData theoData = 6;
      case 6: {
        if (tag == 50) {
         parse_theoData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_theodata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_wingsReturn;
        break;
      }

      // optional .Micro.Future.Message.Business.PBWingsModelReturn wingsReturn = 7;
      case 7: {
        if (tag == 58) {
         parse_wingsReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wingsreturn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_theoDataTemp;
        break;
      }

      // optional .Micro.Future.Message.Business.PBOptionData theoDataTemp = 8;
      case 8: {
        if (tag == 66) {
         parse_theoDataTemp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_theodatatemp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  return false;
#undef DO_
}

void PBTradingDeskOptionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradingDeskOptionParams.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional .Micro.Future.Message.Business.PBOptionMarketData marketData = 4;
  if (this->has_marketdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->marketdata_, output);
  }

  // optional .Micro.Future.Message.Business.PBImpliedVolatility impliedVol = 5;
  if (this->has_impliedvol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->impliedvol_, output);
  }

  // optional .Micro.Future.Message.Business.PBOptionData theoData = 6;
  if (this->has_theodata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->theodata_, output);
  }

  // optional .Micro.Future.Message.Business.PBWingsModelReturn wingsReturn = 7;
  if (this->has_wingsreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->wingsreturn_, output);
  }

  // optional .Micro.Future.Message.Business.PBOptionData theoDataTemp = 8;
  if (this->has_theodatatemp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->theodatatemp_, output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBTradingDeskOptionParams)
}

::google::protobuf::uint8* PBTradingDeskOptionParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradingDeskOptionParams.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional .Micro.Future.Message.Business.PBOptionMarketData marketData = 4;
  if (this->has_marketdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->marketdata_, target);
  }

  // optional .Micro.Future.Message.Business.PBImpliedVolatility impliedVol = 5;
  if (this->has_impliedvol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->impliedvol_, target);
  }

  // optional .Micro.Future.Message.Business.PBOptionData theoData = 6;
  if (this->has_theodata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->theodata_, target);
  }

  // optional .Micro.Future.Message.Business.PBWingsModelReturn wingsReturn = 7;
  if (this->has_wingsreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->wingsreturn_, target);
  }

  // optional .Micro.Future.Message.Business.PBOptionData theoDataTemp = 8;
  if (this->has_theodatatemp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->theodatatemp_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  return target;
}

int PBTradingDeskOptionParams::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional .Micro.Future.Message.Business.PBOptionMarketData marketData = 4;
  if (this->has_marketdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->marketdata_);
  }

  // optional .Micro.Future.Message.Business.PBImpliedVolatility impliedVol = 5;
  if (this->has_impliedvol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->impliedvol_);
  }

  // optional .Micro.Future.Message.Business.PBOptionData theoData = 6;
  if (this->has_theodata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->theodata_);
  }

  // optional .Micro.Future.Message.Business.PBWingsModelReturn wingsReturn = 7;
  if (this->has_wingsreturn()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->wingsreturn_);
  }

  // optional .Micro.Future.Message.Business.PBOptionData theoDataTemp = 8;
  if (this->has_theodatatemp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->theodatatemp_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTradingDeskOptionParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTradingDeskOptionParams* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTradingDeskOptionParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBTradingDeskOptionParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBTradingDeskOptionParams)
    MergeFrom(*source);
  }
}

void PBTradingDeskOptionParams::MergeFrom(const PBTradingDeskOptionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.has_marketdata()) {
    mutable_marketdata()->::Micro::Future::Message::Business::PBOptionMarketData::MergeFrom(from.marketdata());
  }
  if (from.has_impliedvol()) {
    mutable_impliedvol()->::Micro::Future::Message::Business::PBImpliedVolatility::MergeFrom(from.impliedvol());
  }
  if (from.has_theodata()) {
    mutable_theodata()->::Micro::Future::Message::Business::PBOptionData::MergeFrom(from.theodata());
  }
  if (from.has_wingsreturn()) {
    mutable_wingsreturn()->::Micro::Future::Message::Business::PBWingsModelReturn::MergeFrom(from.wingsreturn());
  }
  if (from.has_theodatatemp()) {
    mutable_theodatatemp()->::Micro::Future::Message::Business::PBOptionData::MergeFrom(from.theodatatemp());
  }
}

void PBTradingDeskOptionParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTradingDeskOptionParams::CopyFrom(const PBTradingDeskOptionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBTradingDeskOptionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTradingDeskOptionParams::IsInitialized() const {

  return true;
}

void PBTradingDeskOptionParams::Swap(PBTradingDeskOptionParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTradingDeskOptionParams::InternalSwap(PBTradingDeskOptionParams* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(marketdata_, other->marketdata_);
  std::swap(impliedvol_, other->impliedvol_);
  std::swap(theodata_, other->theodata_);
  std::swap(wingsreturn_, other->wingsreturn_);
  std::swap(theodatatemp_, other->theodatatemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTradingDeskOptionParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTradingDeskOptionParams_descriptor_;
  metadata.reflection = PBTradingDeskOptionParams_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTradingDeskOptionParams

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBTradingDeskOptionParams::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBTradingDeskOptionParams::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBTradingDeskOptionParams::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBTradingDeskOptionParams::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBTradingDeskOptionParams::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBTradingDeskOptionParams::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.header)
}

// optional string exchange = 2;
void PBTradingDeskOptionParams::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradingDeskOptionParams::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradingDeskOptionParams::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
}
 void PBTradingDeskOptionParams::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
}
 void PBTradingDeskOptionParams::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
}
 ::std::string* PBTradingDeskOptionParams::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradingDeskOptionParams::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradingDeskOptionParams::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.exchange)
}

// optional string contract = 3;
void PBTradingDeskOptionParams::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradingDeskOptionParams::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradingDeskOptionParams::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
}
 void PBTradingDeskOptionParams::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
}
 void PBTradingDeskOptionParams::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
}
 ::std::string* PBTradingDeskOptionParams::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradingDeskOptionParams::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradingDeskOptionParams::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.contract)
}

// optional .Micro.Future.Message.Business.PBOptionMarketData marketData = 4;
bool PBTradingDeskOptionParams::has_marketdata() const {
  return !_is_default_instance_ && marketdata_ != NULL;
}
void PBTradingDeskOptionParams::clear_marketdata() {
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) delete marketdata_;
  marketdata_ = NULL;
}
const ::Micro::Future::Message::Business::PBOptionMarketData& PBTradingDeskOptionParams::marketdata() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.marketData)
  return marketdata_ != NULL ? *marketdata_ : *default_instance_->marketdata_;
}
::Micro::Future::Message::Business::PBOptionMarketData* PBTradingDeskOptionParams::mutable_marketdata() {
  
  if (marketdata_ == NULL) {
    marketdata_ = new ::Micro::Future::Message::Business::PBOptionMarketData;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.marketData)
  return marketdata_;
}
::Micro::Future::Message::Business::PBOptionMarketData* PBTradingDeskOptionParams::release_marketdata() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.marketData)
  
  ::Micro::Future::Message::Business::PBOptionMarketData* temp = marketdata_;
  marketdata_ = NULL;
  return temp;
}
void PBTradingDeskOptionParams::set_allocated_marketdata(::Micro::Future::Message::Business::PBOptionMarketData* marketdata) {
  delete marketdata_;
  marketdata_ = marketdata;
  if (marketdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.marketData)
}

// optional .Micro.Future.Message.Business.PBImpliedVolatility impliedVol = 5;
bool PBTradingDeskOptionParams::has_impliedvol() const {
  return !_is_default_instance_ && impliedvol_ != NULL;
}
void PBTradingDeskOptionParams::clear_impliedvol() {
  if (GetArenaNoVirtual() == NULL && impliedvol_ != NULL) delete impliedvol_;
  impliedvol_ = NULL;
}
const ::Micro::Future::Message::Business::PBImpliedVolatility& PBTradingDeskOptionParams::impliedvol() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.impliedVol)
  return impliedvol_ != NULL ? *impliedvol_ : *default_instance_->impliedvol_;
}
::Micro::Future::Message::Business::PBImpliedVolatility* PBTradingDeskOptionParams::mutable_impliedvol() {
  
  if (impliedvol_ == NULL) {
    impliedvol_ = new ::Micro::Future::Message::Business::PBImpliedVolatility;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.impliedVol)
  return impliedvol_;
}
::Micro::Future::Message::Business::PBImpliedVolatility* PBTradingDeskOptionParams::release_impliedvol() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.impliedVol)
  
  ::Micro::Future::Message::Business::PBImpliedVolatility* temp = impliedvol_;
  impliedvol_ = NULL;
  return temp;
}
void PBTradingDeskOptionParams::set_allocated_impliedvol(::Micro::Future::Message::Business::PBImpliedVolatility* impliedvol) {
  delete impliedvol_;
  impliedvol_ = impliedvol;
  if (impliedvol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.impliedVol)
}

// optional .Micro.Future.Message.Business.PBOptionData theoData = 6;
bool PBTradingDeskOptionParams::has_theodata() const {
  return !_is_default_instance_ && theodata_ != NULL;
}
void PBTradingDeskOptionParams::clear_theodata() {
  if (GetArenaNoVirtual() == NULL && theodata_ != NULL) delete theodata_;
  theodata_ = NULL;
}
const ::Micro::Future::Message::Business::PBOptionData& PBTradingDeskOptionParams::theodata() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoData)
  return theodata_ != NULL ? *theodata_ : *default_instance_->theodata_;
}
::Micro::Future::Message::Business::PBOptionData* PBTradingDeskOptionParams::mutable_theodata() {
  
  if (theodata_ == NULL) {
    theodata_ = new ::Micro::Future::Message::Business::PBOptionData;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoData)
  return theodata_;
}
::Micro::Future::Message::Business::PBOptionData* PBTradingDeskOptionParams::release_theodata() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoData)
  
  ::Micro::Future::Message::Business::PBOptionData* temp = theodata_;
  theodata_ = NULL;
  return temp;
}
void PBTradingDeskOptionParams::set_allocated_theodata(::Micro::Future::Message::Business::PBOptionData* theodata) {
  delete theodata_;
  theodata_ = theodata;
  if (theodata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoData)
}

// optional .Micro.Future.Message.Business.PBWingsModelReturn wingsReturn = 7;
bool PBTradingDeskOptionParams::has_wingsreturn() const {
  return !_is_default_instance_ && wingsreturn_ != NULL;
}
void PBTradingDeskOptionParams::clear_wingsreturn() {
  if (GetArenaNoVirtual() == NULL && wingsreturn_ != NULL) delete wingsreturn_;
  wingsreturn_ = NULL;
}
const ::Micro::Future::Message::Business::PBWingsModelReturn& PBTradingDeskOptionParams::wingsreturn() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.wingsReturn)
  return wingsreturn_ != NULL ? *wingsreturn_ : *default_instance_->wingsreturn_;
}
::Micro::Future::Message::Business::PBWingsModelReturn* PBTradingDeskOptionParams::mutable_wingsreturn() {
  
  if (wingsreturn_ == NULL) {
    wingsreturn_ = new ::Micro::Future::Message::Business::PBWingsModelReturn;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.wingsReturn)
  return wingsreturn_;
}
::Micro::Future::Message::Business::PBWingsModelReturn* PBTradingDeskOptionParams::release_wingsreturn() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.wingsReturn)
  
  ::Micro::Future::Message::Business::PBWingsModelReturn* temp = wingsreturn_;
  wingsreturn_ = NULL;
  return temp;
}
void PBTradingDeskOptionParams::set_allocated_wingsreturn(::Micro::Future::Message::Business::PBWingsModelReturn* wingsreturn) {
  delete wingsreturn_;
  wingsreturn_ = wingsreturn;
  if (wingsreturn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.wingsReturn)
}

// optional .Micro.Future.Message.Business.PBOptionData theoDataTemp = 8;
bool PBTradingDeskOptionParams::has_theodatatemp() const {
  return !_is_default_instance_ && theodatatemp_ != NULL;
}
void PBTradingDeskOptionParams::clear_theodatatemp() {
  if (GetArenaNoVirtual() == NULL && theodatatemp_ != NULL) delete theodatatemp_;
  theodatatemp_ = NULL;
}
const ::Micro::Future::Message::Business::PBOptionData& PBTradingDeskOptionParams::theodatatemp() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoDataTemp)
  return theodatatemp_ != NULL ? *theodatatemp_ : *default_instance_->theodatatemp_;
}
::Micro::Future::Message::Business::PBOptionData* PBTradingDeskOptionParams::mutable_theodatatemp() {
  
  if (theodatatemp_ == NULL) {
    theodatatemp_ = new ::Micro::Future::Message::Business::PBOptionData;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoDataTemp)
  return theodatatemp_;
}
::Micro::Future::Message::Business::PBOptionData* PBTradingDeskOptionParams::release_theodatatemp() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoDataTemp)
  
  ::Micro::Future::Message::Business::PBOptionData* temp = theodatatemp_;
  theodatatemp_ = NULL;
  return temp;
}
void PBTradingDeskOptionParams::set_allocated_theodatatemp(::Micro::Future::Message::Business::PBOptionData* theodatatemp) {
  delete theodatatemp_;
  theodatatemp_ = theodatatemp;
  if (theodatatemp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradingDeskOptionParams.theoDataTemp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPricingContract::kExchangeFieldNumber;
const int PBPricingContract::kContractFieldNumber;
const int PBPricingContract::kWeightFieldNumber;
const int PBPricingContract::kAdjustFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPricingContract::PBPricingContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPricingContract)
}

void PBPricingContract::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBPricingContract::PBPricingContract(const PBPricingContract& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPricingContract)
}

void PBPricingContract::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = 0;
  adjust_ = 0;
}

PBPricingContract::~PBPricingContract() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPricingContract)
  SharedDtor();
}

void PBPricingContract::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBPricingContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPricingContract::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPricingContract_descriptor_;
}

const PBPricingContract& PBPricingContract::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPricingContract* PBPricingContract::default_instance_ = NULL;

PBPricingContract* PBPricingContract::New(::google::protobuf::Arena* arena) const {
  PBPricingContract* n = new PBPricingContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPricingContract::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPricingContract)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPricingContract, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPricingContract*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(weight_, adjust_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBPricingContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPricingContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingContract.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPricingContract.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_weight;
        break;
      }

      // optional double weight = 3;
      case 3: {
        if (tag == 25) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_adjust;
        break;
      }

      // optional double adjust = 4;
      case 4: {
        if (tag == 33) {
         parse_adjust:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adjust_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPricingContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPricingContract)
  return false;
#undef DO_
}

void PBPricingContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPricingContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double weight = 3;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->weight(), output);
  }

  // optional double adjust = 4;
  if (this->adjust() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->adjust(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPricingContract)
}

::google::protobuf::uint8* PBPricingContract::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPricingContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPricingContract.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double weight = 3;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->weight(), target);
  }

  // optional double adjust = 4;
  if (this->adjust() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->adjust(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPricingContract)
  return target;
}

int PBPricingContract::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPricingContract)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double weight = 3;
  if (this->weight() != 0) {
    total_size += 1 + 8;
  }

  // optional double adjust = 4;
  if (this->adjust() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPricingContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPricingContract* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPricingContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPricingContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPricingContract)
    MergeFrom(*source);
  }
}

void PBPricingContract::MergeFrom(const PBPricingContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
  if (from.adjust() != 0) {
    set_adjust(from.adjust());
  }
}

void PBPricingContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPricingContract::CopyFrom(const PBPricingContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPricingContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPricingContract::IsInitialized() const {

  return true;
}

void PBPricingContract::Swap(PBPricingContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPricingContract::InternalSwap(PBPricingContract* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(weight_, other->weight_);
  std::swap(adjust_, other->adjust_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPricingContract::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPricingContract_descriptor_;
  metadata.reflection = PBPricingContract_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPricingContract

// optional string exchange = 1;
void PBPricingContract::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingContract::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.exchange)
}
 void PBPricingContract::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingContract.exchange)
}
 void PBPricingContract::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingContract.exchange)
}
 ::std::string* PBPricingContract::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingContract.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingContract::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingContract.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingContract.exchange)
}

// optional string contract = 2;
void PBPricingContract::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPricingContract::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.contract)
}
 void PBPricingContract::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPricingContract.contract)
}
 void PBPricingContract::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPricingContract.contract)
}
 ::std::string* PBPricingContract::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPricingContract.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPricingContract::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPricingContract.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPricingContract::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPricingContract.contract)
}

// optional double weight = 3;
void PBPricingContract::clear_weight() {
  weight_ = 0;
}
 double PBPricingContract::weight() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.weight)
  return weight_;
}
 void PBPricingContract::set_weight(double value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.weight)
}

// optional double adjust = 4;
void PBPricingContract::clear_adjust() {
  adjust_ = 0;
}
 double PBPricingContract::adjust() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPricingContract.adjust)
  return adjust_;
}
 void PBPricingContract::set_adjust(double value) {
  
  adjust_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPricingContract.adjust)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBStrategy::kHeaderFieldNumber;
const int PBStrategy::kExchangeFieldNumber;
const int PBStrategy::kContractFieldNumber;
const int PBStrategy::kUnderlyingFieldNumber;
const int PBStrategy::kSymbolFieldNumber;
const int PBStrategy::kHedgingFieldNumber;
const int PBStrategy::kBidEnabledFieldNumber;
const int PBStrategy::kAskEnabledFieldNumber;
const int PBStrategy::kBidQVFieldNumber;
const int PBStrategy::kAskQVFieldNumber;
const int PBStrategy::kDepthFieldNumber;
const int PBStrategy::kPricingContractsFieldNumber;
const int PBStrategy::kPricingModelFieldNumber;
const int PBStrategy::kIvmContractsFieldNumber;
const int PBStrategy::kIvModelFieldNumber;
const int PBStrategy::kVolContractsFieldNumber;
const int PBStrategy::kVolModelFieldNumber;
const int PBStrategy::kBaseExchangeFieldNumber;
const int PBStrategy::kBaseContractFieldNumber;
const int PBStrategy::kPortfolioFieldNumber;
const int PBStrategy::kMaxAutoTradeFieldNumber;
const int PBStrategy::kBidCounterFieldNumber;
const int PBStrategy::kAskCounterFieldNumber;
const int PBStrategy::kBidNotCrossFieldNumber;
const int PBStrategy::kCloseModeFieldNumber;
const int PBStrategy::kLimitOrderCounterFieldNumber;
const int PBStrategy::kTifFieldNumber;
const int PBStrategy::kVolCondFieldNumber;
const int PBStrategy::kTickSizeMultFieldNumber;
const int PBStrategy::kMaxLimitOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBStrategy::PBStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBStrategy)
}

void PBStrategy::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBStrategy::PBStrategy(const PBStrategy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBStrategy)
}

void PBStrategy::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hedging_ = false;
  bidenabled_ = false;
  askenabled_ = false;
  bidqv_ = 0;
  askqv_ = 0;
  depth_ = 0;
  pricingmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ivmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseexchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basecontract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxautotrade_ = 0;
  bidcounter_ = 0;
  askcounter_ = 0;
  bidnotcross_ = false;
  closemode_ = false;
  limitordercounter_ = 0;
  tif_ = 0;
  volcond_ = 0;
  ticksizemult_ = 0;
  maxlimitorder_ = 0;
}

PBStrategy::~PBStrategy() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBStrategy)
  SharedDtor();
}

void PBStrategy::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pricingmodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ivmodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volmodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseexchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basecontract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBStrategy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBStrategy_descriptor_;
}

const PBStrategy& PBStrategy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBStrategy* PBStrategy::default_instance_ = NULL;

PBStrategy* PBStrategy::New(::google::protobuf::Arena* arena) const {
  PBStrategy* n = new PBStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBStrategy)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBStrategy, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBStrategy*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(hedging_, askenabled_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(bidqv_, depth_);
  pricingmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ivmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(maxautotrade_, askcounter_);
  volmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseexchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basecontract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bidnotcross_ = false;
  ZR_(closemode_, maxlimitorder_);

#undef ZR_HELPER_
#undef ZR_

  pricingcontracts_.Clear();
  ivmcontracts_.Clear();
  volcontracts_.Clear();
}

bool PBStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_underlying;
        break;
      }

      // optional string underlying = 4;
      case 4: {
        if (tag == 34) {
         parse_underlying:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlying()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlying().data(), this->underlying().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.underlying"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_symbol;
        break;
      }

      // optional string symbol = 5;
      case 5: {
        if (tag == 42) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hedging;
        break;
      }

      // optional bool hedging = 6;
      case 6: {
        if (tag == 48) {
         parse_hedging:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hedging_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_bidEnabled;
        break;
      }

      // optional bool bidEnabled = 7;
      case 7: {
        if (tag == 56) {
         parse_bidEnabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bidenabled_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_askEnabled;
        break;
      }

      // optional bool askEnabled = 8;
      case 8: {
        if (tag == 64) {
         parse_askEnabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &askenabled_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_bidQV;
        break;
      }

      // optional int32 bidQV = 9;
      case 9: {
        if (tag == 72) {
         parse_bidQV:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidqv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_askQV;
        break;
      }

      // optional int32 askQV = 10;
      case 10: {
        if (tag == 80) {
         parse_askQV:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askqv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_depth;
        break;
      }

      // optional int32 depth = 11;
      case 11: {
        if (tag == 88) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_pricingContracts;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 12;
      case 12: {
        if (tag == 98) {
         parse_pricingContracts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_pricingContracts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pricingcontracts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_loop_pricingContracts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(106)) goto parse_pricingModel;
        break;
      }

      // optional string pricingModel = 13;
      case 13: {
        if (tag == 106) {
         parse_pricingModel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pricingmodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pricingmodel().data(), this->pricingmodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.pricingModel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_ivmContracts;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBPricingContract ivmContracts = 14;
      case 14: {
        if (tag == 114) {
         parse_ivmContracts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ivmContracts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ivmcontracts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_ivmContracts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(122)) goto parse_ivModel;
        break;
      }

      // optional string ivModel = 15;
      case 15: {
        if (tag == 122) {
         parse_ivModel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ivmodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ivmodel().data(), this->ivmodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.ivModel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_volContracts;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBPricingContract volContracts = 16;
      case 16: {
        if (tag == 130) {
         parse_volContracts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_volContracts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_volcontracts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_loop_volContracts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(138)) goto parse_volModel;
        break;
      }

      // optional string volModel = 17;
      case 17: {
        if (tag == 138) {
         parse_volModel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volmodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volmodel().data(), this->volmodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.volModel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_baseExchange;
        break;
      }

      // optional string baseExchange = 18;
      case 18: {
        if (tag == 146) {
         parse_baseExchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_baseexchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->baseexchange().data(), this->baseexchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.baseExchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_baseContract;
        break;
      }

      // optional string baseContract = 19;
      case 19: {
        if (tag == 154) {
         parse_baseContract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_basecontract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->basecontract().data(), this->basecontract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.baseContract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 20;
      case 20: {
        if (tag == 162) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBStrategy.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_maxAutoTrade;
        break;
      }

      // optional int32 maxAutoTrade = 21;
      case 21: {
        if (tag == 168) {
         parse_maxAutoTrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxautotrade_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_bidCounter;
        break;
      }

      // optional int32 bidCounter = 22;
      case 22: {
        if (tag == 176) {
         parse_bidCounter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidcounter_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_askCounter;
        break;
      }

      // optional int32 askCounter = 23;
      case 23: {
        if (tag == 184) {
         parse_askCounter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askcounter_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_bidNotCross;
        break;
      }

      // optional bool bidNotCross = 24;
      case 24: {
        if (tag == 192) {
         parse_bidNotCross:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bidnotcross_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_closeMode;
        break;
      }

      // optional bool closeMode = 25;
      case 25: {
        if (tag == 200) {
         parse_closeMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &closemode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_limitOrderCounter;
        break;
      }

      // optional int32 limitOrderCounter = 26;
      case 26: {
        if (tag == 208) {
         parse_limitOrderCounter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limitordercounter_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_tif;
        break;
      }

      // optional int32 tif = 27;
      case 27: {
        if (tag == 216) {
         parse_tif:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tif_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_volCond;
        break;
      }

      // optional int32 volCond = 28;
      case 28: {
        if (tag == 224) {
         parse_volCond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volcond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_tickSizeMult;
        break;
      }

      // optional int32 tickSizeMult = 29;
      case 29: {
        if (tag == 232) {
         parse_tickSizeMult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticksizemult_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_maxLimitOrder;
        break;
      }

      // optional int32 maxLimitOrder = 30;
      case 30: {
        if (tag == 240) {
         parse_maxLimitOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlimitorder_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBStrategy)
  return false;
#undef DO_
}

void PBStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBStrategy)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional string underlying = 4;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.underlying");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->underlying(), output);
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->symbol(), output);
  }

  // optional bool hedging = 6;
  if (this->hedging() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->hedging(), output);
  }

  // optional bool bidEnabled = 7;
  if (this->bidenabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bidenabled(), output);
  }

  // optional bool askEnabled = 8;
  if (this->askenabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->askenabled(), output);
  }

  // optional int32 bidQV = 9;
  if (this->bidqv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->bidqv(), output);
  }

  // optional int32 askQV = 10;
  if (this->askqv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->askqv(), output);
  }

  // optional int32 depth = 11;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->depth(), output);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 12;
  for (unsigned int i = 0, n = this->pricingcontracts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->pricingcontracts(i), output);
  }

  // optional string pricingModel = 13;
  if (this->pricingmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pricingmodel().data(), this->pricingmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.pricingModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->pricingmodel(), output);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract ivmContracts = 14;
  for (unsigned int i = 0, n = this->ivmcontracts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->ivmcontracts(i), output);
  }

  // optional string ivModel = 15;
  if (this->ivmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ivmodel().data(), this->ivmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.ivModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->ivmodel(), output);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract volContracts = 16;
  for (unsigned int i = 0, n = this->volcontracts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->volcontracts(i), output);
  }

  // optional string volModel = 17;
  if (this->volmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volmodel().data(), this->volmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.volModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->volmodel(), output);
  }

  // optional string baseExchange = 18;
  if (this->baseexchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->baseexchange().data(), this->baseexchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.baseExchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->baseexchange(), output);
  }

  // optional string baseContract = 19;
  if (this->basecontract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->basecontract().data(), this->basecontract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.baseContract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->basecontract(), output);
  }

  // optional string portfolio = 20;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->portfolio(), output);
  }

  // optional int32 maxAutoTrade = 21;
  if (this->maxautotrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->maxautotrade(), output);
  }

  // optional int32 bidCounter = 22;
  if (this->bidcounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->bidcounter(), output);
  }

  // optional int32 askCounter = 23;
  if (this->askcounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->askcounter(), output);
  }

  // optional bool bidNotCross = 24;
  if (this->bidnotcross() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->bidnotcross(), output);
  }

  // optional bool closeMode = 25;
  if (this->closemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->closemode(), output);
  }

  // optional int32 limitOrderCounter = 26;
  if (this->limitordercounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->limitordercounter(), output);
  }

  // optional int32 tif = 27;
  if (this->tif() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->tif(), output);
  }

  // optional int32 volCond = 28;
  if (this->volcond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->volcond(), output);
  }

  // optional int32 tickSizeMult = 29;
  if (this->ticksizemult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->ticksizemult(), output);
  }

  // optional int32 maxLimitOrder = 30;
  if (this->maxlimitorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->maxlimitorder(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBStrategy)
}

::google::protobuf::uint8* PBStrategy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBStrategy)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional string underlying = 4;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.underlying");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->underlying(), target);
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->symbol(), target);
  }

  // optional bool hedging = 6;
  if (this->hedging() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->hedging(), target);
  }

  // optional bool bidEnabled = 7;
  if (this->bidenabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bidenabled(), target);
  }

  // optional bool askEnabled = 8;
  if (this->askenabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->askenabled(), target);
  }

  // optional int32 bidQV = 9;
  if (this->bidqv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->bidqv(), target);
  }

  // optional int32 askQV = 10;
  if (this->askqv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->askqv(), target);
  }

  // optional int32 depth = 11;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->depth(), target);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 12;
  for (unsigned int i = 0, n = this->pricingcontracts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->pricingcontracts(i), target);
  }

  // optional string pricingModel = 13;
  if (this->pricingmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pricingmodel().data(), this->pricingmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.pricingModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->pricingmodel(), target);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract ivmContracts = 14;
  for (unsigned int i = 0, n = this->ivmcontracts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->ivmcontracts(i), target);
  }

  // optional string ivModel = 15;
  if (this->ivmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ivmodel().data(), this->ivmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.ivModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->ivmodel(), target);
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract volContracts = 16;
  for (unsigned int i = 0, n = this->volcontracts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->volcontracts(i), target);
  }

  // optional string volModel = 17;
  if (this->volmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volmodel().data(), this->volmodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.volModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->volmodel(), target);
  }

  // optional string baseExchange = 18;
  if (this->baseexchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->baseexchange().data(), this->baseexchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.baseExchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->baseexchange(), target);
  }

  // optional string baseContract = 19;
  if (this->basecontract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->basecontract().data(), this->basecontract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.baseContract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->basecontract(), target);
  }

  // optional string portfolio = 20;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBStrategy.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->portfolio(), target);
  }

  // optional int32 maxAutoTrade = 21;
  if (this->maxautotrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->maxautotrade(), target);
  }

  // optional int32 bidCounter = 22;
  if (this->bidcounter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->bidcounter(), target);
  }

  // optional int32 askCounter = 23;
  if (this->askcounter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->askcounter(), target);
  }

  // optional bool bidNotCross = 24;
  if (this->bidnotcross() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->bidnotcross(), target);
  }

  // optional bool closeMode = 25;
  if (this->closemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->closemode(), target);
  }

  // optional int32 limitOrderCounter = 26;
  if (this->limitordercounter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->limitordercounter(), target);
  }

  // optional int32 tif = 27;
  if (this->tif() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->tif(), target);
  }

  // optional int32 volCond = 28;
  if (this->volcond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->volcond(), target);
  }

  // optional int32 tickSizeMult = 29;
  if (this->ticksizemult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->ticksizemult(), target);
  }

  // optional int32 maxLimitOrder = 30;
  if (this->maxlimitorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->maxlimitorder(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBStrategy)
  return target;
}

int PBStrategy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBStrategy)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string underlying = 4;
  if (this->underlying().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlying());
  }

  // optional string symbol = 5;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional bool hedging = 6;
  if (this->hedging() != 0) {
    total_size += 1 + 1;
  }

  // optional bool bidEnabled = 7;
  if (this->bidenabled() != 0) {
    total_size += 1 + 1;
  }

  // optional bool askEnabled = 8;
  if (this->askenabled() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 bidQV = 9;
  if (this->bidqv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidqv());
  }

  // optional int32 askQV = 10;
  if (this->askqv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askqv());
  }

  // optional int32 depth = 11;
  if (this->depth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->depth());
  }

  // optional string pricingModel = 13;
  if (this->pricingmodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pricingmodel());
  }

  // optional string ivModel = 15;
  if (this->ivmodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ivmodel());
  }

  // optional string volModel = 17;
  if (this->volmodel().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volmodel());
  }

  // optional string baseExchange = 18;
  if (this->baseexchange().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->baseexchange());
  }

  // optional string baseContract = 19;
  if (this->basecontract().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->basecontract());
  }

  // optional string portfolio = 20;
  if (this->portfolio().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // optional int32 maxAutoTrade = 21;
  if (this->maxautotrade() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxautotrade());
  }

  // optional int32 bidCounter = 22;
  if (this->bidcounter() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidcounter());
  }

  // optional int32 askCounter = 23;
  if (this->askcounter() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askcounter());
  }

  // optional bool bidNotCross = 24;
  if (this->bidnotcross() != 0) {
    total_size += 2 + 1;
  }

  // optional bool closeMode = 25;
  if (this->closemode() != 0) {
    total_size += 2 + 1;
  }

  // optional int32 limitOrderCounter = 26;
  if (this->limitordercounter() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limitordercounter());
  }

  // optional int32 tif = 27;
  if (this->tif() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tif());
  }

  // optional int32 volCond = 28;
  if (this->volcond() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volcond());
  }

  // optional int32 tickSizeMult = 29;
  if (this->ticksizemult() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticksizemult());
  }

  // optional int32 maxLimitOrder = 30;
  if (this->maxlimitorder() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlimitorder());
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 12;
  total_size += 1 * this->pricingcontracts_size();
  for (int i = 0; i < this->pricingcontracts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pricingcontracts(i));
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract ivmContracts = 14;
  total_size += 1 * this->ivmcontracts_size();
  for (int i = 0; i < this->ivmcontracts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ivmcontracts(i));
  }

  // repeated .Micro.Future.Message.Business.PBPricingContract volContracts = 16;
  total_size += 2 * this->volcontracts_size();
  for (int i = 0; i < this->volcontracts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->volcontracts(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBStrategy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBStrategy)
    MergeFrom(*source);
  }
}

void PBStrategy::MergeFrom(const PBStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  pricingcontracts_.MergeFrom(from.pricingcontracts_);
  ivmcontracts_.MergeFrom(from.ivmcontracts_);
  volcontracts_.MergeFrom(from.volcontracts_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.underlying().size() > 0) {

    underlying_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlying_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.hedging() != 0) {
    set_hedging(from.hedging());
  }
  if (from.bidenabled() != 0) {
    set_bidenabled(from.bidenabled());
  }
  if (from.askenabled() != 0) {
    set_askenabled(from.askenabled());
  }
  if (from.bidqv() != 0) {
    set_bidqv(from.bidqv());
  }
  if (from.askqv() != 0) {
    set_askqv(from.askqv());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
  if (from.pricingmodel().size() > 0) {

    pricingmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pricingmodel_);
  }
  if (from.ivmodel().size() > 0) {

    ivmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ivmodel_);
  }
  if (from.volmodel().size() > 0) {

    volmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volmodel_);
  }
  if (from.baseexchange().size() > 0) {

    baseexchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.baseexchange_);
  }
  if (from.basecontract().size() > 0) {

    basecontract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.basecontract_);
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
  if (from.maxautotrade() != 0) {
    set_maxautotrade(from.maxautotrade());
  }
  if (from.bidcounter() != 0) {
    set_bidcounter(from.bidcounter());
  }
  if (from.askcounter() != 0) {
    set_askcounter(from.askcounter());
  }
  if (from.bidnotcross() != 0) {
    set_bidnotcross(from.bidnotcross());
  }
  if (from.closemode() != 0) {
    set_closemode(from.closemode());
  }
  if (from.limitordercounter() != 0) {
    set_limitordercounter(from.limitordercounter());
  }
  if (from.tif() != 0) {
    set_tif(from.tif());
  }
  if (from.volcond() != 0) {
    set_volcond(from.volcond());
  }
  if (from.ticksizemult() != 0) {
    set_ticksizemult(from.ticksizemult());
  }
  if (from.maxlimitorder() != 0) {
    set_maxlimitorder(from.maxlimitorder());
  }
}

void PBStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBStrategy::CopyFrom(const PBStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBStrategy::IsInitialized() const {

  return true;
}

void PBStrategy::Swap(PBStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBStrategy::InternalSwap(PBStrategy* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  underlying_.Swap(&other->underlying_);
  symbol_.Swap(&other->symbol_);
  std::swap(hedging_, other->hedging_);
  std::swap(bidenabled_, other->bidenabled_);
  std::swap(askenabled_, other->askenabled_);
  std::swap(bidqv_, other->bidqv_);
  std::swap(askqv_, other->askqv_);
  std::swap(depth_, other->depth_);
  pricingcontracts_.UnsafeArenaSwap(&other->pricingcontracts_);
  pricingmodel_.Swap(&other->pricingmodel_);
  ivmcontracts_.UnsafeArenaSwap(&other->ivmcontracts_);
  ivmodel_.Swap(&other->ivmodel_);
  volcontracts_.UnsafeArenaSwap(&other->volcontracts_);
  volmodel_.Swap(&other->volmodel_);
  baseexchange_.Swap(&other->baseexchange_);
  basecontract_.Swap(&other->basecontract_);
  portfolio_.Swap(&other->portfolio_);
  std::swap(maxautotrade_, other->maxautotrade_);
  std::swap(bidcounter_, other->bidcounter_);
  std::swap(askcounter_, other->askcounter_);
  std::swap(bidnotcross_, other->bidnotcross_);
  std::swap(closemode_, other->closemode_);
  std::swap(limitordercounter_, other->limitordercounter_);
  std::swap(tif_, other->tif_);
  std::swap(volcond_, other->volcond_);
  std::swap(ticksizemult_, other->ticksizemult_);
  std::swap(maxlimitorder_, other->maxlimitorder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBStrategy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBStrategy_descriptor_;
  metadata.reflection = PBStrategy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBStrategy

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBStrategy::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBStrategy::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBStrategy::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBStrategy::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBStrategy::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBStrategy::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.header)
}

// optional string exchange = 2;
void PBStrategy::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.exchange)
}
 void PBStrategy::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.exchange)
}
 void PBStrategy::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.exchange)
}
 ::std::string* PBStrategy::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.exchange)
}

// optional string contract = 3;
void PBStrategy::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.contract)
}
 void PBStrategy::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.contract)
}
 void PBStrategy::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.contract)
}
 ::std::string* PBStrategy::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.contract)
}

// optional string underlying = 4;
void PBStrategy::clear_underlying() {
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::underlying() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.underlying)
  return underlying_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_underlying(const ::std::string& value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.underlying)
}
 void PBStrategy::set_underlying(const char* value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.underlying)
}
 void PBStrategy::set_underlying(const char* value, size_t size) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.underlying)
}
 ::std::string* PBStrategy::mutable_underlying() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.underlying)
  return underlying_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_underlying() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.underlying)
  
  return underlying_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_underlying(::std::string* underlying) {
  if (underlying != NULL) {
    
  } else {
    
  }
  underlying_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlying);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.underlying)
}

// optional string symbol = 5;
void PBStrategy::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::symbol() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.symbol)
}
 void PBStrategy::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.symbol)
}
 void PBStrategy::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.symbol)
}
 ::std::string* PBStrategy::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_symbol() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.symbol)
}

// optional bool hedging = 6;
void PBStrategy::clear_hedging() {
  hedging_ = false;
}
 bool PBStrategy::hedging() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.hedging)
  return hedging_;
}
 void PBStrategy::set_hedging(bool value) {
  
  hedging_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.hedging)
}

// optional bool bidEnabled = 7;
void PBStrategy::clear_bidenabled() {
  bidenabled_ = false;
}
 bool PBStrategy::bidenabled() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.bidEnabled)
  return bidenabled_;
}
 void PBStrategy::set_bidenabled(bool value) {
  
  bidenabled_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.bidEnabled)
}

// optional bool askEnabled = 8;
void PBStrategy::clear_askenabled() {
  askenabled_ = false;
}
 bool PBStrategy::askenabled() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.askEnabled)
  return askenabled_;
}
 void PBStrategy::set_askenabled(bool value) {
  
  askenabled_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.askEnabled)
}

// optional int32 bidQV = 9;
void PBStrategy::clear_bidqv() {
  bidqv_ = 0;
}
 ::google::protobuf::int32 PBStrategy::bidqv() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.bidQV)
  return bidqv_;
}
 void PBStrategy::set_bidqv(::google::protobuf::int32 value) {
  
  bidqv_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.bidQV)
}

// optional int32 askQV = 10;
void PBStrategy::clear_askqv() {
  askqv_ = 0;
}
 ::google::protobuf::int32 PBStrategy::askqv() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.askQV)
  return askqv_;
}
 void PBStrategy::set_askqv(::google::protobuf::int32 value) {
  
  askqv_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.askQV)
}

// optional int32 depth = 11;
void PBStrategy::clear_depth() {
  depth_ = 0;
}
 ::google::protobuf::int32 PBStrategy::depth() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.depth)
  return depth_;
}
 void PBStrategy::set_depth(::google::protobuf::int32 value) {
  
  depth_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.depth)
}

// repeated .Micro.Future.Message.Business.PBPricingContract pricingContracts = 12;
int PBStrategy::pricingcontracts_size() const {
  return pricingcontracts_.size();
}
void PBStrategy::clear_pricingcontracts() {
  pricingcontracts_.Clear();
}
const ::Micro::Future::Message::Business::PBPricingContract& PBStrategy::pricingcontracts(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_.Get(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::mutable_pricingcontracts(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_.Mutable(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::add_pricingcontracts() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >*
PBStrategy::mutable_pricingcontracts() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return &pricingcontracts_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >&
PBStrategy::pricingcontracts() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBStrategy.pricingContracts)
  return pricingcontracts_;
}

// optional string pricingModel = 13;
void PBStrategy::clear_pricingmodel() {
  pricingmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::pricingmodel() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.pricingModel)
  return pricingmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_pricingmodel(const ::std::string& value) {
  
  pricingmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.pricingModel)
}
 void PBStrategy::set_pricingmodel(const char* value) {
  
  pricingmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.pricingModel)
}
 void PBStrategy::set_pricingmodel(const char* value, size_t size) {
  
  pricingmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.pricingModel)
}
 ::std::string* PBStrategy::mutable_pricingmodel() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.pricingModel)
  return pricingmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_pricingmodel() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.pricingModel)
  
  return pricingmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_pricingmodel(::std::string* pricingmodel) {
  if (pricingmodel != NULL) {
    
  } else {
    
  }
  pricingmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pricingmodel);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.pricingModel)
}

// repeated .Micro.Future.Message.Business.PBPricingContract ivmContracts = 14;
int PBStrategy::ivmcontracts_size() const {
  return ivmcontracts_.size();
}
void PBStrategy::clear_ivmcontracts() {
  ivmcontracts_.Clear();
}
const ::Micro::Future::Message::Business::PBPricingContract& PBStrategy::ivmcontracts(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.ivmContracts)
  return ivmcontracts_.Get(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::mutable_ivmcontracts(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.ivmContracts)
  return ivmcontracts_.Mutable(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::add_ivmcontracts() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBStrategy.ivmContracts)
  return ivmcontracts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >*
PBStrategy::mutable_ivmcontracts() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBStrategy.ivmContracts)
  return &ivmcontracts_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >&
PBStrategy::ivmcontracts() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBStrategy.ivmContracts)
  return ivmcontracts_;
}

// optional string ivModel = 15;
void PBStrategy::clear_ivmodel() {
  ivmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::ivmodel() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.ivModel)
  return ivmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_ivmodel(const ::std::string& value) {
  
  ivmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.ivModel)
}
 void PBStrategy::set_ivmodel(const char* value) {
  
  ivmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.ivModel)
}
 void PBStrategy::set_ivmodel(const char* value, size_t size) {
  
  ivmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.ivModel)
}
 ::std::string* PBStrategy::mutable_ivmodel() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.ivModel)
  return ivmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_ivmodel() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.ivModel)
  
  return ivmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_ivmodel(::std::string* ivmodel) {
  if (ivmodel != NULL) {
    
  } else {
    
  }
  ivmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ivmodel);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.ivModel)
}

// repeated .Micro.Future.Message.Business.PBPricingContract volContracts = 16;
int PBStrategy::volcontracts_size() const {
  return volcontracts_.size();
}
void PBStrategy::clear_volcontracts() {
  volcontracts_.Clear();
}
const ::Micro::Future::Message::Business::PBPricingContract& PBStrategy::volcontracts(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.volContracts)
  return volcontracts_.Get(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::mutable_volcontracts(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.volContracts)
  return volcontracts_.Mutable(index);
}
::Micro::Future::Message::Business::PBPricingContract* PBStrategy::add_volcontracts() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBStrategy.volContracts)
  return volcontracts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >*
PBStrategy::mutable_volcontracts() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBStrategy.volContracts)
  return &volcontracts_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPricingContract >&
PBStrategy::volcontracts() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBStrategy.volContracts)
  return volcontracts_;
}

// optional string volModel = 17;
void PBStrategy::clear_volmodel() {
  volmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::volmodel() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.volModel)
  return volmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_volmodel(const ::std::string& value) {
  
  volmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.volModel)
}
 void PBStrategy::set_volmodel(const char* value) {
  
  volmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.volModel)
}
 void PBStrategy::set_volmodel(const char* value, size_t size) {
  
  volmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.volModel)
}
 ::std::string* PBStrategy::mutable_volmodel() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.volModel)
  return volmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_volmodel() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.volModel)
  
  return volmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_volmodel(::std::string* volmodel) {
  if (volmodel != NULL) {
    
  } else {
    
  }
  volmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), volmodel);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.volModel)
}

// optional string baseExchange = 18;
void PBStrategy::clear_baseexchange() {
  baseexchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::baseexchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.baseExchange)
  return baseexchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_baseexchange(const ::std::string& value) {
  
  baseexchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.baseExchange)
}
 void PBStrategy::set_baseexchange(const char* value) {
  
  baseexchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.baseExchange)
}
 void PBStrategy::set_baseexchange(const char* value, size_t size) {
  
  baseexchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.baseExchange)
}
 ::std::string* PBStrategy::mutable_baseexchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.baseExchange)
  return baseexchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_baseexchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.baseExchange)
  
  return baseexchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_baseexchange(::std::string* baseexchange) {
  if (baseexchange != NULL) {
    
  } else {
    
  }
  baseexchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), baseexchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.baseExchange)
}

// optional string baseContract = 19;
void PBStrategy::clear_basecontract() {
  basecontract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::basecontract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.baseContract)
  return basecontract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_basecontract(const ::std::string& value) {
  
  basecontract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.baseContract)
}
 void PBStrategy::set_basecontract(const char* value) {
  
  basecontract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.baseContract)
}
 void PBStrategy::set_basecontract(const char* value, size_t size) {
  
  basecontract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.baseContract)
}
 ::std::string* PBStrategy::mutable_basecontract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.baseContract)
  return basecontract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_basecontract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.baseContract)
  
  return basecontract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_basecontract(::std::string* basecontract) {
  if (basecontract != NULL) {
    
  } else {
    
  }
  basecontract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), basecontract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.baseContract)
}

// optional string portfolio = 20;
void PBStrategy::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBStrategy::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.portfolio)
}
 void PBStrategy::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBStrategy.portfolio)
}
 void PBStrategy::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBStrategy.portfolio)
}
 ::std::string* PBStrategy::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategy.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBStrategy::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategy.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBStrategy::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategy.portfolio)
}

// optional int32 maxAutoTrade = 21;
void PBStrategy::clear_maxautotrade() {
  maxautotrade_ = 0;
}
 ::google::protobuf::int32 PBStrategy::maxautotrade() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.maxAutoTrade)
  return maxautotrade_;
}
 void PBStrategy::set_maxautotrade(::google::protobuf::int32 value) {
  
  maxautotrade_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.maxAutoTrade)
}

// optional int32 bidCounter = 22;
void PBStrategy::clear_bidcounter() {
  bidcounter_ = 0;
}
 ::google::protobuf::int32 PBStrategy::bidcounter() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.bidCounter)
  return bidcounter_;
}
 void PBStrategy::set_bidcounter(::google::protobuf::int32 value) {
  
  bidcounter_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.bidCounter)
}

// optional int32 askCounter = 23;
void PBStrategy::clear_askcounter() {
  askcounter_ = 0;
}
 ::google::protobuf::int32 PBStrategy::askcounter() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.askCounter)
  return askcounter_;
}
 void PBStrategy::set_askcounter(::google::protobuf::int32 value) {
  
  askcounter_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.askCounter)
}

// optional bool bidNotCross = 24;
void PBStrategy::clear_bidnotcross() {
  bidnotcross_ = false;
}
 bool PBStrategy::bidnotcross() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.bidNotCross)
  return bidnotcross_;
}
 void PBStrategy::set_bidnotcross(bool value) {
  
  bidnotcross_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.bidNotCross)
}

// optional bool closeMode = 25;
void PBStrategy::clear_closemode() {
  closemode_ = false;
}
 bool PBStrategy::closemode() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.closeMode)
  return closemode_;
}
 void PBStrategy::set_closemode(bool value) {
  
  closemode_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.closeMode)
}

// optional int32 limitOrderCounter = 26;
void PBStrategy::clear_limitordercounter() {
  limitordercounter_ = 0;
}
 ::google::protobuf::int32 PBStrategy::limitordercounter() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.limitOrderCounter)
  return limitordercounter_;
}
 void PBStrategy::set_limitordercounter(::google::protobuf::int32 value) {
  
  limitordercounter_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.limitOrderCounter)
}

// optional int32 tif = 27;
void PBStrategy::clear_tif() {
  tif_ = 0;
}
 ::google::protobuf::int32 PBStrategy::tif() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.tif)
  return tif_;
}
 void PBStrategy::set_tif(::google::protobuf::int32 value) {
  
  tif_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.tif)
}

// optional int32 volCond = 28;
void PBStrategy::clear_volcond() {
  volcond_ = 0;
}
 ::google::protobuf::int32 PBStrategy::volcond() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.volCond)
  return volcond_;
}
 void PBStrategy::set_volcond(::google::protobuf::int32 value) {
  
  volcond_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.volCond)
}

// optional int32 tickSizeMult = 29;
void PBStrategy::clear_ticksizemult() {
  ticksizemult_ = 0;
}
 ::google::protobuf::int32 PBStrategy::ticksizemult() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.tickSizeMult)
  return ticksizemult_;
}
 void PBStrategy::set_ticksizemult(::google::protobuf::int32 value) {
  
  ticksizemult_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.tickSizeMult)
}

// optional int32 maxLimitOrder = 30;
void PBStrategy::clear_maxlimitorder() {
  maxlimitorder_ = 0;
}
 ::google::protobuf::int32 PBStrategy::maxlimitorder() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategy.maxLimitOrder)
  return maxlimitorder_;
}
 void PBStrategy::set_maxlimitorder(::google::protobuf::int32 value) {
  
  maxlimitorder_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBStrategy.maxLimitOrder)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBStrategyList::kHeaderFieldNumber;
const int PBStrategyList::kStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBStrategyList::PBStrategyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBStrategyList)
}

void PBStrategyList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBStrategyList::PBStrategyList(const PBStrategyList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBStrategyList)
}

void PBStrategyList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBStrategyList::~PBStrategyList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBStrategyList)
  SharedDtor();
}

void PBStrategyList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBStrategyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBStrategyList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBStrategyList_descriptor_;
}

const PBStrategyList& PBStrategyList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBStrategyList* PBStrategyList::default_instance_ = NULL;

PBStrategyList* PBStrategyList::New(::google::protobuf::Arena* arena) const {
  PBStrategyList* n = new PBStrategyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBStrategyList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBStrategyList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  strategy_.Clear();
}

bool PBStrategyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBStrategyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strategy;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBStrategy strategy = 2;
      case 2: {
        if (tag == 18) {
         parse_strategy:
          DO_(input->IncrementRecursionDepth());
         parse_loop_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_strategy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_strategy;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBStrategyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBStrategyList)
  return false;
#undef DO_
}

void PBStrategyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBStrategyList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBStrategy strategy = 2;
  for (unsigned int i = 0, n = this->strategy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->strategy(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBStrategyList)
}

::google::protobuf::uint8* PBStrategyList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBStrategyList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBStrategy strategy = 2;
  for (unsigned int i = 0, n = this->strategy_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->strategy(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBStrategyList)
  return target;
}

int PBStrategyList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBStrategyList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBStrategy strategy = 2;
  total_size += 1 * this->strategy_size();
  for (int i = 0; i < this->strategy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strategy(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBStrategyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBStrategyList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBStrategyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBStrategyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBStrategyList)
    MergeFrom(*source);
  }
}

void PBStrategyList::MergeFrom(const PBStrategyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  strategy_.MergeFrom(from.strategy_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBStrategyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBStrategyList::CopyFrom(const PBStrategyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBStrategyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBStrategyList::IsInitialized() const {

  return true;
}

void PBStrategyList::Swap(PBStrategyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBStrategyList::InternalSwap(PBStrategyList* other) {
  std::swap(header_, other->header_);
  strategy_.UnsafeArenaSwap(&other->strategy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBStrategyList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBStrategyList_descriptor_;
  metadata.reflection = PBStrategyList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBStrategyList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBStrategyList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBStrategyList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBStrategyList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategyList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBStrategyList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategyList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBStrategyList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBStrategyList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBStrategyList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBStrategyList.header)
}

// repeated .Micro.Future.Message.Business.PBStrategy strategy = 2;
int PBStrategyList::strategy_size() const {
  return strategy_.size();
}
void PBStrategyList::clear_strategy() {
  strategy_.Clear();
}
const ::Micro::Future::Message::Business::PBStrategy& PBStrategyList::strategy(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_.Get(index);
}
::Micro::Future::Message::Business::PBStrategy* PBStrategyList::mutable_strategy(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_.Mutable(index);
}
::Micro::Future::Message::Business::PBStrategy* PBStrategyList::add_strategy() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBStrategy >*
PBStrategyList::mutable_strategy() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBStrategyList.strategy)
  return &strategy_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBStrategy >&
PBStrategyList::strategy() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBStrategyList.strategy)
  return strategy_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRisk::kHeaderFieldNumber;
const int PBRisk::kExchangeFieldNumber;
const int PBRisk::kContractFieldNumber;
const int PBRisk::kUnderlyingFieldNumber;
const int PBRisk::kPositionFieldNumber;
const int PBRisk::kDeltaFieldNumber;
const int PBRisk::kThetaFieldNumber;
const int PBRisk::kGammaFieldNumber;
const int PBRisk::kVegaFieldNumber;
const int PBRisk::kRhoFieldNumber;
const int PBRisk::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRisk::PBRisk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBRisk)
}

void PBRisk::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBRisk::PBRisk(const PBRisk& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBRisk)
}

void PBRisk::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = 0;
  delta_ = 0;
  theta_ = 0;
  gamma_ = 0;
  vega_ = 0;
  rho_ = 0;
  price_ = 0;
}

PBRisk::~PBRisk() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBRisk)
  SharedDtor();
}

void PBRisk::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBRisk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBRisk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBRisk_descriptor_;
}

const PBRisk& PBRisk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBRisk* PBRisk::default_instance_ = NULL;

PBRisk* PBRisk::New(::google::protobuf::Arena* arena) const {
  PBRisk* n = new PBRisk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBRisk::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBRisk)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBRisk, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBRisk*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(delta_, gamma_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = 0;
  ZR_(vega_, price_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBRisk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBRisk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBRisk.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBRisk.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_underlying;
        break;
      }

      // optional string underlying = 4;
      case 4: {
        if (tag == 34) {
         parse_underlying:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlying()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlying().data(), this->underlying().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBRisk.underlying"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_position;
        break;
      }

      // optional int32 position = 5;
      case 5: {
        if (tag == 40) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_delta;
        break;
      }

      // optional double delta = 6;
      case 6: {
        if (tag == 49) {
         parse_delta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_theta;
        break;
      }

      // optional double theta = 7;
      case 7: {
        if (tag == 57) {
         parse_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_gamma;
        break;
      }

      // optional double gamma = 8;
      case 8: {
        if (tag == 65) {
         parse_gamma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gamma_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_vega;
        break;
      }

      // optional double vega = 9;
      case 9: {
        if (tag == 73) {
         parse_vega:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vega_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_rho;
        break;
      }

      // optional double rho = 10;
      case 10: {
        if (tag == 81) {
         parse_rho:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rho_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_price;
        break;
      }

      // optional double price = 11;
      case 11: {
        if (tag == 89) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBRisk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBRisk)
  return false;
#undef DO_
}

void PBRisk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBRisk)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBRisk.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBRisk.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional string underlying = 4;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBRisk.underlying");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->underlying(), output);
  }

  // optional int32 position = 5;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->position(), output);
  }

  // optional double delta = 6;
  if (this->delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->delta(), output);
  }

  // optional double theta = 7;
  if (this->theta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->theta(), output);
  }

  // optional double gamma = 8;
  if (this->gamma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->gamma(), output);
  }

  // optional double vega = 9;
  if (this->vega() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->vega(), output);
  }

  // optional double rho = 10;
  if (this->rho() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->rho(), output);
  }

  // optional double price = 11;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->price(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBRisk)
}

::google::protobuf::uint8* PBRisk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBRisk)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBRisk.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBRisk.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional string underlying = 4;
  if (this->underlying().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying().data(), this->underlying().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBRisk.underlying");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->underlying(), target);
  }

  // optional int32 position = 5;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->position(), target);
  }

  // optional double delta = 6;
  if (this->delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->delta(), target);
  }

  // optional double theta = 7;
  if (this->theta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->theta(), target);
  }

  // optional double gamma = 8;
  if (this->gamma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->gamma(), target);
  }

  // optional double vega = 9;
  if (this->vega() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->vega(), target);
  }

  // optional double rho = 10;
  if (this->rho() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->rho(), target);
  }

  // optional double price = 11;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->price(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBRisk)
  return target;
}

int PBRisk::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBRisk)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string underlying = 4;
  if (this->underlying().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlying());
  }

  // optional int32 position = 5;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  // optional double delta = 6;
  if (this->delta() != 0) {
    total_size += 1 + 8;
  }

  // optional double theta = 7;
  if (this->theta() != 0) {
    total_size += 1 + 8;
  }

  // optional double gamma = 8;
  if (this->gamma() != 0) {
    total_size += 1 + 8;
  }

  // optional double vega = 9;
  if (this->vega() != 0) {
    total_size += 1 + 8;
  }

  // optional double rho = 10;
  if (this->rho() != 0) {
    total_size += 1 + 8;
  }

  // optional double price = 11;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBRisk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBRisk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBRisk* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRisk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBRisk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBRisk)
    MergeFrom(*source);
  }
}

void PBRisk::MergeFrom(const PBRisk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBRisk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.underlying().size() > 0) {

    underlying_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlying_);
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.delta() != 0) {
    set_delta(from.delta());
  }
  if (from.theta() != 0) {
    set_theta(from.theta());
  }
  if (from.gamma() != 0) {
    set_gamma(from.gamma());
  }
  if (from.vega() != 0) {
    set_vega(from.vega());
  }
  if (from.rho() != 0) {
    set_rho(from.rho());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void PBRisk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBRisk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRisk::CopyFrom(const PBRisk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBRisk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRisk::IsInitialized() const {

  return true;
}

void PBRisk::Swap(PBRisk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRisk::InternalSwap(PBRisk* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  underlying_.Swap(&other->underlying_);
  std::swap(position_, other->position_);
  std::swap(delta_, other->delta_);
  std::swap(theta_, other->theta_);
  std::swap(gamma_, other->gamma_);
  std::swap(vega_, other->vega_);
  std::swap(rho_, other->rho_);
  std::swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBRisk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBRisk_descriptor_;
  metadata.reflection = PBRisk_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBRisk

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBRisk::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBRisk::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBRisk::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBRisk::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBRisk.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBRisk::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBRisk.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBRisk::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBRisk.header)
}

// optional string exchange = 2;
void PBRisk::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBRisk::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBRisk::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.exchange)
}
 void PBRisk::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBRisk.exchange)
}
 void PBRisk::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBRisk.exchange)
}
 ::std::string* PBRisk::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBRisk.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBRisk::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBRisk.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBRisk::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBRisk.exchange)
}

// optional string contract = 3;
void PBRisk::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBRisk::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBRisk::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.contract)
}
 void PBRisk::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBRisk.contract)
}
 void PBRisk::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBRisk.contract)
}
 ::std::string* PBRisk::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBRisk.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBRisk::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBRisk.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBRisk::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBRisk.contract)
}

// optional string underlying = 4;
void PBRisk::clear_underlying() {
  underlying_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBRisk::underlying() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.underlying)
  return underlying_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBRisk::set_underlying(const ::std::string& value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.underlying)
}
 void PBRisk::set_underlying(const char* value) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBRisk.underlying)
}
 void PBRisk::set_underlying(const char* value, size_t size) {
  
  underlying_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBRisk.underlying)
}
 ::std::string* PBRisk::mutable_underlying() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBRisk.underlying)
  return underlying_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBRisk::release_underlying() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBRisk.underlying)
  
  return underlying_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBRisk::set_allocated_underlying(::std::string* underlying) {
  if (underlying != NULL) {
    
  } else {
    
  }
  underlying_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlying);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBRisk.underlying)
}

// optional int32 position = 5;
void PBRisk::clear_position() {
  position_ = 0;
}
 ::google::protobuf::int32 PBRisk::position() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.position)
  return position_;
}
 void PBRisk::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.position)
}

// optional double delta = 6;
void PBRisk::clear_delta() {
  delta_ = 0;
}
 double PBRisk::delta() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.delta)
  return delta_;
}
 void PBRisk::set_delta(double value) {
  
  delta_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.delta)
}

// optional double theta = 7;
void PBRisk::clear_theta() {
  theta_ = 0;
}
 double PBRisk::theta() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.theta)
  return theta_;
}
 void PBRisk::set_theta(double value) {
  
  theta_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.theta)
}

// optional double gamma = 8;
void PBRisk::clear_gamma() {
  gamma_ = 0;
}
 double PBRisk::gamma() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.gamma)
  return gamma_;
}
 void PBRisk::set_gamma(double value) {
  
  gamma_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.gamma)
}

// optional double vega = 9;
void PBRisk::clear_vega() {
  vega_ = 0;
}
 double PBRisk::vega() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.vega)
  return vega_;
}
 void PBRisk::set_vega(double value) {
  
  vega_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.vega)
}

// optional double rho = 10;
void PBRisk::clear_rho() {
  rho_ = 0;
}
 double PBRisk::rho() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.rho)
  return rho_;
}
 void PBRisk::set_rho(double value) {
  
  rho_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.rho)
}

// optional double price = 11;
void PBRisk::clear_price() {
  price_ = 0;
}
 double PBRisk::price() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRisk.price)
  return price_;
}
 void PBRisk::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBRisk.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRiskList::kHeaderFieldNumber;
const int PBRiskList::kRiskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRiskList::PBRiskList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBRiskList)
}

void PBRiskList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBRiskList::PBRiskList(const PBRiskList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBRiskList)
}

void PBRiskList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBRiskList::~PBRiskList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBRiskList)
  SharedDtor();
}

void PBRiskList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBRiskList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBRiskList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBRiskList_descriptor_;
}

const PBRiskList& PBRiskList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBRiskList* PBRiskList::default_instance_ = NULL;

PBRiskList* PBRiskList::New(::google::protobuf::Arena* arena) const {
  PBRiskList* n = new PBRiskList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBRiskList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBRiskList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  risk_.Clear();
}

bool PBRiskList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBRiskList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_risk;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBRisk risk = 2;
      case 2: {
        if (tag == 18) {
         parse_risk:
          DO_(input->IncrementRecursionDepth());
         parse_loop_risk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_risk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_risk;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBRiskList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBRiskList)
  return false;
#undef DO_
}

void PBRiskList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBRiskList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBRisk risk = 2;
  for (unsigned int i = 0, n = this->risk_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->risk(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBRiskList)
}

::google::protobuf::uint8* PBRiskList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBRiskList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBRisk risk = 2;
  for (unsigned int i = 0, n = this->risk_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->risk(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBRiskList)
  return target;
}

int PBRiskList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBRiskList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBRisk risk = 2;
  total_size += 1 * this->risk_size();
  for (int i = 0; i < this->risk_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->risk(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBRiskList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBRiskList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBRiskList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRiskList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBRiskList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBRiskList)
    MergeFrom(*source);
  }
}

void PBRiskList::MergeFrom(const PBRiskList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBRiskList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  risk_.MergeFrom(from.risk_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBRiskList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBRiskList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRiskList::CopyFrom(const PBRiskList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBRiskList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRiskList::IsInitialized() const {

  return true;
}

void PBRiskList::Swap(PBRiskList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRiskList::InternalSwap(PBRiskList* other) {
  std::swap(header_, other->header_);
  risk_.UnsafeArenaSwap(&other->risk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBRiskList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBRiskList_descriptor_;
  metadata.reflection = PBRiskList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBRiskList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBRiskList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBRiskList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBRiskList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRiskList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBRiskList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBRiskList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBRiskList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBRiskList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBRiskList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBRiskList.header)
}

// repeated .Micro.Future.Message.Business.PBRisk risk = 2;
int PBRiskList::risk_size() const {
  return risk_.size();
}
void PBRiskList::clear_risk() {
  risk_.Clear();
}
const ::Micro::Future::Message::Business::PBRisk& PBRiskList::risk(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBRiskList.risk)
  return risk_.Get(index);
}
::Micro::Future::Message::Business::PBRisk* PBRiskList::mutable_risk(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBRiskList.risk)
  return risk_.Mutable(index);
}
::Micro::Future::Message::Business::PBRisk* PBRiskList::add_risk() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBRiskList.risk)
  return risk_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBRisk >*
PBRiskList::mutable_risk() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBRiskList.risk)
  return &risk_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBRisk >&
PBRiskList::risk() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBRiskList.risk)
  return risk_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractParam::kExchangeFieldNumber;
const int PBContractParam::kContractFieldNumber;
const int PBContractParam::kDepthVolFieldNumber;
const int PBContractParam::kGammaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractParam::PBContractParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractParam)
}

void PBContractParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBContractParam::PBContractParam(const PBContractParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractParam)
}

void PBContractParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depthvol_ = 0;
  gamma_ = 0;
}

PBContractParam::~PBContractParam() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractParam)
  SharedDtor();
}

void PBContractParam::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBContractParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractParam_descriptor_;
}

const PBContractParam& PBContractParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractParam* PBContractParam::default_instance_ = NULL;

PBContractParam* PBContractParam::New(::google::protobuf::Arena* arena) const {
  PBContractParam* n = new PBContractParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractParam)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBContractParam, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBContractParam*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gamma_, depthvol_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBContractParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractParam.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractParam.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_depthVol;
        break;
      }

      // optional int32 depthVol = 3;
      case 3: {
        if (tag == 24) {
         parse_depthVol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depthvol_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_gamma;
        break;
      }

      // optional double gamma = 4;
      case 4: {
        if (tag == 33) {
         parse_gamma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gamma_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractParam)
  return false;
#undef DO_
}

void PBContractParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional int32 depthVol = 3;
  if (this->depthvol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->depthvol(), output);
  }

  // optional double gamma = 4;
  if (this->gamma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->gamma(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractParam)
}

::google::protobuf::uint8* PBContractParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractParam.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional int32 depthVol = 3;
  if (this->depthvol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->depthvol(), target);
  }

  // optional double gamma = 4;
  if (this->gamma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->gamma(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractParam)
  return target;
}

int PBContractParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractParam)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional int32 depthVol = 3;
  if (this->depthvol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->depthvol());
  }

  // optional double gamma = 4;
  if (this->gamma() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractParam)
    MergeFrom(*source);
  }
}

void PBContractParam::MergeFrom(const PBContractParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.depthvol() != 0) {
    set_depthvol(from.depthvol());
  }
  if (from.gamma() != 0) {
    set_gamma(from.gamma());
  }
}

void PBContractParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractParam::CopyFrom(const PBContractParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractParam::IsInitialized() const {

  return true;
}

void PBContractParam::Swap(PBContractParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractParam::InternalSwap(PBContractParam* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(depthvol_, other->depthvol_);
  std::swap(gamma_, other->gamma_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractParam_descriptor_;
  metadata.reflection = PBContractParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractParam

// optional string exchange = 1;
void PBContractParam::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractParam::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.exchange)
}
 void PBContractParam::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractParam.exchange)
}
 void PBContractParam::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractParam.exchange)
}
 ::std::string* PBContractParam::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParam.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractParam::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractParam.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractParam.exchange)
}

// optional string contract = 2;
void PBContractParam::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractParam::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.contract)
}
 void PBContractParam::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractParam.contract)
}
 void PBContractParam::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractParam.contract)
}
 ::std::string* PBContractParam::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParam.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractParam::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractParam.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractParam::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractParam.contract)
}

// optional int32 depthVol = 3;
void PBContractParam::clear_depthvol() {
  depthvol_ = 0;
}
 ::google::protobuf::int32 PBContractParam::depthvol() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.depthVol)
  return depthvol_;
}
 void PBContractParam::set_depthvol(::google::protobuf::int32 value) {
  
  depthvol_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.depthVol)
}

// optional double gamma = 4;
void PBContractParam::clear_gamma() {
  gamma_ = 0;
}
 double PBContractParam::gamma() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParam.gamma)
  return gamma_;
}
 void PBContractParam::set_gamma(double value) {
  
  gamma_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractParam.gamma)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractParamList::kHeaderFieldNumber;
const int PBContractParamList::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractParamList::PBContractParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractParamList)
}

void PBContractParamList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBContractParamList::PBContractParamList(const PBContractParamList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractParamList)
}

void PBContractParamList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBContractParamList::~PBContractParamList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractParamList)
  SharedDtor();
}

void PBContractParamList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBContractParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractParamList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractParamList_descriptor_;
}

const PBContractParamList& PBContractParamList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractParamList* PBContractParamList::default_instance_ = NULL;

PBContractParamList* PBContractParamList::New(::google::protobuf::Arena* arena) const {
  PBContractParamList* n = new PBContractParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractParamList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  params_.Clear();
}

bool PBContractParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBContractParam params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractParamList)
  return false;
#undef DO_
}

void PBContractParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractParamList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBContractParam params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractParamList)
}

::google::protobuf::uint8* PBContractParamList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractParamList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBContractParam params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->params(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractParamList)
  return target;
}

int PBContractParamList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractParamList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBContractParam params = 2;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractParamList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractParamList)
    MergeFrom(*source);
  }
}

void PBContractParamList::MergeFrom(const PBContractParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  params_.MergeFrom(from.params_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBContractParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractParamList::CopyFrom(const PBContractParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractParamList::IsInitialized() const {

  return true;
}

void PBContractParamList::Swap(PBContractParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractParamList::InternalSwap(PBContractParamList* other) {
  std::swap(header_, other->header_);
  params_.UnsafeArenaSwap(&other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractParamList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractParamList_descriptor_;
  metadata.reflection = PBContractParamList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractParamList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBContractParamList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBContractParamList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBContractParamList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParamList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBContractParamList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParamList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBContractParamList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractParamList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBContractParamList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractParamList.header)
}

// repeated .Micro.Future.Message.Business.PBContractParam params = 2;
int PBContractParamList::params_size() const {
  return params_.size();
}
void PBContractParamList::clear_params() {
  params_.Clear();
}
const ::Micro::Future::Message::Business::PBContractParam& PBContractParamList::params(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractParamList.params)
  return params_.Get(index);
}
::Micro::Future::Message::Business::PBContractParam* PBContractParamList::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractParamList.params)
  return params_.Mutable(index);
}
::Micro::Future::Message::Business::PBContractParam* PBContractParamList::add_params() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBContractParamList.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractParam >*
PBContractParamList::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBContractParamList.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractParam >&
PBContractParamList::params() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBContractParamList.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOTCUserParam::kExchangeFieldNumber;
const int PBOTCUserParam::kContractFieldNumber;
const int PBOTCUserParam::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOTCUserParam::PBOTCUserParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOTCUserParam)
}

void PBOTCUserParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBOTCUserParam::PBOTCUserParam(const PBOTCUserParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOTCUserParam)
}

void PBOTCUserParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

PBOTCUserParam::~PBOTCUserParam() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOTCUserParam)
  SharedDtor();
}

void PBOTCUserParam::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBOTCUserParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOTCUserParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOTCUserParam_descriptor_;
}

const PBOTCUserParam& PBOTCUserParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOTCUserParam* PBOTCUserParam::default_instance_ = NULL;

PBOTCUserParam* PBOTCUserParam::New(::google::protobuf::Arena* arena) const {
  PBOTCUserParam* n = new PBOTCUserParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOTCUserParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOTCUserParam)
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

bool PBOTCUserParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOTCUserParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOTCUserParam.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOTCUserParam.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_quantity;
        break;
      }

      // optional double quantity = 3;
      case 3: {
        if (tag == 25) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &quantity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOTCUserParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOTCUserParam)
  return false;
#undef DO_
}

void PBOTCUserParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOTCUserParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double quantity = 3;
  if (this->quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->quantity(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOTCUserParam)
}

::google::protobuf::uint8* PBOTCUserParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOTCUserParam)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOTCUserParam.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double quantity = 3;
  if (this->quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->quantity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOTCUserParam)
  return target;
}

int PBOTCUserParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOTCUserParam)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double quantity = 3;
  if (this->quantity() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOTCUserParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOTCUserParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOTCUserParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOTCUserParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOTCUserParam)
    MergeFrom(*source);
  }
}

void PBOTCUserParam::MergeFrom(const PBOTCUserParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.quantity() != 0) {
    set_quantity(from.quantity());
  }
}

void PBOTCUserParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOTCUserParam::CopyFrom(const PBOTCUserParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOTCUserParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOTCUserParam::IsInitialized() const {

  return true;
}

void PBOTCUserParam::Swap(PBOTCUserParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOTCUserParam::InternalSwap(PBOTCUserParam* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(quantity_, other->quantity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOTCUserParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOTCUserParam_descriptor_;
  metadata.reflection = PBOTCUserParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOTCUserParam

// optional string exchange = 1;
void PBOTCUserParam::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOTCUserParam::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParam.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}
 void PBOTCUserParam::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}
 void PBOTCUserParam::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}
 ::std::string* PBOTCUserParam::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParam.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOTCUserParam::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOTCUserParam.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOTCUserParam.exchange)
}

// optional string contract = 2;
void PBOTCUserParam::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOTCUserParam::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParam.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOTCUserParam.contract)
}
 void PBOTCUserParam::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOTCUserParam.contract)
}
 void PBOTCUserParam::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOTCUserParam.contract)
}
 ::std::string* PBOTCUserParam::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParam.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOTCUserParam::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOTCUserParam.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOTCUserParam::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOTCUserParam.contract)
}

// optional double quantity = 3;
void PBOTCUserParam::clear_quantity() {
  quantity_ = 0;
}
 double PBOTCUserParam::quantity() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParam.quantity)
  return quantity_;
}
 void PBOTCUserParam::set_quantity(double value) {
  
  quantity_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOTCUserParam.quantity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOTCUserParamList::kHeaderFieldNumber;
const int PBOTCUserParamList::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOTCUserParamList::PBOTCUserParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOTCUserParamList)
}

void PBOTCUserParamList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOTCUserParamList::PBOTCUserParamList(const PBOTCUserParamList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOTCUserParamList)
}

void PBOTCUserParamList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBOTCUserParamList::~PBOTCUserParamList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOTCUserParamList)
  SharedDtor();
}

void PBOTCUserParamList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOTCUserParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOTCUserParamList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOTCUserParamList_descriptor_;
}

const PBOTCUserParamList& PBOTCUserParamList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOTCUserParamList* PBOTCUserParamList::default_instance_ = NULL;

PBOTCUserParamList* PBOTCUserParamList::New(::google::protobuf::Arena* arena) const {
  PBOTCUserParamList* n = new PBOTCUserParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOTCUserParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  params_.Clear();
}

bool PBOTCUserParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOTCUserParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOTCUserParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOTCUserParamList)
  return false;
#undef DO_
}

void PBOTCUserParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOTCUserParamList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOTCUserParamList)
}

::google::protobuf::uint8* PBOTCUserParamList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOTCUserParamList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->params(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOTCUserParamList)
  return target;
}

int PBOTCUserParamList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOTCUserParamList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBOTCUserParam params = 2;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOTCUserParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOTCUserParamList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOTCUserParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOTCUserParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOTCUserParamList)
    MergeFrom(*source);
  }
}

void PBOTCUserParamList::MergeFrom(const PBOTCUserParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  params_.MergeFrom(from.params_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBOTCUserParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOTCUserParamList::CopyFrom(const PBOTCUserParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOTCUserParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOTCUserParamList::IsInitialized() const {

  return true;
}

void PBOTCUserParamList::Swap(PBOTCUserParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOTCUserParamList::InternalSwap(PBOTCUserParamList* other) {
  std::swap(header_, other->header_);
  params_.UnsafeArenaSwap(&other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOTCUserParamList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOTCUserParamList_descriptor_;
  metadata.reflection = PBOTCUserParamList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOTCUserParamList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBOTCUserParamList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOTCUserParamList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOTCUserParamList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParamList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOTCUserParamList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParamList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOTCUserParamList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOTCUserParamList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOTCUserParamList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOTCUserParamList.header)
}

// repeated .Micro.Future.Message.Business.PBOTCUserParam params = 2;
int PBOTCUserParamList::params_size() const {
  return params_.size();
}
void PBOTCUserParamList::clear_params() {
  params_.Clear();
}
const ::Micro::Future::Message::Business::PBOTCUserParam& PBOTCUserParamList::params(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_.Get(index);
}
::Micro::Future::Message::Business::PBOTCUserParam* PBOTCUserParamList::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_.Mutable(index);
}
::Micro::Future::Message::Business::PBOTCUserParam* PBOTCUserParamList::add_params() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBOTCUserParam >*
PBOTCUserParamList::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBOTCUserParam >&
PBOTCUserParamList::params() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBOTCUserParamList.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOrderRequest::kHeaderFieldNumber;
const int PBOrderRequest::kOrderIDFieldNumber;
const int PBOrderRequest::kOrderSysIDFieldNumber;
const int PBOrderRequest::kExchangeFieldNumber;
const int PBOrderRequest::kContractFieldNumber;
const int PBOrderRequest::kLimitPriceFieldNumber;
const int PBOrderRequest::kVolumeFieldNumber;
const int PBOrderRequest::kExecTypeFieldNumber;
const int PBOrderRequest::kTifFieldNumber;
const int PBOrderRequest::kDirectionFieldNumber;
const int PBOrderRequest::kOpencloseFieldNumber;
const int PBOrderRequest::kPortfolioFieldNumber;
const int PBOrderRequest::kVolCondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOrderRequest::PBOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOrderRequest)
}

void PBOrderRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOrderRequest::PBOrderRequest(const PBOrderRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOrderRequest)
}

void PBOrderRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  orderid_ = GOOGLE_ULONGLONG(0);
  ordersysid_ = GOOGLE_ULONGLONG(0);
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limitprice_ = 0;
  volume_ = 0;
  exectype_ = 0;
  tif_ = 0;
  direction_ = 0;
  openclose_ = 0;
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volcond_ = 0;
}

PBOrderRequest::~PBOrderRequest() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOrderRequest)
  SharedDtor();
}

void PBOrderRequest::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOrderRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOrderRequest_descriptor_;
}

const PBOrderRequest& PBOrderRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOrderRequest* PBOrderRequest::default_instance_ = NULL;

PBOrderRequest* PBOrderRequest::New(::google::protobuf::Arena* arena) const {
  PBOrderRequest* n = new PBOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOrderRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBOrderRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBOrderRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, ordersysid_);
  ZR_(limitprice_, exectype_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(tif_, direction_);
  ZR_(openclose_, volcond_);
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_orderID;
        break;
      }

      // optional uint64 orderID = 2;
      case 2: {
        if (tag == 16) {
         parse_orderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_orderSysID;
        break;
      }

      // optional uint64 orderSysID = 3;
      case 3: {
        if (tag == 24) {
         parse_orderSysID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordersysid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exchange;
        break;
      }

      // optional string exchange = 4;
      case 4: {
        if (tag == 34) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderRequest.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_contract;
        break;
      }

      // optional string contract = 5;
      case 5: {
        if (tag == 42) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderRequest.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_limitPrice;
        break;
      }

      // optional double limitPrice = 6;
      case 6: {
        if (tag == 49) {
         parse_limitPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limitprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_volume;
        break;
      }

      // optional int32 volume = 7;
      case 7: {
        if (tag == 56) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_execType;
        break;
      }

      // optional int32 execType = 8;
      case 8: {
        if (tag == 64) {
         parse_execType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exectype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_tif;
        break;
      }

      // optional int32 tif = 9;
      case 9: {
        if (tag == 72) {
         parse_tif:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tif_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_direction;
        break;
      }

      // optional int32 direction = 10;
      case 10: {
        if (tag == 80) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_openclose;
        break;
      }

      // optional int32 openclose = 11;
      case 11: {
        if (tag == 88) {
         parse_openclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openclose_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 12;
      case 12: {
        if (tag == 98) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderRequest.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_volCond;
        break;
      }

      // optional int32 volCond = 13;
      case 13: {
        if (tag == 104) {
         parse_volCond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volcond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOrderRequest)
  return false;
#undef DO_
}

void PBOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOrderRequest)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->orderid(), output);
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ordersysid(), output);
  }

  // optional string exchange = 4;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange(), output);
  }

  // optional string contract = 5;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->contract(), output);
  }

  // optional double limitPrice = 6;
  if (this->limitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->limitprice(), output);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->volume(), output);
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->exectype(), output);
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->tif(), output);
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->direction(), output);
  }

  // optional int32 openclose = 11;
  if (this->openclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->openclose(), output);
  }

  // optional string portfolio = 12;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->portfolio(), output);
  }

  // optional int32 volCond = 13;
  if (this->volcond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->volcond(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOrderRequest)
}

::google::protobuf::uint8* PBOrderRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOrderRequest)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->orderid(), target);
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ordersysid(), target);
  }

  // optional string exchange = 4;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange(), target);
  }

  // optional string contract = 5;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->contract(), target);
  }

  // optional double limitPrice = 6;
  if (this->limitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->limitprice(), target);
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->volume(), target);
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->exectype(), target);
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->tif(), target);
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->direction(), target);
  }

  // optional int32 openclose = 11;
  if (this->openclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->openclose(), target);
  }

  // optional string portfolio = 12;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderRequest.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->portfolio(), target);
  }

  // optional int32 volCond = 13;
  if (this->volcond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->volcond(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOrderRequest)
  return target;
}

int PBOrderRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOrderRequest)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordersysid());
  }

  // optional string exchange = 4;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 5;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double limitPrice = 6;
  if (this->limitprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 volume = 7;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exectype());
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tif());
  }

  // optional int32 direction = 10;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 openclose = 11;
  if (this->openclose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openclose());
  }

  // optional string portfolio = 12;
  if (this->portfolio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // optional int32 volCond = 13;
  if (this->volcond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volcond());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOrderRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOrderRequest)
    MergeFrom(*source);
  }
}

void PBOrderRequest::MergeFrom(const PBOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.ordersysid() != 0) {
    set_ordersysid(from.ordersysid());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.limitprice() != 0) {
    set_limitprice(from.limitprice());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.exectype() != 0) {
    set_exectype(from.exectype());
  }
  if (from.tif() != 0) {
    set_tif(from.tif());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.openclose() != 0) {
    set_openclose(from.openclose());
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
  if (from.volcond() != 0) {
    set_volcond(from.volcond());
  }
}

void PBOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOrderRequest::CopyFrom(const PBOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOrderRequest::IsInitialized() const {

  return true;
}

void PBOrderRequest::Swap(PBOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOrderRequest::InternalSwap(PBOrderRequest* other) {
  std::swap(header_, other->header_);
  std::swap(orderid_, other->orderid_);
  std::swap(ordersysid_, other->ordersysid_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(limitprice_, other->limitprice_);
  std::swap(volume_, other->volume_);
  std::swap(exectype_, other->exectype_);
  std::swap(tif_, other->tif_);
  std::swap(direction_, other->direction_);
  std::swap(openclose_, other->openclose_);
  portfolio_.Swap(&other->portfolio_);
  std::swap(volcond_, other->volcond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOrderRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOrderRequest_descriptor_;
  metadata.reflection = PBOrderRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOrderRequest

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBOrderRequest::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOrderRequest::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOrderRequest::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOrderRequest::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOrderRequest::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOrderRequest::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.header)
}

// optional uint64 orderID = 2;
void PBOrderRequest::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderRequest::orderid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.orderID)
  return orderid_;
}
 void PBOrderRequest::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.orderID)
}

// optional uint64 orderSysID = 3;
void PBOrderRequest::clear_ordersysid() {
  ordersysid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderRequest::ordersysid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.orderSysID)
  return ordersysid_;
}
 void PBOrderRequest::set_ordersysid(::google::protobuf::uint64 value) {
  
  ordersysid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.orderSysID)
}

// optional string exchange = 4;
void PBOrderRequest::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderRequest::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.exchange)
}
 void PBOrderRequest::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderRequest.exchange)
}
 void PBOrderRequest::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderRequest.exchange)
}
 ::std::string* PBOrderRequest::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderRequest::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.exchange)
}

// optional string contract = 5;
void PBOrderRequest::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderRequest::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.contract)
}
 void PBOrderRequest::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderRequest.contract)
}
 void PBOrderRequest::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderRequest.contract)
}
 ::std::string* PBOrderRequest::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderRequest::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.contract)
}

// optional double limitPrice = 6;
void PBOrderRequest::clear_limitprice() {
  limitprice_ = 0;
}
 double PBOrderRequest::limitprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.limitPrice)
  return limitprice_;
}
 void PBOrderRequest::set_limitprice(double value) {
  
  limitprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.limitPrice)
}

// optional int32 volume = 7;
void PBOrderRequest::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.volume)
  return volume_;
}
 void PBOrderRequest::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.volume)
}

// optional int32 execType = 8;
void PBOrderRequest::clear_exectype() {
  exectype_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::exectype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.execType)
  return exectype_;
}
 void PBOrderRequest::set_exectype(::google::protobuf::int32 value) {
  
  exectype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.execType)
}

// optional int32 tif = 9;
void PBOrderRequest::clear_tif() {
  tif_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::tif() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.tif)
  return tif_;
}
 void PBOrderRequest::set_tif(::google::protobuf::int32 value) {
  
  tif_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.tif)
}

// optional int32 direction = 10;
void PBOrderRequest::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.direction)
  return direction_;
}
 void PBOrderRequest::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.direction)
}

// optional int32 openclose = 11;
void PBOrderRequest::clear_openclose() {
  openclose_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::openclose() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.openclose)
  return openclose_;
}
 void PBOrderRequest::set_openclose(::google::protobuf::int32 value) {
  
  openclose_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.openclose)
}

// optional string portfolio = 12;
void PBOrderRequest::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderRequest::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.portfolio)
}
 void PBOrderRequest::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderRequest.portfolio)
}
 void PBOrderRequest::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderRequest.portfolio)
}
 ::std::string* PBOrderRequest::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderRequest.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderRequest::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderRequest.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderRequest::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderRequest.portfolio)
}

// optional int32 volCond = 13;
void PBOrderRequest::clear_volcond() {
  volcond_ = 0;
}
 ::google::protobuf::int32 PBOrderRequest::volcond() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderRequest.volCond)
  return volcond_;
}
 void PBOrderRequest::set_volcond(::google::protobuf::int32 value) {
  
  volcond_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderRequest.volCond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOrderInfo::kHeaderFieldNumber;
const int PBOrderInfo::kOrderIDFieldNumber;
const int PBOrderInfo::kOrderSysIDFieldNumber;
const int PBOrderInfo::kBrokerIDFieldNumber;
const int PBOrderInfo::kInvestorIDFieldNumber;
const int PBOrderInfo::kExchangeFieldNumber;
const int PBOrderInfo::kContractFieldNumber;
const int PBOrderInfo::kExecTypeFieldNumber;
const int PBOrderInfo::kTifFieldNumber;
const int PBOrderInfo::kTradingTypeFieldNumber;
const int PBOrderInfo::kDirectionFieldNumber;
const int PBOrderInfo::kLimitPriceFieldNumber;
const int PBOrderInfo::kStopPriceFieldNumber;
const int PBOrderInfo::kOrderStatusFieldNumber;
const int PBOrderInfo::kOrderTypeFieldNumber;
const int PBOrderInfo::kVolumeFieldNumber;
const int PBOrderInfo::kInsertTimeFieldNumber;
const int PBOrderInfo::kUpdateTimeFieldNumber;
const int PBOrderInfo::kCancelTimeFieldNumber;
const int PBOrderInfo::kVolumeTradedFieldNumber;
const int PBOrderInfo::kVolumeRemainFieldNumber;
const int PBOrderInfo::kVolumeConditionFieldNumber;
const int PBOrderInfo::kTradingDayFieldNumber;
const int PBOrderInfo::kActiveFieldNumber;
const int PBOrderInfo::kOpencloseFieldNumber;
const int PBOrderInfo::kMessageFieldNumber;
const int PBOrderInfo::kSessionIDFieldNumber;
const int PBOrderInfo::kPortfolioFieldNumber;
const int PBOrderInfo::kInsertDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOrderInfo::PBOrderInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBOrderInfo)
}

void PBOrderInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBOrderInfo::PBOrderInfo(const PBOrderInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBOrderInfo)
}

void PBOrderInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  orderid_ = GOOGLE_ULONGLONG(0);
  ordersysid_ = GOOGLE_ULONGLONG(0);
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exectype_ = 0;
  tif_ = 0;
  tradingtype_ = 0;
  direction_ = 0;
  limitprice_ = 0;
  stopprice_ = 0;
  orderstatus_ = 0;
  ordertype_ = 0;
  volume_ = 0;
  inserttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canceltime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumetraded_ = 0;
  volumeremain_ = 0;
  volumecondition_ = 0;
  tradingday_ = 0;
  active_ = false;
  openclose_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = 0;
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  insertdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBOrderInfo::~PBOrderInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBOrderInfo)
  SharedDtor();
}

void PBOrderInfo::SharedDtor() {
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inserttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canceltime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  insertdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBOrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOrderInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOrderInfo_descriptor_;
}

const PBOrderInfo& PBOrderInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBOrderInfo* PBOrderInfo::default_instance_ = NULL;

PBOrderInfo* PBOrderInfo::New(::google::protobuf::Arena* arena) const {
  PBOrderInfo* n = new PBOrderInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBOrderInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBOrderInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBOrderInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, ordersysid_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exectype_ = 0;
  ZR_(tif_, ordertype_);
  volume_ = 0;
  ZR_(volumeremain_, active_);
  inserttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canceltime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumetraded_ = 0;
  ZR_(openclose_, sessionid_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  insertdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBOrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBOrderInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_orderID;
        break;
      }

      // optional uint64 orderID = 2;
      case 2: {
        if (tag == 16) {
         parse_orderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_orderSysID;
        break;
      }

      // optional uint64 orderSysID = 3;
      case 3: {
        if (tag == 24) {
         parse_orderSysID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordersysid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 4;
      case 4: {
        if (tag == 34) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_investorID;
        break;
      }

      // optional string investorID = 5;
      case 5: {
        if (tag == 42) {
         parse_investorID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorid().data(), this->investorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.investorID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_exchange;
        break;
      }

      // optional string exchange = 6;
      case 6: {
        if (tag == 50) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_contract;
        break;
      }

      // optional string contract = 7;
      case 7: {
        if (tag == 58) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_execType;
        break;
      }

      // optional int32 execType = 8;
      case 8: {
        if (tag == 64) {
         parse_execType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exectype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_tif;
        break;
      }

      // optional int32 tif = 9;
      case 9: {
        if (tag == 72) {
         parse_tif:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tif_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_tradingType;
        break;
      }

      // optional int32 tradingType = 10;
      case 10: {
        if (tag == 80) {
         parse_tradingType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_direction;
        break;
      }

      // optional int32 direction = 11;
      case 11: {
        if (tag == 88) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_limitPrice;
        break;
      }

      // optional double limitPrice = 12;
      case 12: {
        if (tag == 97) {
         parse_limitPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limitprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_stopPrice;
        break;
      }

      // optional double stopPrice = 13;
      case 13: {
        if (tag == 105) {
         parse_stopPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stopprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_orderStatus;
        break;
      }

      // optional int32 orderStatus = 14;
      case 14: {
        if (tag == 112) {
         parse_orderStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderstatus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_orderType;
        break;
      }

      // optional int32 orderType = 15;
      case 15: {
        if (tag == 120) {
         parse_orderType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordertype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_volume;
        break;
      }

      // optional int32 volume = 16;
      case 16: {
        if (tag == 128) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_insertTime;
        break;
      }

      // optional string insertTime = 17;
      case 17: {
        if (tag == 138) {
         parse_insertTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inserttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inserttime().data(), this->inserttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.insertTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_updateTime;
        break;
      }

      // optional string updateTime = 18;
      case 18: {
        if (tag == 146) {
         parse_updateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatetime().data(), this->updatetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.updateTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_cancelTime;
        break;
      }

      // optional string cancelTime = 19;
      case 19: {
        if (tag == 154) {
         parse_cancelTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_canceltime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->canceltime().data(), this->canceltime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.cancelTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_volumeTraded;
        break;
      }

      // optional int32 volumeTraded = 20;
      case 20: {
        if (tag == 160) {
         parse_volumeTraded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumetraded_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_volumeRemain;
        break;
      }

      // optional int32 volumeRemain = 21;
      case 21: {
        if (tag == 168) {
         parse_volumeRemain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumeremain_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_volumeCondition;
        break;
      }

      // optional int32 volumeCondition = 22;
      case 22: {
        if (tag == 176) {
         parse_volumeCondition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumecondition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_tradingDay;
        break;
      }

      // optional int32 tradingDay = 23;
      case 23: {
        if (tag == 184) {
         parse_tradingDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingday_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_active;
        break;
      }

      // optional bool active = 24;
      case 24: {
        if (tag == 192) {
         parse_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_openclose;
        break;
      }

      // optional int32 openclose = 25;
      case 25: {
        if (tag == 200) {
         parse_openclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openclose_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_message;
        break;
      }

      // optional bytes message = 26;
      case 26: {
        if (tag == 210) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_sessionID;
        break;
      }

      // optional int32 sessionID = 27;
      case 27: {
        if (tag == 216) {
         parse_sessionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 28;
      case 28: {
        if (tag == 226) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_insertDate;
        break;
      }

      // optional string insertDate = 29;
      case 29: {
        if (tag == 234) {
         parse_insertDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_insertdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->insertdate().data(), this->insertdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBOrderInfo.insertDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBOrderInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBOrderInfo)
  return false;
#undef DO_
}

void PBOrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBOrderInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->orderid(), output);
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ordersysid(), output);
  }

  // optional string brokerID = 4;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->brokerid(), output);
  }

  // optional string investorID = 5;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.investorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->investorid(), output);
  }

  // optional string exchange = 6;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->exchange(), output);
  }

  // optional string contract = 7;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contract(), output);
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->exectype(), output);
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->tif(), output);
  }

  // optional int32 tradingType = 10;
  if (this->tradingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->tradingtype(), output);
  }

  // optional int32 direction = 11;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->direction(), output);
  }

  // optional double limitPrice = 12;
  if (this->limitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->limitprice(), output);
  }

  // optional double stopPrice = 13;
  if (this->stopprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->stopprice(), output);
  }

  // optional int32 orderStatus = 14;
  if (this->orderstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->orderstatus(), output);
  }

  // optional int32 orderType = 15;
  if (this->ordertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->ordertype(), output);
  }

  // optional int32 volume = 16;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->volume(), output);
  }

  // optional string insertTime = 17;
  if (this->inserttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inserttime().data(), this->inserttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.insertTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->inserttime(), output);
  }

  // optional string updateTime = 18;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.updateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->updatetime(), output);
  }

  // optional string cancelTime = 19;
  if (this->canceltime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->canceltime().data(), this->canceltime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.cancelTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->canceltime(), output);
  }

  // optional int32 volumeTraded = 20;
  if (this->volumetraded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->volumetraded(), output);
  }

  // optional int32 volumeRemain = 21;
  if (this->volumeremain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->volumeremain(), output);
  }

  // optional int32 volumeCondition = 22;
  if (this->volumecondition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->volumecondition(), output);
  }

  // optional int32 tradingDay = 23;
  if (this->tradingday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->tradingday(), output);
  }

  // optional bool active = 24;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->active(), output);
  }

  // optional int32 openclose = 25;
  if (this->openclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->openclose(), output);
  }

  // optional bytes message = 26;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      26, this->message(), output);
  }

  // optional int32 sessionID = 27;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->sessionid(), output);
  }

  // optional string portfolio = 28;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->portfolio(), output);
  }

  // optional string insertDate = 29;
  if (this->insertdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->insertdate().data(), this->insertdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.insertDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->insertdate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBOrderInfo)
}

::google::protobuf::uint8* PBOrderInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBOrderInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->orderid(), target);
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ordersysid(), target);
  }

  // optional string brokerID = 4;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->brokerid(), target);
  }

  // optional string investorID = 5;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.investorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->investorid(), target);
  }

  // optional string exchange = 6;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->exchange(), target);
  }

  // optional string contract = 7;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->contract(), target);
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->exectype(), target);
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->tif(), target);
  }

  // optional int32 tradingType = 10;
  if (this->tradingtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->tradingtype(), target);
  }

  // optional int32 direction = 11;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->direction(), target);
  }

  // optional double limitPrice = 12;
  if (this->limitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->limitprice(), target);
  }

  // optional double stopPrice = 13;
  if (this->stopprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->stopprice(), target);
  }

  // optional int32 orderStatus = 14;
  if (this->orderstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->orderstatus(), target);
  }

  // optional int32 orderType = 15;
  if (this->ordertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->ordertype(), target);
  }

  // optional int32 volume = 16;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->volume(), target);
  }

  // optional string insertTime = 17;
  if (this->inserttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inserttime().data(), this->inserttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.insertTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->inserttime(), target);
  }

  // optional string updateTime = 18;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.updateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->updatetime(), target);
  }

  // optional string cancelTime = 19;
  if (this->canceltime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->canceltime().data(), this->canceltime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.cancelTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->canceltime(), target);
  }

  // optional int32 volumeTraded = 20;
  if (this->volumetraded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->volumetraded(), target);
  }

  // optional int32 volumeRemain = 21;
  if (this->volumeremain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->volumeremain(), target);
  }

  // optional int32 volumeCondition = 22;
  if (this->volumecondition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->volumecondition(), target);
  }

  // optional int32 tradingDay = 23;
  if (this->tradingday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->tradingday(), target);
  }

  // optional bool active = 24;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->active(), target);
  }

  // optional int32 openclose = 25;
  if (this->openclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->openclose(), target);
  }

  // optional bytes message = 26;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        26, this->message(), target);
  }

  // optional int32 sessionID = 27;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->sessionid(), target);
  }

  // optional string portfolio = 28;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->portfolio(), target);
  }

  // optional string insertDate = 29;
  if (this->insertdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->insertdate().data(), this->insertdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBOrderInfo.insertDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->insertdate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBOrderInfo)
  return target;
}

int PBOrderInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBOrderInfo)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional uint64 orderID = 2;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint64 orderSysID = 3;
  if (this->ordersysid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordersysid());
  }

  // optional string brokerID = 4;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string investorID = 5;
  if (this->investorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorid());
  }

  // optional string exchange = 6;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 7;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional int32 execType = 8;
  if (this->exectype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exectype());
  }

  // optional int32 tif = 9;
  if (this->tif() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tif());
  }

  // optional int32 tradingType = 10;
  if (this->tradingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingtype());
  }

  // optional int32 direction = 11;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional double limitPrice = 12;
  if (this->limitprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double stopPrice = 13;
  if (this->stopprice() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 orderStatus = 14;
  if (this->orderstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->orderstatus());
  }

  // optional int32 orderType = 15;
  if (this->ordertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ordertype());
  }

  // optional int32 volume = 16;
  if (this->volume() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional string insertTime = 17;
  if (this->inserttime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inserttime());
  }

  // optional string updateTime = 18;
  if (this->updatetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  // optional string cancelTime = 19;
  if (this->canceltime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->canceltime());
  }

  // optional int32 volumeTraded = 20;
  if (this->volumetraded() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumetraded());
  }

  // optional int32 volumeRemain = 21;
  if (this->volumeremain() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumeremain());
  }

  // optional int32 volumeCondition = 22;
  if (this->volumecondition() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumecondition());
  }

  // optional int32 tradingDay = 23;
  if (this->tradingday() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingday());
  }

  // optional bool active = 24;
  if (this->active() != 0) {
    total_size += 2 + 1;
  }

  // optional int32 openclose = 25;
  if (this->openclose() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openclose());
  }

  // optional bytes message = 26;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // optional int32 sessionID = 27;
  if (this->sessionid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  // optional string portfolio = 28;
  if (this->portfolio().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // optional string insertDate = 29;
  if (this->insertdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->insertdate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBOrderInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOrderInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBOrderInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBOrderInfo)
    MergeFrom(*source);
  }
}

void PBOrderInfo::MergeFrom(const PBOrderInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.ordersysid() != 0) {
    set_ordersysid(from.ordersysid());
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.investorid().size() > 0) {

    investorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorid_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.exectype() != 0) {
    set_exectype(from.exectype());
  }
  if (from.tif() != 0) {
    set_tif(from.tif());
  }
  if (from.tradingtype() != 0) {
    set_tradingtype(from.tradingtype());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.limitprice() != 0) {
    set_limitprice(from.limitprice());
  }
  if (from.stopprice() != 0) {
    set_stopprice(from.stopprice());
  }
  if (from.orderstatus() != 0) {
    set_orderstatus(from.orderstatus());
  }
  if (from.ordertype() != 0) {
    set_ordertype(from.ordertype());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.inserttime().size() > 0) {

    inserttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inserttime_);
  }
  if (from.updatetime().size() > 0) {

    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.canceltime().size() > 0) {

    canceltime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.canceltime_);
  }
  if (from.volumetraded() != 0) {
    set_volumetraded(from.volumetraded());
  }
  if (from.volumeremain() != 0) {
    set_volumeremain(from.volumeremain());
  }
  if (from.volumecondition() != 0) {
    set_volumecondition(from.volumecondition());
  }
  if (from.tradingday() != 0) {
    set_tradingday(from.tradingday());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
  if (from.openclose() != 0) {
    set_openclose(from.openclose());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
  if (from.insertdate().size() > 0) {

    insertdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.insertdate_);
  }
}

void PBOrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOrderInfo::CopyFrom(const PBOrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBOrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOrderInfo::IsInitialized() const {

  return true;
}

void PBOrderInfo::Swap(PBOrderInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOrderInfo::InternalSwap(PBOrderInfo* other) {
  std::swap(header_, other->header_);
  std::swap(orderid_, other->orderid_);
  std::swap(ordersysid_, other->ordersysid_);
  brokerid_.Swap(&other->brokerid_);
  investorid_.Swap(&other->investorid_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(exectype_, other->exectype_);
  std::swap(tif_, other->tif_);
  std::swap(tradingtype_, other->tradingtype_);
  std::swap(direction_, other->direction_);
  std::swap(limitprice_, other->limitprice_);
  std::swap(stopprice_, other->stopprice_);
  std::swap(orderstatus_, other->orderstatus_);
  std::swap(ordertype_, other->ordertype_);
  std::swap(volume_, other->volume_);
  inserttime_.Swap(&other->inserttime_);
  updatetime_.Swap(&other->updatetime_);
  canceltime_.Swap(&other->canceltime_);
  std::swap(volumetraded_, other->volumetraded_);
  std::swap(volumeremain_, other->volumeremain_);
  std::swap(volumecondition_, other->volumecondition_);
  std::swap(tradingday_, other->tradingday_);
  std::swap(active_, other->active_);
  std::swap(openclose_, other->openclose_);
  message_.Swap(&other->message_);
  std::swap(sessionid_, other->sessionid_);
  portfolio_.Swap(&other->portfolio_);
  insertdate_.Swap(&other->insertdate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOrderInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOrderInfo_descriptor_;
  metadata.reflection = PBOrderInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOrderInfo

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBOrderInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBOrderInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBOrderInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBOrderInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBOrderInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBOrderInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.header)
}

// optional uint64 orderID = 2;
void PBOrderInfo::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderInfo::orderid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderID)
  return orderid_;
}
 void PBOrderInfo::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderID)
}

// optional uint64 orderSysID = 3;
void PBOrderInfo::clear_ordersysid() {
  ordersysid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBOrderInfo::ordersysid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderSysID)
  return ordersysid_;
}
 void PBOrderInfo::set_ordersysid(::google::protobuf::uint64 value) {
  
  ordersysid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderSysID)
}

// optional string brokerID = 4;
void PBOrderInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}
 void PBOrderInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}
 void PBOrderInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}
 ::std::string* PBOrderInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.brokerID)
}

// optional string investorID = 5;
void PBOrderInfo::clear_investorid() {
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::investorid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.investorID)
  return investorid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_investorid(const ::std::string& value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.investorID)
}
 void PBOrderInfo::set_investorid(const char* value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.investorID)
}
 void PBOrderInfo::set_investorid(const char* value, size_t size) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.investorID)
}
 ::std::string* PBOrderInfo::mutable_investorid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.investorID)
  return investorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_investorid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.investorID)
  
  return investorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_investorid(::std::string* investorid) {
  if (investorid != NULL) {
    
  } else {
    
  }
  investorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.investorID)
}

// optional string exchange = 6;
void PBOrderInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.exchange)
}
 void PBOrderInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.exchange)
}
 void PBOrderInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.exchange)
}
 ::std::string* PBOrderInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.exchange)
}

// optional string contract = 7;
void PBOrderInfo::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.contract)
}
 void PBOrderInfo::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.contract)
}
 void PBOrderInfo::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.contract)
}
 ::std::string* PBOrderInfo::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.contract)
}

// optional int32 execType = 8;
void PBOrderInfo::clear_exectype() {
  exectype_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::exectype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.execType)
  return exectype_;
}
 void PBOrderInfo::set_exectype(::google::protobuf::int32 value) {
  
  exectype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.execType)
}

// optional int32 tif = 9;
void PBOrderInfo::clear_tif() {
  tif_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::tif() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.tif)
  return tif_;
}
 void PBOrderInfo::set_tif(::google::protobuf::int32 value) {
  
  tif_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.tif)
}

// optional int32 tradingType = 10;
void PBOrderInfo::clear_tradingtype() {
  tradingtype_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::tradingtype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.tradingType)
  return tradingtype_;
}
 void PBOrderInfo::set_tradingtype(::google::protobuf::int32 value) {
  
  tradingtype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.tradingType)
}

// optional int32 direction = 11;
void PBOrderInfo::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.direction)
  return direction_;
}
 void PBOrderInfo::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.direction)
}

// optional double limitPrice = 12;
void PBOrderInfo::clear_limitprice() {
  limitprice_ = 0;
}
 double PBOrderInfo::limitprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.limitPrice)
  return limitprice_;
}
 void PBOrderInfo::set_limitprice(double value) {
  
  limitprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.limitPrice)
}

// optional double stopPrice = 13;
void PBOrderInfo::clear_stopprice() {
  stopprice_ = 0;
}
 double PBOrderInfo::stopprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.stopPrice)
  return stopprice_;
}
 void PBOrderInfo::set_stopprice(double value) {
  
  stopprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.stopPrice)
}

// optional int32 orderStatus = 14;
void PBOrderInfo::clear_orderstatus() {
  orderstatus_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::orderstatus() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderStatus)
  return orderstatus_;
}
 void PBOrderInfo::set_orderstatus(::google::protobuf::int32 value) {
  
  orderstatus_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderStatus)
}

// optional int32 orderType = 15;
void PBOrderInfo::clear_ordertype() {
  ordertype_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::ordertype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.orderType)
  return ordertype_;
}
 void PBOrderInfo::set_ordertype(::google::protobuf::int32 value) {
  
  ordertype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.orderType)
}

// optional int32 volume = 16;
void PBOrderInfo::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volume)
  return volume_;
}
 void PBOrderInfo::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volume)
}

// optional string insertTime = 17;
void PBOrderInfo::clear_inserttime() {
  inserttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::inserttime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.insertTime)
  return inserttime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_inserttime(const ::std::string& value) {
  
  inserttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}
 void PBOrderInfo::set_inserttime(const char* value) {
  
  inserttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}
 void PBOrderInfo::set_inserttime(const char* value, size_t size) {
  
  inserttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}
 ::std::string* PBOrderInfo::mutable_inserttime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.insertTime)
  return inserttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_inserttime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.insertTime)
  
  return inserttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_inserttime(::std::string* inserttime) {
  if (inserttime != NULL) {
    
  } else {
    
  }
  inserttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inserttime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.insertTime)
}

// optional string updateTime = 18;
void PBOrderInfo::clear_updatetime() {
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::updatetime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.updateTime)
  return updatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_updatetime(const ::std::string& value) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}
 void PBOrderInfo::set_updatetime(const char* value) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}
 void PBOrderInfo::set_updatetime(const char* value, size_t size) {
  
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}
 ::std::string* PBOrderInfo::mutable_updatetime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.updateTime)
  return updatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_updatetime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.updateTime)
  
  return updatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_updatetime(::std::string* updatetime) {
  if (updatetime != NULL) {
    
  } else {
    
  }
  updatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatetime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.updateTime)
}

// optional string cancelTime = 19;
void PBOrderInfo::clear_canceltime() {
  canceltime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::canceltime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
  return canceltime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_canceltime(const ::std::string& value) {
  
  canceltime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}
 void PBOrderInfo::set_canceltime(const char* value) {
  
  canceltime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}
 void PBOrderInfo::set_canceltime(const char* value, size_t size) {
  
  canceltime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}
 ::std::string* PBOrderInfo::mutable_canceltime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
  return canceltime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_canceltime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
  
  return canceltime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_canceltime(::std::string* canceltime) {
  if (canceltime != NULL) {
    
  } else {
    
  }
  canceltime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), canceltime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.cancelTime)
}

// optional int32 volumeTraded = 20;
void PBOrderInfo::clear_volumetraded() {
  volumetraded_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volumetraded() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volumeTraded)
  return volumetraded_;
}
 void PBOrderInfo::set_volumetraded(::google::protobuf::int32 value) {
  
  volumetraded_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volumeTraded)
}

// optional int32 volumeRemain = 21;
void PBOrderInfo::clear_volumeremain() {
  volumeremain_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volumeremain() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volumeRemain)
  return volumeremain_;
}
 void PBOrderInfo::set_volumeremain(::google::protobuf::int32 value) {
  
  volumeremain_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volumeRemain)
}

// optional int32 volumeCondition = 22;
void PBOrderInfo::clear_volumecondition() {
  volumecondition_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::volumecondition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.volumeCondition)
  return volumecondition_;
}
 void PBOrderInfo::set_volumecondition(::google::protobuf::int32 value) {
  
  volumecondition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.volumeCondition)
}

// optional int32 tradingDay = 23;
void PBOrderInfo::clear_tradingday() {
  tradingday_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::tradingday() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.tradingDay)
  return tradingday_;
}
 void PBOrderInfo::set_tradingday(::google::protobuf::int32 value) {
  
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.tradingDay)
}

// optional bool active = 24;
void PBOrderInfo::clear_active() {
  active_ = false;
}
 bool PBOrderInfo::active() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.active)
  return active_;
}
 void PBOrderInfo::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.active)
}

// optional int32 openclose = 25;
void PBOrderInfo::clear_openclose() {
  openclose_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::openclose() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.openclose)
  return openclose_;
}
 void PBOrderInfo::set_openclose(::google::protobuf::int32 value) {
  
  openclose_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.openclose)
}

// optional bytes message = 26;
void PBOrderInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::message() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.message)
}
 void PBOrderInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.message)
}
 void PBOrderInfo::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.message)
}
 ::std::string* PBOrderInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_message() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.message)
}

// optional int32 sessionID = 27;
void PBOrderInfo::clear_sessionid() {
  sessionid_ = 0;
}
 ::google::protobuf::int32 PBOrderInfo::sessionid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.sessionID)
  return sessionid_;
}
 void PBOrderInfo::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.sessionID)
}

// optional string portfolio = 28;
void PBOrderInfo::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.portfolio)
}
 void PBOrderInfo::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.portfolio)
}
 void PBOrderInfo::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.portfolio)
}
 ::std::string* PBOrderInfo::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.portfolio)
}

// optional string insertDate = 29;
void PBOrderInfo::clear_insertdate() {
  insertdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBOrderInfo::insertdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBOrderInfo.insertDate)
  return insertdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_insertdate(const ::std::string& value) {
  
  insertdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBOrderInfo.insertDate)
}
 void PBOrderInfo::set_insertdate(const char* value) {
  
  insertdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBOrderInfo.insertDate)
}
 void PBOrderInfo::set_insertdate(const char* value, size_t size) {
  
  insertdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBOrderInfo.insertDate)
}
 ::std::string* PBOrderInfo::mutable_insertdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBOrderInfo.insertDate)
  return insertdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBOrderInfo::release_insertdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBOrderInfo.insertDate)
  
  return insertdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBOrderInfo::set_allocated_insertdate(::std::string* insertdate) {
  if (insertdate != NULL) {
    
  } else {
    
  }
  insertdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), insertdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBOrderInfo.insertDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTradeInfo::kHeaderFieldNumber;
const int PBTradeInfo::kTradeIDFieldNumber;
const int PBTradeInfo::kDirectionFieldNumber;
const int PBTradeInfo::kOpencloseFieldNumber;
const int PBTradeInfo::kOrderSysIDFieldNumber;
const int PBTradeInfo::kOrderIDFieldNumber;
const int PBTradeInfo::kPriceFieldNumber;
const int PBTradeInfo::kVolumeFieldNumber;
const int PBTradeInfo::kBrokerIDFieldNumber;
const int PBTradeInfo::kInvestorIDFieldNumber;
const int PBTradeInfo::kExchangeFieldNumber;
const int PBTradeInfo::kContractFieldNumber;
const int PBTradeInfo::kUserIDFieldNumber;
const int PBTradeInfo::kTradeDateFieldNumber;
const int PBTradeInfo::kTradeTimeFieldNumber;
const int PBTradeInfo::kTradeTypeFieldNumber;
const int PBTradeInfo::kHedgeFlagFieldNumber;
const int PBTradeInfo::kCommissionFieldNumber;
const int PBTradeInfo::kPortfolioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTradeInfo::PBTradeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBTradeInfo)
}

void PBTradeInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBTradeInfo::PBTradeInfo(const PBTradeInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBTradeInfo)
}

void PBTradeInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  tradeid_ = GOOGLE_ULONGLONG(0);
  direction_ = 0;
  openclose_ = 0;
  ordersysid_ = GOOGLE_ULONGLONG(0);
  orderid_ = GOOGLE_ULONGLONG(0);
  price_ = 0;
  volume_ = 0;
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetype_ = 0;
  hedgeflag_ = 0;
  commission_ = 0;
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBTradeInfo::~PBTradeInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBTradeInfo)
  SharedDtor();
}

void PBTradeInfo::SharedDtor() {
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBTradeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTradeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTradeInfo_descriptor_;
}

const PBTradeInfo& PBTradeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBTradeInfo* PBTradeInfo::default_instance_ = NULL;

PBTradeInfo* PBTradeInfo::New(::google::protobuf::Arena* arena) const {
  PBTradeInfo* n = new PBTradeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTradeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBTradeInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBTradeInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBTradeInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tradeid_, price_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  volume_ = 0;
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetype_ = 0;
  hedgeflag_ = 0;
  commission_ = 0;
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBTradeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBTradeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tradeID;
        break;
      }

      // optional uint64 tradeID = 2;
      case 2: {
        if (tag == 16) {
         parse_tradeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tradeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_direction;
        break;
      }

      // optional int32 direction = 3;
      case 3: {
        if (tag == 24) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_openclose;
        break;
      }

      // optional int32 openclose = 4;
      case 4: {
        if (tag == 32) {
         parse_openclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openclose_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_orderSysID;
        break;
      }

      // optional uint64 orderSysID = 5;
      case 5: {
        if (tag == 40) {
         parse_orderSysID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ordersysid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_orderID;
        break;
      }

      // optional uint64 orderID = 6;
      case 6: {
        if (tag == 48) {
         parse_orderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_price;
        break;
      }

      // optional double price = 7;
      case 7: {
        if (tag == 57) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_volume;
        break;
      }

      // optional int32 volume = 8;
      case 8: {
        if (tag == 64) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 9;
      case 9: {
        if (tag == 74) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_investorID;
        break;
      }

      // optional string investorID = 10;
      case 10: {
        if (tag == 82) {
         parse_investorID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investorid().data(), this->investorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.investorID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_exchange;
        break;
      }

      // optional string exchange = 11;
      case 11: {
        if (tag == 90) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_contract;
        break;
      }

      // optional string contract = 12;
      case 12: {
        if (tag == 98) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_userID;
        break;
      }

      // optional string userID = 13;
      case 13: {
        if (tag == 106) {
         parse_userID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.userID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_tradeDate;
        break;
      }

      // optional string tradeDate = 14;
      case 14: {
        if (tag == 114) {
         parse_tradeDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradedate().data(), this->tradedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.tradeDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_tradeTime;
        break;
      }

      // optional string tradeTime = 15;
      case 15: {
        if (tag == 122) {
         parse_tradeTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradetime().data(), this->tradetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.tradeTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_tradeType;
        break;
      }

      // optional int32 tradeType = 16;
      case 16: {
        if (tag == 128) {
         parse_tradeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_hedgeFlag;
        break;
      }

      // optional int32 hedgeFlag = 17;
      case 17: {
        if (tag == 136) {
         parse_hedgeFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hedgeflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_commission;
        break;
      }

      // optional double commission = 18;
      case 18: {
        if (tag == 145) {
         parse_commission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 19;
      case 19: {
        if (tag == 154) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBTradeInfo.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBTradeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBTradeInfo)
  return false;
#undef DO_
}

void PBTradeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBTradeInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional uint64 tradeID = 2;
  if (this->tradeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tradeid(), output);
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->direction(), output);
  }

  // optional int32 openclose = 4;
  if (this->openclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->openclose(), output);
  }

  // optional uint64 orderSysID = 5;
  if (this->ordersysid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->ordersysid(), output);
  }

  // optional uint64 orderID = 6;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->orderid(), output);
  }

  // optional double price = 7;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->price(), output);
  }

  // optional int32 volume = 8;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->volume(), output);
  }

  // optional string brokerID = 9;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->brokerid(), output);
  }

  // optional string investorID = 10;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.investorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->investorid(), output);
  }

  // optional string exchange = 11;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->exchange(), output);
  }

  // optional string contract = 12;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->contract(), output);
  }

  // optional string userID = 13;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.userID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->userid(), output);
  }

  // optional string tradeDate = 14;
  if (this->tradedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->tradedate(), output);
  }

  // optional string tradeTime = 15;
  if (this->tradetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradetime().data(), this->tradetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->tradetime(), output);
  }

  // optional int32 tradeType = 16;
  if (this->tradetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->tradetype(), output);
  }

  // optional int32 hedgeFlag = 17;
  if (this->hedgeflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->hedgeflag(), output);
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->commission(), output);
  }

  // optional string portfolio = 19;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->portfolio(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBTradeInfo)
}

::google::protobuf::uint8* PBTradeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBTradeInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional uint64 tradeID = 2;
  if (this->tradeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tradeid(), target);
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->direction(), target);
  }

  // optional int32 openclose = 4;
  if (this->openclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->openclose(), target);
  }

  // optional uint64 orderSysID = 5;
  if (this->ordersysid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->ordersysid(), target);
  }

  // optional uint64 orderID = 6;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->orderid(), target);
  }

  // optional double price = 7;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->price(), target);
  }

  // optional int32 volume = 8;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->volume(), target);
  }

  // optional string brokerID = 9;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->brokerid(), target);
  }

  // optional string investorID = 10;
  if (this->investorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investorid().data(), this->investorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.investorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->investorid(), target);
  }

  // optional string exchange = 11;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->exchange(), target);
  }

  // optional string contract = 12;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->contract(), target);
  }

  // optional string userID = 13;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.userID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->userid(), target);
  }

  // optional string tradeDate = 14;
  if (this->tradedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->tradedate(), target);
  }

  // optional string tradeTime = 15;
  if (this->tradetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradetime().data(), this->tradetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.tradeTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->tradetime(), target);
  }

  // optional int32 tradeType = 16;
  if (this->tradetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->tradetype(), target);
  }

  // optional int32 hedgeFlag = 17;
  if (this->hedgeflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->hedgeflag(), target);
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->commission(), target);
  }

  // optional string portfolio = 19;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBTradeInfo.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->portfolio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBTradeInfo)
  return target;
}

int PBTradeInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBTradeInfo)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional uint64 tradeID = 2;
  if (this->tradeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tradeid());
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 openclose = 4;
  if (this->openclose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openclose());
  }

  // optional uint64 orderSysID = 5;
  if (this->ordersysid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ordersysid());
  }

  // optional uint64 orderID = 6;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional double price = 7;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 volume = 8;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // optional string brokerID = 9;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string investorID = 10;
  if (this->investorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investorid());
  }

  // optional string exchange = 11;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 12;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string userID = 13;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string tradeDate = 14;
  if (this->tradedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradedate());
  }

  // optional string tradeTime = 15;
  if (this->tradetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradetime());
  }

  // optional int32 tradeType = 16;
  if (this->tradetype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradetype());
  }

  // optional int32 hedgeFlag = 17;
  if (this->hedgeflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hedgeflag());
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    total_size += 2 + 8;
  }

  // optional string portfolio = 19;
  if (this->portfolio().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTradeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTradeInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTradeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBTradeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBTradeInfo)
    MergeFrom(*source);
  }
}

void PBTradeInfo::MergeFrom(const PBTradeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.tradeid() != 0) {
    set_tradeid(from.tradeid());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.openclose() != 0) {
    set_openclose(from.openclose());
  }
  if (from.ordersysid() != 0) {
    set_ordersysid(from.ordersysid());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.investorid().size() > 0) {

    investorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investorid_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.tradedate().size() > 0) {

    tradedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradedate_);
  }
  if (from.tradetime().size() > 0) {

    tradetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradetime_);
  }
  if (from.tradetype() != 0) {
    set_tradetype(from.tradetype());
  }
  if (from.hedgeflag() != 0) {
    set_hedgeflag(from.hedgeflag());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
}

void PBTradeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTradeInfo::CopyFrom(const PBTradeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBTradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTradeInfo::IsInitialized() const {

  return true;
}

void PBTradeInfo::Swap(PBTradeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTradeInfo::InternalSwap(PBTradeInfo* other) {
  std::swap(header_, other->header_);
  std::swap(tradeid_, other->tradeid_);
  std::swap(direction_, other->direction_);
  std::swap(openclose_, other->openclose_);
  std::swap(ordersysid_, other->ordersysid_);
  std::swap(orderid_, other->orderid_);
  std::swap(price_, other->price_);
  std::swap(volume_, other->volume_);
  brokerid_.Swap(&other->brokerid_);
  investorid_.Swap(&other->investorid_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  userid_.Swap(&other->userid_);
  tradedate_.Swap(&other->tradedate_);
  tradetime_.Swap(&other->tradetime_);
  std::swap(tradetype_, other->tradetype_);
  std::swap(hedgeflag_, other->hedgeflag_);
  std::swap(commission_, other->commission_);
  portfolio_.Swap(&other->portfolio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTradeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTradeInfo_descriptor_;
  metadata.reflection = PBTradeInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTradeInfo

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBTradeInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBTradeInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBTradeInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBTradeInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBTradeInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBTradeInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.header)
}

// optional uint64 tradeID = 2;
void PBTradeInfo::clear_tradeid() {
  tradeid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBTradeInfo::tradeid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeID)
  return tradeid_;
}
 void PBTradeInfo::set_tradeid(::google::protobuf::uint64 value) {
  
  tradeid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeID)
}

// optional int32 direction = 3;
void PBTradeInfo::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.direction)
  return direction_;
}
 void PBTradeInfo::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.direction)
}

// optional int32 openclose = 4;
void PBTradeInfo::clear_openclose() {
  openclose_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::openclose() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.openclose)
  return openclose_;
}
 void PBTradeInfo::set_openclose(::google::protobuf::int32 value) {
  
  openclose_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.openclose)
}

// optional uint64 orderSysID = 5;
void PBTradeInfo::clear_ordersysid() {
  ordersysid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBTradeInfo::ordersysid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.orderSysID)
  return ordersysid_;
}
 void PBTradeInfo::set_ordersysid(::google::protobuf::uint64 value) {
  
  ordersysid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.orderSysID)
}

// optional uint64 orderID = 6;
void PBTradeInfo::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PBTradeInfo::orderid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.orderID)
  return orderid_;
}
 void PBTradeInfo::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.orderID)
}

// optional double price = 7;
void PBTradeInfo::clear_price() {
  price_ = 0;
}
 double PBTradeInfo::price() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.price)
  return price_;
}
 void PBTradeInfo::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.price)
}

// optional int32 volume = 8;
void PBTradeInfo::clear_volume() {
  volume_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::volume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.volume)
  return volume_;
}
 void PBTradeInfo::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.volume)
}

// optional string brokerID = 9;
void PBTradeInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}
 void PBTradeInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}
 void PBTradeInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}
 ::std::string* PBTradeInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.brokerID)
}

// optional string investorID = 10;
void PBTradeInfo::clear_investorid() {
  investorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::investorid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.investorID)
  return investorid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_investorid(const ::std::string& value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.investorID)
}
 void PBTradeInfo::set_investorid(const char* value) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.investorID)
}
 void PBTradeInfo::set_investorid(const char* value, size_t size) {
  
  investorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.investorID)
}
 ::std::string* PBTradeInfo::mutable_investorid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.investorID)
  return investorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_investorid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.investorID)
  
  return investorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_investorid(::std::string* investorid) {
  if (investorid != NULL) {
    
  } else {
    
  }
  investorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investorid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.investorID)
}

// optional string exchange = 11;
void PBTradeInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.exchange)
}
 void PBTradeInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.exchange)
}
 void PBTradeInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.exchange)
}
 ::std::string* PBTradeInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.exchange)
}

// optional string contract = 12;
void PBTradeInfo::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.contract)
}
 void PBTradeInfo::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.contract)
}
 void PBTradeInfo::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.contract)
}
 ::std::string* PBTradeInfo::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.contract)
}

// optional string userID = 13;
void PBTradeInfo::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::userid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.userID)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.userID)
}
 void PBTradeInfo::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.userID)
}
 void PBTradeInfo::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.userID)
}
 ::std::string* PBTradeInfo::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_userid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.userID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.userID)
}

// optional string tradeDate = 14;
void PBTradeInfo::clear_tradedate() {
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::tradedate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
  return tradedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_tradedate(const ::std::string& value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}
 void PBTradeInfo::set_tradedate(const char* value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}
 void PBTradeInfo::set_tradedate(const char* value, size_t size) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}
 ::std::string* PBTradeInfo::mutable_tradedate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
  return tradedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_tradedate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
  
  return tradedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_tradedate(::std::string* tradedate) {
  if (tradedate != NULL) {
    
  } else {
    
  }
  tradedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradedate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.tradeDate)
}

// optional string tradeTime = 15;
void PBTradeInfo::clear_tradetime() {
  tradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::tradetime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
  return tradetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_tradetime(const ::std::string& value) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}
 void PBTradeInfo::set_tradetime(const char* value) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}
 void PBTradeInfo::set_tradetime(const char* value, size_t size) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}
 ::std::string* PBTradeInfo::mutable_tradetime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
  return tradetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_tradetime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
  
  return tradetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_tradetime(::std::string* tradetime) {
  if (tradetime != NULL) {
    
  } else {
    
  }
  tradetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradetime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.tradeTime)
}

// optional int32 tradeType = 16;
void PBTradeInfo::clear_tradetype() {
  tradetype_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::tradetype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.tradeType)
  return tradetype_;
}
 void PBTradeInfo::set_tradetype(::google::protobuf::int32 value) {
  
  tradetype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.tradeType)
}

// optional int32 hedgeFlag = 17;
void PBTradeInfo::clear_hedgeflag() {
  hedgeflag_ = 0;
}
 ::google::protobuf::int32 PBTradeInfo::hedgeflag() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.hedgeFlag)
  return hedgeflag_;
}
 void PBTradeInfo::set_hedgeflag(::google::protobuf::int32 value) {
  
  hedgeflag_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.hedgeFlag)
}

// optional double commission = 18;
void PBTradeInfo::clear_commission() {
  commission_ = 0;
}
 double PBTradeInfo::commission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.commission)
  return commission_;
}
 void PBTradeInfo::set_commission(double value) {
  
  commission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.commission)
}

// optional string portfolio = 19;
void PBTradeInfo::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBTradeInfo::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBTradeInfo.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBTradeInfo.portfolio)
}
 void PBTradeInfo::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBTradeInfo.portfolio)
}
 void PBTradeInfo::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBTradeInfo.portfolio)
}
 ::std::string* PBTradeInfo::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBTradeInfo.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBTradeInfo::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBTradeInfo.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBTradeInfo::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBTradeInfo.portfolio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPosition::kHeaderFieldNumber;
const int PBPosition::kExchangeFieldNumber;
const int PBPosition::kContractFieldNumber;
const int PBPosition::kDirectionFieldNumber;
const int PBPosition::kTdPositionFieldNumber;
const int PBPosition::kYdPositionFieldNumber;
const int PBPosition::kPositionDateFlagFieldNumber;
const int PBPosition::kOpenVolumeFieldNumber;
const int PBPosition::kCloseVolumeFieldNumber;
const int PBPosition::kOpenAmountFieldNumber;
const int PBPosition::kCloseAmountFieldNumber;
const int PBPosition::kTdCostFieldNumber;
const int PBPosition::kYdCostFieldNumber;
const int PBPosition::kOpenCostFieldNumber;
const int PBPosition::kCloseProfitFieldNumber;
const int PBPosition::kUseMarginFieldNumber;
const int PBPosition::kHedgeFlagFieldNumber;
const int PBPosition::kPortfolioFieldNumber;
const int PBPosition::kProfitFieldNumber;
const int PBPosition::kLongFrozenVolumeFieldNumber;
const int PBPosition::kShortFrozenVolumeFieldNumber;
const int PBPosition::kLongFrozenAmountFieldNumber;
const int PBPosition::kShortFrozenAmountFieldNumber;
const int PBPosition::kLastPriceFieldNumber;
const int PBPosition::kAvgPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPosition::PBPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPosition)
}

void PBPosition::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPosition::PBPosition(const PBPosition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPosition)
}

void PBPosition::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_ = 0;
  tdposition_ = 0;
  ydposition_ = 0;
  positiondateflag_ = 0;
  openvolume_ = 0;
  closevolume_ = 0;
  openamount_ = 0;
  closeamount_ = 0;
  tdcost_ = 0;
  ydcost_ = 0;
  opencost_ = 0;
  closeprofit_ = 0;
  usemargin_ = 0;
  hedgeflag_ = 0;
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profit_ = 0;
  longfrozenvolume_ = 0;
  shortfrozenvolume_ = 0;
  longfrozenamount_ = 0;
  shortfrozenamount_ = 0;
  lastprice_ = 0;
  avgprice_ = 0;
}

PBPosition::~PBPosition() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPosition)
  SharedDtor();
}

void PBPosition::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPosition_descriptor_;
}

const PBPosition& PBPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPosition* PBPosition::default_instance_ = NULL;

PBPosition* PBPosition::New(::google::protobuf::Arena* arena) const {
  PBPosition* n = new PBPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPosition)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPosition, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPosition*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(direction_, openvolume_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(closevolume_, usemargin_);
  ZR_(hedgeflag_, lastprice_);
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortfrozenvolume_ = 0;
  avgprice_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool PBPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPosition.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPosition.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_direction;
        break;
      }

      // optional int32 direction = 4;
      case 4: {
        if (tag == 32) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tdPosition;
        break;
      }

      // optional int32 tdPosition = 5;
      case 5: {
        if (tag == 40) {
         parse_tdPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tdposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ydPosition;
        break;
      }

      // optional int32 ydPosition = 6;
      case 6: {
        if (tag == 48) {
         parse_ydPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ydposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_positionDateFlag;
        break;
      }

      // optional int32 positionDateFlag = 7;
      case 7: {
        if (tag == 56) {
         parse_positionDateFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiondateflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_openVolume;
        break;
      }

      // optional int32 openVolume = 8;
      case 8: {
        if (tag == 64) {
         parse_openVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openvolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_closeVolume;
        break;
      }

      // optional int32 closeVolume = 9;
      case 9: {
        if (tag == 72) {
         parse_closeVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &closevolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_openAmount;
        break;
      }

      // optional double openAmount = 10;
      case 10: {
        if (tag == 81) {
         parse_openAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_closeAmount;
        break;
      }

      // optional double closeAmount = 11;
      case 11: {
        if (tag == 89) {
         parse_closeAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_tdCost;
        break;
      }

      // optional double tdCost = 12;
      case 12: {
        if (tag == 97) {
         parse_tdCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tdcost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_ydCost;
        break;
      }

      // optional double ydCost = 13;
      case 13: {
        if (tag == 105) {
         parse_ydCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ydcost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_openCost;
        break;
      }

      // optional double openCost = 14;
      case 14: {
        if (tag == 113) {
         parse_openCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &opencost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_closeProfit;
        break;
      }

      // optional double closeProfit = 15;
      case 15: {
        if (tag == 121) {
         parse_closeProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_useMargin;
        break;
      }

      // optional double useMargin = 16;
      case 16: {
        if (tag == 129) {
         parse_useMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &usemargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_hedgeFlag;
        break;
      }

      // optional int32 hedgeFlag = 17;
      case 17: {
        if (tag == 136) {
         parse_hedgeFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hedgeflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 19;
      case 19: {
        if (tag == 154) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPosition.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_profit;
        break;
      }

      // optional double profit = 20;
      case 20: {
        if (tag == 161) {
         parse_profit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &profit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_longFrozenVolume;
        break;
      }

      // optional int32 longFrozenVolume = 21;
      case 21: {
        if (tag == 168) {
         parse_longFrozenVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &longfrozenvolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_shortFrozenVolume;
        break;
      }

      // optional int32 shortFrozenVolume = 22;
      case 22: {
        if (tag == 176) {
         parse_shortFrozenVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shortfrozenvolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_longFrozenAmount;
        break;
      }

      // optional double longFrozenAmount = 23;
      case 23: {
        if (tag == 185) {
         parse_longFrozenAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longfrozenamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_shortFrozenAmount;
        break;
      }

      // optional double shortFrozenAmount = 24;
      case 24: {
        if (tag == 193) {
         parse_shortFrozenAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shortfrozenamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(201)) goto parse_lastPrice;
        break;
      }

      // optional double lastPrice = 25;
      case 25: {
        if (tag == 201) {
         parse_lastPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(209)) goto parse_avgPrice;
        break;
      }

      // optional double avgPrice = 26;
      case 26: {
        if (tag == 209) {
         parse_avgPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPosition)
  return false;
#undef DO_
}

void PBPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPosition)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional int32 direction = 4;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->direction(), output);
  }

  // optional int32 tdPosition = 5;
  if (this->tdposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tdposition(), output);
  }

  // optional int32 ydPosition = 6;
  if (this->ydposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ydposition(), output);
  }

  // optional int32 positionDateFlag = 7;
  if (this->positiondateflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->positiondateflag(), output);
  }

  // optional int32 openVolume = 8;
  if (this->openvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->openvolume(), output);
  }

  // optional int32 closeVolume = 9;
  if (this->closevolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->closevolume(), output);
  }

  // optional double openAmount = 10;
  if (this->openamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->openamount(), output);
  }

  // optional double closeAmount = 11;
  if (this->closeamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->closeamount(), output);
  }

  // optional double tdCost = 12;
  if (this->tdcost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->tdcost(), output);
  }

  // optional double ydCost = 13;
  if (this->ydcost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->ydcost(), output);
  }

  // optional double openCost = 14;
  if (this->opencost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->opencost(), output);
  }

  // optional double closeProfit = 15;
  if (this->closeprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->closeprofit(), output);
  }

  // optional double useMargin = 16;
  if (this->usemargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->usemargin(), output);
  }

  // optional int32 hedgeFlag = 17;
  if (this->hedgeflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->hedgeflag(), output);
  }

  // optional string portfolio = 19;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->portfolio(), output);
  }

  // optional double profit = 20;
  if (this->profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->profit(), output);
  }

  // optional int32 longFrozenVolume = 21;
  if (this->longfrozenvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->longfrozenvolume(), output);
  }

  // optional int32 shortFrozenVolume = 22;
  if (this->shortfrozenvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->shortfrozenvolume(), output);
  }

  // optional double longFrozenAmount = 23;
  if (this->longfrozenamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->longfrozenamount(), output);
  }

  // optional double shortFrozenAmount = 24;
  if (this->shortfrozenamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->shortfrozenamount(), output);
  }

  // optional double lastPrice = 25;
  if (this->lastprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->lastprice(), output);
  }

  // optional double avgPrice = 26;
  if (this->avgprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->avgprice(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPosition)
}

::google::protobuf::uint8* PBPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPosition)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional int32 direction = 4;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->direction(), target);
  }

  // optional int32 tdPosition = 5;
  if (this->tdposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tdposition(), target);
  }

  // optional int32 ydPosition = 6;
  if (this->ydposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ydposition(), target);
  }

  // optional int32 positionDateFlag = 7;
  if (this->positiondateflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->positiondateflag(), target);
  }

  // optional int32 openVolume = 8;
  if (this->openvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->openvolume(), target);
  }

  // optional int32 closeVolume = 9;
  if (this->closevolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->closevolume(), target);
  }

  // optional double openAmount = 10;
  if (this->openamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->openamount(), target);
  }

  // optional double closeAmount = 11;
  if (this->closeamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->closeamount(), target);
  }

  // optional double tdCost = 12;
  if (this->tdcost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->tdcost(), target);
  }

  // optional double ydCost = 13;
  if (this->ydcost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->ydcost(), target);
  }

  // optional double openCost = 14;
  if (this->opencost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->opencost(), target);
  }

  // optional double closeProfit = 15;
  if (this->closeprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->closeprofit(), target);
  }

  // optional double useMargin = 16;
  if (this->usemargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->usemargin(), target);
  }

  // optional int32 hedgeFlag = 17;
  if (this->hedgeflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->hedgeflag(), target);
  }

  // optional string portfolio = 19;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPosition.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->portfolio(), target);
  }

  // optional double profit = 20;
  if (this->profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->profit(), target);
  }

  // optional int32 longFrozenVolume = 21;
  if (this->longfrozenvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->longfrozenvolume(), target);
  }

  // optional int32 shortFrozenVolume = 22;
  if (this->shortfrozenvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->shortfrozenvolume(), target);
  }

  // optional double longFrozenAmount = 23;
  if (this->longfrozenamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->longfrozenamount(), target);
  }

  // optional double shortFrozenAmount = 24;
  if (this->shortfrozenamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->shortfrozenamount(), target);
  }

  // optional double lastPrice = 25;
  if (this->lastprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->lastprice(), target);
  }

  // optional double avgPrice = 26;
  if (this->avgprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->avgprice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPosition)
  return target;
}

int PBPosition::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPosition)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional int32 direction = 4;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 tdPosition = 5;
  if (this->tdposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tdposition());
  }

  // optional int32 ydPosition = 6;
  if (this->ydposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ydposition());
  }

  // optional int32 positionDateFlag = 7;
  if (this->positiondateflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->positiondateflag());
  }

  // optional int32 openVolume = 8;
  if (this->openvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openvolume());
  }

  // optional int32 closeVolume = 9;
  if (this->closevolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->closevolume());
  }

  // optional double openAmount = 10;
  if (this->openamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double closeAmount = 11;
  if (this->closeamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double tdCost = 12;
  if (this->tdcost() != 0) {
    total_size += 1 + 8;
  }

  // optional double ydCost = 13;
  if (this->ydcost() != 0) {
    total_size += 1 + 8;
  }

  // optional double openCost = 14;
  if (this->opencost() != 0) {
    total_size += 1 + 8;
  }

  // optional double closeProfit = 15;
  if (this->closeprofit() != 0) {
    total_size += 1 + 8;
  }

  // optional double useMargin = 16;
  if (this->usemargin() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 hedgeFlag = 17;
  if (this->hedgeflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hedgeflag());
  }

  // optional string portfolio = 19;
  if (this->portfolio().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // optional double profit = 20;
  if (this->profit() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 longFrozenVolume = 21;
  if (this->longfrozenvolume() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->longfrozenvolume());
  }

  // optional int32 shortFrozenVolume = 22;
  if (this->shortfrozenvolume() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shortfrozenvolume());
  }

  // optional double longFrozenAmount = 23;
  if (this->longfrozenamount() != 0) {
    total_size += 2 + 8;
  }

  // optional double shortFrozenAmount = 24;
  if (this->shortfrozenamount() != 0) {
    total_size += 2 + 8;
  }

  // optional double lastPrice = 25;
  if (this->lastprice() != 0) {
    total_size += 2 + 8;
  }

  // optional double avgPrice = 26;
  if (this->avgprice() != 0) {
    total_size += 2 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPosition* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPosition)
    MergeFrom(*source);
  }
}

void PBPosition::MergeFrom(const PBPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.tdposition() != 0) {
    set_tdposition(from.tdposition());
  }
  if (from.ydposition() != 0) {
    set_ydposition(from.ydposition());
  }
  if (from.positiondateflag() != 0) {
    set_positiondateflag(from.positiondateflag());
  }
  if (from.openvolume() != 0) {
    set_openvolume(from.openvolume());
  }
  if (from.closevolume() != 0) {
    set_closevolume(from.closevolume());
  }
  if (from.openamount() != 0) {
    set_openamount(from.openamount());
  }
  if (from.closeamount() != 0) {
    set_closeamount(from.closeamount());
  }
  if (from.tdcost() != 0) {
    set_tdcost(from.tdcost());
  }
  if (from.ydcost() != 0) {
    set_ydcost(from.ydcost());
  }
  if (from.opencost() != 0) {
    set_opencost(from.opencost());
  }
  if (from.closeprofit() != 0) {
    set_closeprofit(from.closeprofit());
  }
  if (from.usemargin() != 0) {
    set_usemargin(from.usemargin());
  }
  if (from.hedgeflag() != 0) {
    set_hedgeflag(from.hedgeflag());
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
  if (from.profit() != 0) {
    set_profit(from.profit());
  }
  if (from.longfrozenvolume() != 0) {
    set_longfrozenvolume(from.longfrozenvolume());
  }
  if (from.shortfrozenvolume() != 0) {
    set_shortfrozenvolume(from.shortfrozenvolume());
  }
  if (from.longfrozenamount() != 0) {
    set_longfrozenamount(from.longfrozenamount());
  }
  if (from.shortfrozenamount() != 0) {
    set_shortfrozenamount(from.shortfrozenamount());
  }
  if (from.lastprice() != 0) {
    set_lastprice(from.lastprice());
  }
  if (from.avgprice() != 0) {
    set_avgprice(from.avgprice());
  }
}

void PBPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPosition::CopyFrom(const PBPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPosition::IsInitialized() const {

  return true;
}

void PBPosition::Swap(PBPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPosition::InternalSwap(PBPosition* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(direction_, other->direction_);
  std::swap(tdposition_, other->tdposition_);
  std::swap(ydposition_, other->ydposition_);
  std::swap(positiondateflag_, other->positiondateflag_);
  std::swap(openvolume_, other->openvolume_);
  std::swap(closevolume_, other->closevolume_);
  std::swap(openamount_, other->openamount_);
  std::swap(closeamount_, other->closeamount_);
  std::swap(tdcost_, other->tdcost_);
  std::swap(ydcost_, other->ydcost_);
  std::swap(opencost_, other->opencost_);
  std::swap(closeprofit_, other->closeprofit_);
  std::swap(usemargin_, other->usemargin_);
  std::swap(hedgeflag_, other->hedgeflag_);
  portfolio_.Swap(&other->portfolio_);
  std::swap(profit_, other->profit_);
  std::swap(longfrozenvolume_, other->longfrozenvolume_);
  std::swap(shortfrozenvolume_, other->shortfrozenvolume_);
  std::swap(longfrozenamount_, other->longfrozenamount_);
  std::swap(shortfrozenamount_, other->shortfrozenamount_);
  std::swap(lastprice_, other->lastprice_);
  std::swap(avgprice_, other->avgprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPosition_descriptor_;
  metadata.reflection = PBPosition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPosition

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBPosition::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPosition::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPosition::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPosition::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPosition::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPosition::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.header)
}

// optional string exchange = 2;
void PBPosition::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPosition::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.exchange)
}
 void PBPosition::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPosition.exchange)
}
 void PBPosition::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPosition.exchange)
}
 ::std::string* PBPosition::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPosition::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.exchange)
}

// optional string contract = 3;
void PBPosition::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPosition::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.contract)
}
 void PBPosition::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPosition.contract)
}
 void PBPosition::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPosition.contract)
}
 ::std::string* PBPosition::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPosition::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.contract)
}

// optional int32 direction = 4;
void PBPosition::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBPosition::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.direction)
  return direction_;
}
 void PBPosition::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.direction)
}

// optional int32 tdPosition = 5;
void PBPosition::clear_tdposition() {
  tdposition_ = 0;
}
 ::google::protobuf::int32 PBPosition::tdposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.tdPosition)
  return tdposition_;
}
 void PBPosition::set_tdposition(::google::protobuf::int32 value) {
  
  tdposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.tdPosition)
}

// optional int32 ydPosition = 6;
void PBPosition::clear_ydposition() {
  ydposition_ = 0;
}
 ::google::protobuf::int32 PBPosition::ydposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.ydPosition)
  return ydposition_;
}
 void PBPosition::set_ydposition(::google::protobuf::int32 value) {
  
  ydposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.ydPosition)
}

// optional int32 positionDateFlag = 7;
void PBPosition::clear_positiondateflag() {
  positiondateflag_ = 0;
}
 ::google::protobuf::int32 PBPosition::positiondateflag() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.positionDateFlag)
  return positiondateflag_;
}
 void PBPosition::set_positiondateflag(::google::protobuf::int32 value) {
  
  positiondateflag_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.positionDateFlag)
}

// optional int32 openVolume = 8;
void PBPosition::clear_openvolume() {
  openvolume_ = 0;
}
 ::google::protobuf::int32 PBPosition::openvolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.openVolume)
  return openvolume_;
}
 void PBPosition::set_openvolume(::google::protobuf::int32 value) {
  
  openvolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.openVolume)
}

// optional int32 closeVolume = 9;
void PBPosition::clear_closevolume() {
  closevolume_ = 0;
}
 ::google::protobuf::int32 PBPosition::closevolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.closeVolume)
  return closevolume_;
}
 void PBPosition::set_closevolume(::google::protobuf::int32 value) {
  
  closevolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.closeVolume)
}

// optional double openAmount = 10;
void PBPosition::clear_openamount() {
  openamount_ = 0;
}
 double PBPosition::openamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.openAmount)
  return openamount_;
}
 void PBPosition::set_openamount(double value) {
  
  openamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.openAmount)
}

// optional double closeAmount = 11;
void PBPosition::clear_closeamount() {
  closeamount_ = 0;
}
 double PBPosition::closeamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.closeAmount)
  return closeamount_;
}
 void PBPosition::set_closeamount(double value) {
  
  closeamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.closeAmount)
}

// optional double tdCost = 12;
void PBPosition::clear_tdcost() {
  tdcost_ = 0;
}
 double PBPosition::tdcost() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.tdCost)
  return tdcost_;
}
 void PBPosition::set_tdcost(double value) {
  
  tdcost_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.tdCost)
}

// optional double ydCost = 13;
void PBPosition::clear_ydcost() {
  ydcost_ = 0;
}
 double PBPosition::ydcost() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.ydCost)
  return ydcost_;
}
 void PBPosition::set_ydcost(double value) {
  
  ydcost_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.ydCost)
}

// optional double openCost = 14;
void PBPosition::clear_opencost() {
  opencost_ = 0;
}
 double PBPosition::opencost() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.openCost)
  return opencost_;
}
 void PBPosition::set_opencost(double value) {
  
  opencost_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.openCost)
}

// optional double closeProfit = 15;
void PBPosition::clear_closeprofit() {
  closeprofit_ = 0;
}
 double PBPosition::closeprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.closeProfit)
  return closeprofit_;
}
 void PBPosition::set_closeprofit(double value) {
  
  closeprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.closeProfit)
}

// optional double useMargin = 16;
void PBPosition::clear_usemargin() {
  usemargin_ = 0;
}
 double PBPosition::usemargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.useMargin)
  return usemargin_;
}
 void PBPosition::set_usemargin(double value) {
  
  usemargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.useMargin)
}

// optional int32 hedgeFlag = 17;
void PBPosition::clear_hedgeflag() {
  hedgeflag_ = 0;
}
 ::google::protobuf::int32 PBPosition::hedgeflag() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.hedgeFlag)
  return hedgeflag_;
}
 void PBPosition::set_hedgeflag(::google::protobuf::int32 value) {
  
  hedgeflag_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.hedgeFlag)
}

// optional string portfolio = 19;
void PBPosition::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPosition::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.portfolio)
}
 void PBPosition::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPosition.portfolio)
}
 void PBPosition::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPosition.portfolio)
}
 ::std::string* PBPosition::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPosition.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPosition::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPosition.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPosition::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPosition.portfolio)
}

// optional double profit = 20;
void PBPosition::clear_profit() {
  profit_ = 0;
}
 double PBPosition::profit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.profit)
  return profit_;
}
 void PBPosition::set_profit(double value) {
  
  profit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.profit)
}

// optional int32 longFrozenVolume = 21;
void PBPosition::clear_longfrozenvolume() {
  longfrozenvolume_ = 0;
}
 ::google::protobuf::int32 PBPosition::longfrozenvolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.longFrozenVolume)
  return longfrozenvolume_;
}
 void PBPosition::set_longfrozenvolume(::google::protobuf::int32 value) {
  
  longfrozenvolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.longFrozenVolume)
}

// optional int32 shortFrozenVolume = 22;
void PBPosition::clear_shortfrozenvolume() {
  shortfrozenvolume_ = 0;
}
 ::google::protobuf::int32 PBPosition::shortfrozenvolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.shortFrozenVolume)
  return shortfrozenvolume_;
}
 void PBPosition::set_shortfrozenvolume(::google::protobuf::int32 value) {
  
  shortfrozenvolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.shortFrozenVolume)
}

// optional double longFrozenAmount = 23;
void PBPosition::clear_longfrozenamount() {
  longfrozenamount_ = 0;
}
 double PBPosition::longfrozenamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.longFrozenAmount)
  return longfrozenamount_;
}
 void PBPosition::set_longfrozenamount(double value) {
  
  longfrozenamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.longFrozenAmount)
}

// optional double shortFrozenAmount = 24;
void PBPosition::clear_shortfrozenamount() {
  shortfrozenamount_ = 0;
}
 double PBPosition::shortfrozenamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.shortFrozenAmount)
  return shortfrozenamount_;
}
 void PBPosition::set_shortfrozenamount(double value) {
  
  shortfrozenamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.shortFrozenAmount)
}

// optional double lastPrice = 25;
void PBPosition::clear_lastprice() {
  lastprice_ = 0;
}
 double PBPosition::lastprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.lastPrice)
  return lastprice_;
}
 void PBPosition::set_lastprice(double value) {
  
  lastprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.lastPrice)
}

// optional double avgPrice = 26;
void PBPosition::clear_avgprice() {
  avgprice_ = 0;
}
 double PBPosition::avgprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPosition.avgPrice)
  return avgprice_;
}
 void PBPosition::set_avgprice(double value) {
  
  avgprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPosition.avgPrice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAccountInfo::kHeaderFieldNumber;
const int PBAccountInfo::kBrokerIDFieldNumber;
const int PBAccountInfo::kAccountIDFieldNumber;
const int PBAccountInfo::kPreMortgageFieldNumber;
const int PBAccountInfo::kPreCreditFieldNumber;
const int PBAccountInfo::kPreDepositFieldNumber;
const int PBAccountInfo::kPreBalanceFieldNumber;
const int PBAccountInfo::kPreMarginFieldNumber;
const int PBAccountInfo::kInterestBaseFieldNumber;
const int PBAccountInfo::kInterestFieldNumber;
const int PBAccountInfo::kDepositFieldNumber;
const int PBAccountInfo::kWithdrawFieldNumber;
const int PBAccountInfo::kFrozenMarginFieldNumber;
const int PBAccountInfo::kFrozenCashFieldNumber;
const int PBAccountInfo::kFrozenCommissionFieldNumber;
const int PBAccountInfo::kCurrMarginFieldNumber;
const int PBAccountInfo::kCashInFieldNumber;
const int PBAccountInfo::kCommissionFieldNumber;
const int PBAccountInfo::kCloseProfitFieldNumber;
const int PBAccountInfo::kPositionProfitFieldNumber;
const int PBAccountInfo::kBalanceFieldNumber;
const int PBAccountInfo::kAvailableFieldNumber;
const int PBAccountInfo::kWithdrawQuotaFieldNumber;
const int PBAccountInfo::kReserveFieldNumber;
const int PBAccountInfo::kTradingDayFieldNumber;
const int PBAccountInfo::kSettlementIDFieldNumber;
const int PBAccountInfo::kCreditFieldNumber;
const int PBAccountInfo::kMortgageFieldNumber;
const int PBAccountInfo::kExchangeMarginFieldNumber;
const int PBAccountInfo::kDeliveryMarginFieldNumber;
const int PBAccountInfo::kExchangeDeliveryMarginFieldNumber;
const int PBAccountInfo::kReserveBalanceFieldNumber;
const int PBAccountInfo::kUserBalanceFieldNumber;
const int PBAccountInfo::kRiskRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAccountInfo::PBAccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBAccountInfo)
}

void PBAccountInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBAccountInfo::PBAccountInfo(const PBAccountInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBAccountInfo)
}

void PBAccountInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  premortgage_ = 0;
  precredit_ = 0;
  predeposit_ = 0;
  prebalance_ = 0;
  premargin_ = 0;
  interestbase_ = 0;
  interest_ = 0;
  deposit_ = 0;
  withdraw_ = 0;
  frozenmargin_ = 0;
  frozencash_ = 0;
  frozencommission_ = 0;
  currmargin_ = 0;
  cashin_ = 0;
  commission_ = 0;
  closeprofit_ = 0;
  positionprofit_ = 0;
  balance_ = 0;
  available_ = 0;
  withdrawquota_ = 0;
  reserve_ = 0;
  tradingday_ = 0;
  settlementid_ = 0;
  credit_ = 0;
  mortgage_ = 0;
  exchangemargin_ = 0;
  deliverymargin_ = 0;
  exchangedeliverymargin_ = 0;
  reservebalance_ = 0;
  userbalance_ = 0;
  riskratio_ = 0;
}

PBAccountInfo::~PBAccountInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBAccountInfo)
  SharedDtor();
}

void PBAccountInfo::SharedDtor() {
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBAccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAccountInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBAccountInfo_descriptor_;
}

const PBAccountInfo& PBAccountInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBAccountInfo* PBAccountInfo::default_instance_ = NULL;

PBAccountInfo* PBAccountInfo::New(::google::protobuf::Arena* arena) const {
  PBAccountInfo* n = new PBAccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBAccountInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBAccountInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBAccountInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(premortgage_, premargin_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(interestbase_, currmargin_);
  ZR_(cashin_, reserve_);
  ZR_(tradingday_, reservebalance_);
  ZR_(userbalance_, riskratio_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBAccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 2;
      case 2: {
        if (tag == 18) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBAccountInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_accountID;
        break;
      }

      // optional string accountID = 3;
      case 3: {
        if (tag == 26) {
         parse_accountID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountid().data(), this->accountid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBAccountInfo.accountID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_preMortgage;
        break;
      }

      // optional double preMortgage = 4;
      case 4: {
        if (tag == 33) {
         parse_preMortgage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premortgage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_preCredit;
        break;
      }

      // optional double preCredit = 5;
      case 5: {
        if (tag == 41) {
         parse_preCredit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &precredit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_preDeposit;
        break;
      }

      // optional double preDeposit = 6;
      case 6: {
        if (tag == 49) {
         parse_preDeposit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predeposit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_preBalance;
        break;
      }

      // optional double preBalance = 7;
      case 7: {
        if (tag == 57) {
         parse_preBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &prebalance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_preMargin;
        break;
      }

      // optional double preMargin = 8;
      case 8: {
        if (tag == 65) {
         parse_preMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_interestBase;
        break;
      }

      // optional double interestBase = 9;
      case 9: {
        if (tag == 73) {
         parse_interestBase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &interestbase_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_interest;
        break;
      }

      // optional double interest = 10;
      case 10: {
        if (tag == 81) {
         parse_interest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &interest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_deposit;
        break;
      }

      // optional double deposit = 11;
      case 11: {
        if (tag == 89) {
         parse_deposit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deposit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_withdraw;
        break;
      }

      // optional double withdraw = 12;
      case 12: {
        if (tag == 97) {
         parse_withdraw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &withdraw_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_frozenMargin;
        break;
      }

      // optional double frozenMargin = 13;
      case 13: {
        if (tag == 105) {
         parse_frozenMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozenmargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_frozenCash;
        break;
      }

      // optional double frozenCash = 14;
      case 14: {
        if (tag == 113) {
         parse_frozenCash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozencash_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_frozenCommission;
        break;
      }

      // optional double frozenCommission = 15;
      case 15: {
        if (tag == 121) {
         parse_frozenCommission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozencommission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_currMargin;
        break;
      }

      // optional double currMargin = 16;
      case 16: {
        if (tag == 129) {
         parse_currMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &currmargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_cashIn;
        break;
      }

      // optional double cashIn = 17;
      case 17: {
        if (tag == 137) {
         parse_cashIn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cashin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_commission;
        break;
      }

      // optional double commission = 18;
      case 18: {
        if (tag == 145) {
         parse_commission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_closeProfit;
        break;
      }

      // optional double closeProfit = 19;
      case 19: {
        if (tag == 153) {
         parse_closeProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_positionProfit;
        break;
      }

      // optional double positionProfit = 20;
      case 20: {
        if (tag == 161) {
         parse_positionProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &positionprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_balance;
        break;
      }

      // optional double balance = 21;
      case 21: {
        if (tag == 169) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &balance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_available;
        break;
      }

      // optional double available = 22;
      case 22: {
        if (tag == 177) {
         parse_available:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &available_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_withdrawQuota;
        break;
      }

      // optional double withdrawQuota = 23;
      case 23: {
        if (tag == 185) {
         parse_withdrawQuota:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &withdrawquota_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_reserve;
        break;
      }

      // optional double reserve = 24;
      case 24: {
        if (tag == 193) {
         parse_reserve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reserve_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_tradingDay;
        break;
      }

      // optional int32 tradingDay = 25;
      case 25: {
        if (tag == 200) {
         parse_tradingDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingday_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_settlementID;
        break;
      }

      // optional int32 settlementID = 26;
      case 26: {
        if (tag == 208) {
         parse_settlementID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &settlementid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(217)) goto parse_credit;
        break;
      }

      // optional double credit = 27;
      case 27: {
        if (tag == 217) {
         parse_credit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &credit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(225)) goto parse_mortgage;
        break;
      }

      // optional double mortgage = 28;
      case 28: {
        if (tag == 225) {
         parse_mortgage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mortgage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(233)) goto parse_exchangeMargin;
        break;
      }

      // optional double exchangeMargin = 29;
      case 29: {
        if (tag == 233) {
         parse_exchangeMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exchangemargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(241)) goto parse_deliveryMargin;
        break;
      }

      // optional double deliveryMargin = 30;
      case 30: {
        if (tag == 241) {
         parse_deliveryMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deliverymargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(249)) goto parse_exchangeDeliveryMargin;
        break;
      }

      // optional double exchangeDeliveryMargin = 31;
      case 31: {
        if (tag == 249) {
         parse_exchangeDeliveryMargin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exchangedeliverymargin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(257)) goto parse_reserveBalance;
        break;
      }

      // optional double reserveBalance = 32;
      case 32: {
        if (tag == 257) {
         parse_reserveBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reservebalance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(265)) goto parse_userBalance;
        break;
      }

      // optional double userBalance = 33;
      case 33: {
        if (tag == 265) {
         parse_userBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &userbalance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(273)) goto parse_riskRatio;
        break;
      }

      // optional double riskRatio = 34;
      case 34: {
        if (tag == 273) {
         parse_riskRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &riskratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBAccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBAccountInfo)
  return false;
#undef DO_
}

void PBAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBAccountInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string brokerID = 2;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->brokerid(), output);
  }

  // optional string accountID = 3;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.accountID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->accountid(), output);
  }

  // optional double preMortgage = 4;
  if (this->premortgage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->premortgage(), output);
  }

  // optional double preCredit = 5;
  if (this->precredit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->precredit(), output);
  }

  // optional double preDeposit = 6;
  if (this->predeposit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->predeposit(), output);
  }

  // optional double preBalance = 7;
  if (this->prebalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->prebalance(), output);
  }

  // optional double preMargin = 8;
  if (this->premargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->premargin(), output);
  }

  // optional double interestBase = 9;
  if (this->interestbase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->interestbase(), output);
  }

  // optional double interest = 10;
  if (this->interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->interest(), output);
  }

  // optional double deposit = 11;
  if (this->deposit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->deposit(), output);
  }

  // optional double withdraw = 12;
  if (this->withdraw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->withdraw(), output);
  }

  // optional double frozenMargin = 13;
  if (this->frozenmargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->frozenmargin(), output);
  }

  // optional double frozenCash = 14;
  if (this->frozencash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->frozencash(), output);
  }

  // optional double frozenCommission = 15;
  if (this->frozencommission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->frozencommission(), output);
  }

  // optional double currMargin = 16;
  if (this->currmargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->currmargin(), output);
  }

  // optional double cashIn = 17;
  if (this->cashin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->cashin(), output);
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->commission(), output);
  }

  // optional double closeProfit = 19;
  if (this->closeprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->closeprofit(), output);
  }

  // optional double positionProfit = 20;
  if (this->positionprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->positionprofit(), output);
  }

  // optional double balance = 21;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->balance(), output);
  }

  // optional double available = 22;
  if (this->available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->available(), output);
  }

  // optional double withdrawQuota = 23;
  if (this->withdrawquota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->withdrawquota(), output);
  }

  // optional double reserve = 24;
  if (this->reserve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->reserve(), output);
  }

  // optional int32 tradingDay = 25;
  if (this->tradingday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->tradingday(), output);
  }

  // optional int32 settlementID = 26;
  if (this->settlementid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->settlementid(), output);
  }

  // optional double credit = 27;
  if (this->credit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->credit(), output);
  }

  // optional double mortgage = 28;
  if (this->mortgage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->mortgage(), output);
  }

  // optional double exchangeMargin = 29;
  if (this->exchangemargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->exchangemargin(), output);
  }

  // optional double deliveryMargin = 30;
  if (this->deliverymargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->deliverymargin(), output);
  }

  // optional double exchangeDeliveryMargin = 31;
  if (this->exchangedeliverymargin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->exchangedeliverymargin(), output);
  }

  // optional double reserveBalance = 32;
  if (this->reservebalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->reservebalance(), output);
  }

  // optional double userBalance = 33;
  if (this->userbalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->userbalance(), output);
  }

  // optional double riskRatio = 34;
  if (this->riskratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(34, this->riskratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBAccountInfo)
}

::google::protobuf::uint8* PBAccountInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBAccountInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string brokerID = 2;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->brokerid(), target);
  }

  // optional string accountID = 3;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBAccountInfo.accountID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->accountid(), target);
  }

  // optional double preMortgage = 4;
  if (this->premortgage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->premortgage(), target);
  }

  // optional double preCredit = 5;
  if (this->precredit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->precredit(), target);
  }

  // optional double preDeposit = 6;
  if (this->predeposit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->predeposit(), target);
  }

  // optional double preBalance = 7;
  if (this->prebalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->prebalance(), target);
  }

  // optional double preMargin = 8;
  if (this->premargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->premargin(), target);
  }

  // optional double interestBase = 9;
  if (this->interestbase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->interestbase(), target);
  }

  // optional double interest = 10;
  if (this->interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->interest(), target);
  }

  // optional double deposit = 11;
  if (this->deposit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->deposit(), target);
  }

  // optional double withdraw = 12;
  if (this->withdraw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->withdraw(), target);
  }

  // optional double frozenMargin = 13;
  if (this->frozenmargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->frozenmargin(), target);
  }

  // optional double frozenCash = 14;
  if (this->frozencash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->frozencash(), target);
  }

  // optional double frozenCommission = 15;
  if (this->frozencommission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->frozencommission(), target);
  }

  // optional double currMargin = 16;
  if (this->currmargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->currmargin(), target);
  }

  // optional double cashIn = 17;
  if (this->cashin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->cashin(), target);
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->commission(), target);
  }

  // optional double closeProfit = 19;
  if (this->closeprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->closeprofit(), target);
  }

  // optional double positionProfit = 20;
  if (this->positionprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->positionprofit(), target);
  }

  // optional double balance = 21;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->balance(), target);
  }

  // optional double available = 22;
  if (this->available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->available(), target);
  }

  // optional double withdrawQuota = 23;
  if (this->withdrawquota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->withdrawquota(), target);
  }

  // optional double reserve = 24;
  if (this->reserve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->reserve(), target);
  }

  // optional int32 tradingDay = 25;
  if (this->tradingday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->tradingday(), target);
  }

  // optional int32 settlementID = 26;
  if (this->settlementid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->settlementid(), target);
  }

  // optional double credit = 27;
  if (this->credit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->credit(), target);
  }

  // optional double mortgage = 28;
  if (this->mortgage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(28, this->mortgage(), target);
  }

  // optional double exchangeMargin = 29;
  if (this->exchangemargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->exchangemargin(), target);
  }

  // optional double deliveryMargin = 30;
  if (this->deliverymargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(30, this->deliverymargin(), target);
  }

  // optional double exchangeDeliveryMargin = 31;
  if (this->exchangedeliverymargin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->exchangedeliverymargin(), target);
  }

  // optional double reserveBalance = 32;
  if (this->reservebalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->reservebalance(), target);
  }

  // optional double userBalance = 33;
  if (this->userbalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(33, this->userbalance(), target);
  }

  // optional double riskRatio = 34;
  if (this->riskratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(34, this->riskratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBAccountInfo)
  return target;
}

int PBAccountInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBAccountInfo)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string brokerID = 2;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string accountID = 3;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountid());
  }

  // optional double preMortgage = 4;
  if (this->premortgage() != 0) {
    total_size += 1 + 8;
  }

  // optional double preCredit = 5;
  if (this->precredit() != 0) {
    total_size += 1 + 8;
  }

  // optional double preDeposit = 6;
  if (this->predeposit() != 0) {
    total_size += 1 + 8;
  }

  // optional double preBalance = 7;
  if (this->prebalance() != 0) {
    total_size += 1 + 8;
  }

  // optional double preMargin = 8;
  if (this->premargin() != 0) {
    total_size += 1 + 8;
  }

  // optional double interestBase = 9;
  if (this->interestbase() != 0) {
    total_size += 1 + 8;
  }

  // optional double interest = 10;
  if (this->interest() != 0) {
    total_size += 1 + 8;
  }

  // optional double deposit = 11;
  if (this->deposit() != 0) {
    total_size += 1 + 8;
  }

  // optional double withdraw = 12;
  if (this->withdraw() != 0) {
    total_size += 1 + 8;
  }

  // optional double frozenMargin = 13;
  if (this->frozenmargin() != 0) {
    total_size += 1 + 8;
  }

  // optional double frozenCash = 14;
  if (this->frozencash() != 0) {
    total_size += 1 + 8;
  }

  // optional double frozenCommission = 15;
  if (this->frozencommission() != 0) {
    total_size += 1 + 8;
  }

  // optional double currMargin = 16;
  if (this->currmargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double cashIn = 17;
  if (this->cashin() != 0) {
    total_size += 2 + 8;
  }

  // optional double commission = 18;
  if (this->commission() != 0) {
    total_size += 2 + 8;
  }

  // optional double closeProfit = 19;
  if (this->closeprofit() != 0) {
    total_size += 2 + 8;
  }

  // optional double positionProfit = 20;
  if (this->positionprofit() != 0) {
    total_size += 2 + 8;
  }

  // optional double balance = 21;
  if (this->balance() != 0) {
    total_size += 2 + 8;
  }

  // optional double available = 22;
  if (this->available() != 0) {
    total_size += 2 + 8;
  }

  // optional double withdrawQuota = 23;
  if (this->withdrawquota() != 0) {
    total_size += 2 + 8;
  }

  // optional double reserve = 24;
  if (this->reserve() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 tradingDay = 25;
  if (this->tradingday() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingday());
  }

  // optional int32 settlementID = 26;
  if (this->settlementid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->settlementid());
  }

  // optional double credit = 27;
  if (this->credit() != 0) {
    total_size += 2 + 8;
  }

  // optional double mortgage = 28;
  if (this->mortgage() != 0) {
    total_size += 2 + 8;
  }

  // optional double exchangeMargin = 29;
  if (this->exchangemargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double deliveryMargin = 30;
  if (this->deliverymargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double exchangeDeliveryMargin = 31;
  if (this->exchangedeliverymargin() != 0) {
    total_size += 2 + 8;
  }

  // optional double reserveBalance = 32;
  if (this->reservebalance() != 0) {
    total_size += 2 + 8;
  }

  // optional double userBalance = 33;
  if (this->userbalance() != 0) {
    total_size += 2 + 8;
  }

  // optional double riskRatio = 34;
  if (this->riskratio() != 0) {
    total_size += 2 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBAccountInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBAccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBAccountInfo)
    MergeFrom(*source);
  }
}

void PBAccountInfo::MergeFrom(const PBAccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.premortgage() != 0) {
    set_premortgage(from.premortgage());
  }
  if (from.precredit() != 0) {
    set_precredit(from.precredit());
  }
  if (from.predeposit() != 0) {
    set_predeposit(from.predeposit());
  }
  if (from.prebalance() != 0) {
    set_prebalance(from.prebalance());
  }
  if (from.premargin() != 0) {
    set_premargin(from.premargin());
  }
  if (from.interestbase() != 0) {
    set_interestbase(from.interestbase());
  }
  if (from.interest() != 0) {
    set_interest(from.interest());
  }
  if (from.deposit() != 0) {
    set_deposit(from.deposit());
  }
  if (from.withdraw() != 0) {
    set_withdraw(from.withdraw());
  }
  if (from.frozenmargin() != 0) {
    set_frozenmargin(from.frozenmargin());
  }
  if (from.frozencash() != 0) {
    set_frozencash(from.frozencash());
  }
  if (from.frozencommission() != 0) {
    set_frozencommission(from.frozencommission());
  }
  if (from.currmargin() != 0) {
    set_currmargin(from.currmargin());
  }
  if (from.cashin() != 0) {
    set_cashin(from.cashin());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.closeprofit() != 0) {
    set_closeprofit(from.closeprofit());
  }
  if (from.positionprofit() != 0) {
    set_positionprofit(from.positionprofit());
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
  if (from.available() != 0) {
    set_available(from.available());
  }
  if (from.withdrawquota() != 0) {
    set_withdrawquota(from.withdrawquota());
  }
  if (from.reserve() != 0) {
    set_reserve(from.reserve());
  }
  if (from.tradingday() != 0) {
    set_tradingday(from.tradingday());
  }
  if (from.settlementid() != 0) {
    set_settlementid(from.settlementid());
  }
  if (from.credit() != 0) {
    set_credit(from.credit());
  }
  if (from.mortgage() != 0) {
    set_mortgage(from.mortgage());
  }
  if (from.exchangemargin() != 0) {
    set_exchangemargin(from.exchangemargin());
  }
  if (from.deliverymargin() != 0) {
    set_deliverymargin(from.deliverymargin());
  }
  if (from.exchangedeliverymargin() != 0) {
    set_exchangedeliverymargin(from.exchangedeliverymargin());
  }
  if (from.reservebalance() != 0) {
    set_reservebalance(from.reservebalance());
  }
  if (from.userbalance() != 0) {
    set_userbalance(from.userbalance());
  }
  if (from.riskratio() != 0) {
    set_riskratio(from.riskratio());
  }
}

void PBAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAccountInfo::CopyFrom(const PBAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAccountInfo::IsInitialized() const {

  return true;
}

void PBAccountInfo::Swap(PBAccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAccountInfo::InternalSwap(PBAccountInfo* other) {
  std::swap(header_, other->header_);
  brokerid_.Swap(&other->brokerid_);
  accountid_.Swap(&other->accountid_);
  std::swap(premortgage_, other->premortgage_);
  std::swap(precredit_, other->precredit_);
  std::swap(predeposit_, other->predeposit_);
  std::swap(prebalance_, other->prebalance_);
  std::swap(premargin_, other->premargin_);
  std::swap(interestbase_, other->interestbase_);
  std::swap(interest_, other->interest_);
  std::swap(deposit_, other->deposit_);
  std::swap(withdraw_, other->withdraw_);
  std::swap(frozenmargin_, other->frozenmargin_);
  std::swap(frozencash_, other->frozencash_);
  std::swap(frozencommission_, other->frozencommission_);
  std::swap(currmargin_, other->currmargin_);
  std::swap(cashin_, other->cashin_);
  std::swap(commission_, other->commission_);
  std::swap(closeprofit_, other->closeprofit_);
  std::swap(positionprofit_, other->positionprofit_);
  std::swap(balance_, other->balance_);
  std::swap(available_, other->available_);
  std::swap(withdrawquota_, other->withdrawquota_);
  std::swap(reserve_, other->reserve_);
  std::swap(tradingday_, other->tradingday_);
  std::swap(settlementid_, other->settlementid_);
  std::swap(credit_, other->credit_);
  std::swap(mortgage_, other->mortgage_);
  std::swap(exchangemargin_, other->exchangemargin_);
  std::swap(deliverymargin_, other->deliverymargin_);
  std::swap(exchangedeliverymargin_, other->exchangedeliverymargin_);
  std::swap(reservebalance_, other->reservebalance_);
  std::swap(userbalance_, other->userbalance_);
  std::swap(riskratio_, other->riskratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAccountInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBAccountInfo_descriptor_;
  metadata.reflection = PBAccountInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAccountInfo

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBAccountInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBAccountInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBAccountInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBAccountInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBAccountInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBAccountInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.header)
}

// optional string brokerID = 2;
void PBAccountInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBAccountInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}
 void PBAccountInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}
 void PBAccountInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}
 ::std::string* PBAccountInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBAccountInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.brokerID)
}

// optional string accountID = 3;
void PBAccountInfo::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBAccountInfo::accountid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.accountID)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.accountID)
}
 void PBAccountInfo::set_accountid(const char* value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBAccountInfo.accountID)
}
 void PBAccountInfo::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBAccountInfo.accountID)
}
 ::std::string* PBAccountInfo::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBAccountInfo.accountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBAccountInfo::release_accountid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBAccountInfo.accountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBAccountInfo::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBAccountInfo.accountID)
}

// optional double preMortgage = 4;
void PBAccountInfo::clear_premortgage() {
  premortgage_ = 0;
}
 double PBAccountInfo::premortgage() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preMortgage)
  return premortgage_;
}
 void PBAccountInfo::set_premortgage(double value) {
  
  premortgage_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preMortgage)
}

// optional double preCredit = 5;
void PBAccountInfo::clear_precredit() {
  precredit_ = 0;
}
 double PBAccountInfo::precredit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preCredit)
  return precredit_;
}
 void PBAccountInfo::set_precredit(double value) {
  
  precredit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preCredit)
}

// optional double preDeposit = 6;
void PBAccountInfo::clear_predeposit() {
  predeposit_ = 0;
}
 double PBAccountInfo::predeposit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preDeposit)
  return predeposit_;
}
 void PBAccountInfo::set_predeposit(double value) {
  
  predeposit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preDeposit)
}

// optional double preBalance = 7;
void PBAccountInfo::clear_prebalance() {
  prebalance_ = 0;
}
 double PBAccountInfo::prebalance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preBalance)
  return prebalance_;
}
 void PBAccountInfo::set_prebalance(double value) {
  
  prebalance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preBalance)
}

// optional double preMargin = 8;
void PBAccountInfo::clear_premargin() {
  premargin_ = 0;
}
 double PBAccountInfo::premargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.preMargin)
  return premargin_;
}
 void PBAccountInfo::set_premargin(double value) {
  
  premargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.preMargin)
}

// optional double interestBase = 9;
void PBAccountInfo::clear_interestbase() {
  interestbase_ = 0;
}
 double PBAccountInfo::interestbase() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.interestBase)
  return interestbase_;
}
 void PBAccountInfo::set_interestbase(double value) {
  
  interestbase_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.interestBase)
}

// optional double interest = 10;
void PBAccountInfo::clear_interest() {
  interest_ = 0;
}
 double PBAccountInfo::interest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.interest)
  return interest_;
}
 void PBAccountInfo::set_interest(double value) {
  
  interest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.interest)
}

// optional double deposit = 11;
void PBAccountInfo::clear_deposit() {
  deposit_ = 0;
}
 double PBAccountInfo::deposit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.deposit)
  return deposit_;
}
 void PBAccountInfo::set_deposit(double value) {
  
  deposit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.deposit)
}

// optional double withdraw = 12;
void PBAccountInfo::clear_withdraw() {
  withdraw_ = 0;
}
 double PBAccountInfo::withdraw() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.withdraw)
  return withdraw_;
}
 void PBAccountInfo::set_withdraw(double value) {
  
  withdraw_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.withdraw)
}

// optional double frozenMargin = 13;
void PBAccountInfo::clear_frozenmargin() {
  frozenmargin_ = 0;
}
 double PBAccountInfo::frozenmargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.frozenMargin)
  return frozenmargin_;
}
 void PBAccountInfo::set_frozenmargin(double value) {
  
  frozenmargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.frozenMargin)
}

// optional double frozenCash = 14;
void PBAccountInfo::clear_frozencash() {
  frozencash_ = 0;
}
 double PBAccountInfo::frozencash() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.frozenCash)
  return frozencash_;
}
 void PBAccountInfo::set_frozencash(double value) {
  
  frozencash_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.frozenCash)
}

// optional double frozenCommission = 15;
void PBAccountInfo::clear_frozencommission() {
  frozencommission_ = 0;
}
 double PBAccountInfo::frozencommission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.frozenCommission)
  return frozencommission_;
}
 void PBAccountInfo::set_frozencommission(double value) {
  
  frozencommission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.frozenCommission)
}

// optional double currMargin = 16;
void PBAccountInfo::clear_currmargin() {
  currmargin_ = 0;
}
 double PBAccountInfo::currmargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.currMargin)
  return currmargin_;
}
 void PBAccountInfo::set_currmargin(double value) {
  
  currmargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.currMargin)
}

// optional double cashIn = 17;
void PBAccountInfo::clear_cashin() {
  cashin_ = 0;
}
 double PBAccountInfo::cashin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.cashIn)
  return cashin_;
}
 void PBAccountInfo::set_cashin(double value) {
  
  cashin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.cashIn)
}

// optional double commission = 18;
void PBAccountInfo::clear_commission() {
  commission_ = 0;
}
 double PBAccountInfo::commission() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.commission)
  return commission_;
}
 void PBAccountInfo::set_commission(double value) {
  
  commission_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.commission)
}

// optional double closeProfit = 19;
void PBAccountInfo::clear_closeprofit() {
  closeprofit_ = 0;
}
 double PBAccountInfo::closeprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.closeProfit)
  return closeprofit_;
}
 void PBAccountInfo::set_closeprofit(double value) {
  
  closeprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.closeProfit)
}

// optional double positionProfit = 20;
void PBAccountInfo::clear_positionprofit() {
  positionprofit_ = 0;
}
 double PBAccountInfo::positionprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.positionProfit)
  return positionprofit_;
}
 void PBAccountInfo::set_positionprofit(double value) {
  
  positionprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.positionProfit)
}

// optional double balance = 21;
void PBAccountInfo::clear_balance() {
  balance_ = 0;
}
 double PBAccountInfo::balance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.balance)
  return balance_;
}
 void PBAccountInfo::set_balance(double value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.balance)
}

// optional double available = 22;
void PBAccountInfo::clear_available() {
  available_ = 0;
}
 double PBAccountInfo::available() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.available)
  return available_;
}
 void PBAccountInfo::set_available(double value) {
  
  available_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.available)
}

// optional double withdrawQuota = 23;
void PBAccountInfo::clear_withdrawquota() {
  withdrawquota_ = 0;
}
 double PBAccountInfo::withdrawquota() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.withdrawQuota)
  return withdrawquota_;
}
 void PBAccountInfo::set_withdrawquota(double value) {
  
  withdrawquota_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.withdrawQuota)
}

// optional double reserve = 24;
void PBAccountInfo::clear_reserve() {
  reserve_ = 0;
}
 double PBAccountInfo::reserve() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.reserve)
  return reserve_;
}
 void PBAccountInfo::set_reserve(double value) {
  
  reserve_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.reserve)
}

// optional int32 tradingDay = 25;
void PBAccountInfo::clear_tradingday() {
  tradingday_ = 0;
}
 ::google::protobuf::int32 PBAccountInfo::tradingday() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
  return tradingday_;
}
 void PBAccountInfo::set_tradingday(::google::protobuf::int32 value) {
  
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.tradingDay)
}

// optional int32 settlementID = 26;
void PBAccountInfo::clear_settlementid() {
  settlementid_ = 0;
}
 ::google::protobuf::int32 PBAccountInfo::settlementid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.settlementID)
  return settlementid_;
}
 void PBAccountInfo::set_settlementid(::google::protobuf::int32 value) {
  
  settlementid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.settlementID)
}

// optional double credit = 27;
void PBAccountInfo::clear_credit() {
  credit_ = 0;
}
 double PBAccountInfo::credit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.credit)
  return credit_;
}
 void PBAccountInfo::set_credit(double value) {
  
  credit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.credit)
}

// optional double mortgage = 28;
void PBAccountInfo::clear_mortgage() {
  mortgage_ = 0;
}
 double PBAccountInfo::mortgage() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.mortgage)
  return mortgage_;
}
 void PBAccountInfo::set_mortgage(double value) {
  
  mortgage_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.mortgage)
}

// optional double exchangeMargin = 29;
void PBAccountInfo::clear_exchangemargin() {
  exchangemargin_ = 0;
}
 double PBAccountInfo::exchangemargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.exchangeMargin)
  return exchangemargin_;
}
 void PBAccountInfo::set_exchangemargin(double value) {
  
  exchangemargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.exchangeMargin)
}

// optional double deliveryMargin = 30;
void PBAccountInfo::clear_deliverymargin() {
  deliverymargin_ = 0;
}
 double PBAccountInfo::deliverymargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.deliveryMargin)
  return deliverymargin_;
}
 void PBAccountInfo::set_deliverymargin(double value) {
  
  deliverymargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.deliveryMargin)
}

// optional double exchangeDeliveryMargin = 31;
void PBAccountInfo::clear_exchangedeliverymargin() {
  exchangedeliverymargin_ = 0;
}
 double PBAccountInfo::exchangedeliverymargin() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.exchangeDeliveryMargin)
  return exchangedeliverymargin_;
}
 void PBAccountInfo::set_exchangedeliverymargin(double value) {
  
  exchangedeliverymargin_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.exchangeDeliveryMargin)
}

// optional double reserveBalance = 32;
void PBAccountInfo::clear_reservebalance() {
  reservebalance_ = 0;
}
 double PBAccountInfo::reservebalance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.reserveBalance)
  return reservebalance_;
}
 void PBAccountInfo::set_reservebalance(double value) {
  
  reservebalance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.reserveBalance)
}

// optional double userBalance = 33;
void PBAccountInfo::clear_userbalance() {
  userbalance_ = 0;
}
 double PBAccountInfo::userbalance() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.userBalance)
  return userbalance_;
}
 void PBAccountInfo::set_userbalance(double value) {
  
  userbalance_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.userBalance)
}

// optional double riskRatio = 34;
void PBAccountInfo::clear_riskratio() {
  riskratio_ = 0;
}
 double PBAccountInfo::riskratio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBAccountInfo.riskRatio)
  return riskratio_;
}
 void PBAccountInfo::set_riskratio(double value) {
  
  riskratio_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBAccountInfo.riskRatio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMarketInfo::kHeaderFieldNumber;
const int PBMarketInfo::kExchangeFieldNumber;
const int PBMarketInfo::kNameFieldNumber;
const int PBMarketInfo::kPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMarketInfo::PBMarketInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBMarketInfo)
}

void PBMarketInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBMarketInfo::PBMarketInfo(const PBMarketInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBMarketInfo)
}

void PBMarketInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBMarketInfo::~PBMarketInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBMarketInfo)
  SharedDtor();
}

void PBMarketInfo::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBMarketInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMarketInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMarketInfo_descriptor_;
}

const PBMarketInfo& PBMarketInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBMarketInfo* PBMarketInfo::default_instance_ = NULL;

PBMarketInfo* PBMarketInfo::New(::google::protobuf::Arena* arena) const {
  PBMarketInfo* n = new PBMarketInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMarketInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBMarketInfo)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PBMarketInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBMarketInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBMarketInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional bytes name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_property;
        break;
      }

      // optional bytes property = 4;
      case 4: {
        if (tag == 34) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBMarketInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBMarketInfo)
  return false;
#undef DO_
}

void PBMarketInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBMarketInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // optional bytes property = 4;
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->property(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBMarketInfo)
}

::google::protobuf::uint8* PBMarketInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBMarketInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBMarketInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // optional bytes property = 4;
  if (this->property().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->property(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBMarketInfo)
  return target;
}

int PBMarketInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBMarketInfo)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional bytes property = 4;
  if (this->property().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMarketInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMarketInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMarketInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBMarketInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBMarketInfo)
    MergeFrom(*source);
  }
}

void PBMarketInfo::MergeFrom(const PBMarketInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.property().size() > 0) {

    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
}

void PBMarketInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMarketInfo::CopyFrom(const PBMarketInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBMarketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMarketInfo::IsInitialized() const {

  return true;
}

void PBMarketInfo::Swap(PBMarketInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMarketInfo::InternalSwap(PBMarketInfo* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  name_.Swap(&other->name_);
  property_.Swap(&other->property_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMarketInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMarketInfo_descriptor_;
  metadata.reflection = PBMarketInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMarketInfo

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBMarketInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBMarketInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBMarketInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBMarketInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBMarketInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBMarketInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.header)
}

// optional string exchange = 2;
void PBMarketInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketInfo.exchange)
}
 void PBMarketInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketInfo.exchange)
}
 void PBMarketInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketInfo.exchange)
}
 ::std::string* PBMarketInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.exchange)
}

// optional bytes name = 3;
void PBMarketInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketInfo::name() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketInfo.name)
}
 void PBMarketInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketInfo.name)
}
 void PBMarketInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketInfo.name)
}
 ::std::string* PBMarketInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketInfo::release_name() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.name)
}

// optional bytes property = 4;
void PBMarketInfo::clear_property() {
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBMarketInfo::property() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBMarketInfo.property)
  return property_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_property(const ::std::string& value) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBMarketInfo.property)
}
 void PBMarketInfo::set_property(const char* value) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBMarketInfo.property)
}
 void PBMarketInfo::set_property(const void* value, size_t size) {
  
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBMarketInfo.property)
}
 ::std::string* PBMarketInfo::mutable_property() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBMarketInfo.property)
  return property_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBMarketInfo::release_property() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBMarketInfo.property)
  
  return property_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBMarketInfo::set_allocated_property(::std::string* property) {
  if (property != NULL) {
    
  } else {
    
  }
  property_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBMarketInfo.property)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractInfo::kExchangeFieldNumber;
const int PBContractInfo::kContractFieldNumber;
const int PBContractInfo::kNameFieldNumber;
const int PBContractInfo::kProductIDFieldNumber;
const int PBContractInfo::kProductTypeFieldNumber;
const int PBContractInfo::kDeliveryYearFieldNumber;
const int PBContractInfo::kDeliveryMonthFieldNumber;
const int PBContractInfo::kMaxMarketOrderVolumeFieldNumber;
const int PBContractInfo::kMinMarketOrderVolumeFieldNumber;
const int PBContractInfo::kMaxLimitOrderVolumeFieldNumber;
const int PBContractInfo::kMinLimitOrderVolumeFieldNumber;
const int PBContractInfo::kVolumeMultipleFieldNumber;
const int PBContractInfo::kPriceTickFieldNumber;
const int PBContractInfo::kCreateDateFieldNumber;
const int PBContractInfo::kOpenDateFieldNumber;
const int PBContractInfo::kExpireDateFieldNumber;
const int PBContractInfo::kStartDelivDateFieldNumber;
const int PBContractInfo::kEndDelivDateFieldNumber;
const int PBContractInfo::kLifePhaseFieldNumber;
const int PBContractInfo::kIsTradingFieldNumber;
const int PBContractInfo::kPositionTypeFieldNumber;
const int PBContractInfo::kPositionDateTypeFieldNumber;
const int PBContractInfo::kLongMarginRatioFieldNumber;
const int PBContractInfo::kShortMarginRatioFieldNumber;
const int PBContractInfo::kUnderlyingExchangeFieldNumber;
const int PBContractInfo::kUnderlyingContractFieldNumber;
const int PBContractInfo::kContractTypeFieldNumber;
const int PBContractInfo::kStrikePriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractInfo::PBContractInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractInfo)
}

void PBContractInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBContractInfo::PBContractInfo(const PBContractInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractInfo)
}

void PBContractInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producttype_ = 0;
  deliveryyear_ = 0;
  deliverymonth_ = 0;
  maxmarketordervolume_ = 0;
  minmarketordervolume_ = 0;
  maxlimitordervolume_ = 0;
  minlimitordervolume_ = 0;
  volumemultiple_ = 0;
  pricetick_ = 0;
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startdelivdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddelivdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifephase_ = 0;
  istrading_ = false;
  positiontype_ = 0;
  positiondatetype_ = 0;
  longmarginratio_ = 0;
  shortmarginratio_ = 0;
  underlyingexchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyingcontract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contracttype_ = 0;
  strikeprice_ = 0;
}

PBContractInfo::~PBContractInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractInfo)
  SharedDtor();
}

void PBContractInfo::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startdelivdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddelivdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyingexchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyingcontract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBContractInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractInfo_descriptor_;
}

const PBContractInfo& PBContractInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractInfo* PBContractInfo::default_instance_ = NULL;

PBContractInfo* PBContractInfo::New(::google::protobuf::Arena* arena) const {
  PBContractInfo* n = new PBContractInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBContractInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBContractInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(producttype_, maxmarketordervolume_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(minmarketordervolume_, pricetick_);
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opendate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(lifephase_, shortmarginratio_);
  startdelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(strikeprice_, contracttype_);
  underlyingexchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlyingcontract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBContractInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional bytes name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_productID;
        break;
      }

      // optional string productID = 4;
      case 4: {
        if (tag == 34) {
         parse_productID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.productID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_productType;
        break;
      }

      // optional int32 productType = 5;
      case 5: {
        if (tag == 40) {
         parse_productType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deliveryYear;
        break;
      }

      // optional int32 deliveryYear = 6;
      case 6: {
        if (tag == 48) {
         parse_deliveryYear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deliveryyear_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_deliveryMonth;
        break;
      }

      // optional int32 deliveryMonth = 7;
      case 7: {
        if (tag == 56) {
         parse_deliveryMonth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deliverymonth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_maxMarketOrderVolume;
        break;
      }

      // optional int32 maxMarketOrderVolume = 8;
      case 8: {
        if (tag == 64) {
         parse_maxMarketOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxmarketordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_minMarketOrderVolume;
        break;
      }

      // optional int32 minMarketOrderVolume = 9;
      case 9: {
        if (tag == 72) {
         parse_minMarketOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minmarketordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_maxLimitOrderVolume;
        break;
      }

      // optional int32 maxLimitOrderVolume = 10;
      case 10: {
        if (tag == 80) {
         parse_maxLimitOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlimitordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_minLimitOrderVolume;
        break;
      }

      // optional int32 minLimitOrderVolume = 11;
      case 11: {
        if (tag == 88) {
         parse_minLimitOrderVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minlimitordervolume_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_volumeMultiple;
        break;
      }

      // optional int32 volumeMultiple = 12;
      case 12: {
        if (tag == 96) {
         parse_volumeMultiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumemultiple_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_priceTick;
        break;
      }

      // optional double priceTick = 13;
      case 13: {
        if (tag == 105) {
         parse_priceTick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricetick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_createDate;
        break;
      }

      // optional string createDate = 14;
      case 14: {
        if (tag == 114) {
         parse_createDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createdate().data(), this->createdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.createDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_openDate;
        break;
      }

      // optional string openDate = 15;
      case 15: {
        if (tag == 122) {
         parse_openDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opendate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opendate().data(), this->opendate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.openDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_expireDate;
        break;
      }

      // optional string expireDate = 16;
      case 16: {
        if (tag == 130) {
         parse_expireDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiredate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiredate().data(), this->expiredate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.expireDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_startDelivDate;
        break;
      }

      // optional string startDelivDate = 17;
      case 17: {
        if (tag == 138) {
         parse_startDelivDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_startdelivdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->startdelivdate().data(), this->startdelivdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.startDelivDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_endDelivDate;
        break;
      }

      // optional string endDelivDate = 18;
      case 18: {
        if (tag == 146) {
         parse_endDelivDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enddelivdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enddelivdate().data(), this->enddelivdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.endDelivDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_lifePhase;
        break;
      }

      // optional int32 lifePhase = 19;
      case 19: {
        if (tag == 152) {
         parse_lifePhase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lifephase_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_isTrading;
        break;
      }

      // optional bool isTrading = 20;
      case 20: {
        if (tag == 160) {
         parse_isTrading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istrading_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_positionType;
        break;
      }

      // optional int32 positionType = 21;
      case 21: {
        if (tag == 168) {
         parse_positionType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiontype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_positionDateType;
        break;
      }

      // optional int32 positionDateType = 22;
      case 22: {
        if (tag == 176) {
         parse_positionDateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiondatetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_longMarginRatio;
        break;
      }

      // optional double longMarginRatio = 23;
      case 23: {
        if (tag == 185) {
         parse_longMarginRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longmarginratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_shortMarginRatio;
        break;
      }

      // optional double shortMarginRatio = 24;
      case 24: {
        if (tag == 193) {
         parse_shortMarginRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shortmarginratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_underlyingExchange;
        break;
      }

      // optional string underlyingExchange = 25;
      case 25: {
        if (tag == 202) {
         parse_underlyingExchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlyingexchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlyingexchange().data(), this->underlyingexchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.underlyingExchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_underlyingContract;
        break;
      }

      // optional string underlyingContract = 26;
      case 26: {
        if (tag == 210) {
         parse_underlyingContract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlyingcontract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlyingcontract().data(), this->underlyingcontract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBContractInfo.underlyingContract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_contractType;
        break;
      }

      // optional int32 contractType = 27;
      case 27: {
        if (tag == 216) {
         parse_contractType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contracttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(225)) goto parse_strikePrice;
        break;
      }

      // optional double strikePrice = 28;
      case 28: {
        if (tag == 225) {
         parse_strikePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strikeprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractInfo)
  return false;
#undef DO_
}

void PBContractInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractInfo)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // optional string productID = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.productID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productid(), output);
  }

  // optional int32 productType = 5;
  if (this->producttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->producttype(), output);
  }

  // optional int32 deliveryYear = 6;
  if (this->deliveryyear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->deliveryyear(), output);
  }

  // optional int32 deliveryMonth = 7;
  if (this->deliverymonth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->deliverymonth(), output);
  }

  // optional int32 maxMarketOrderVolume = 8;
  if (this->maxmarketordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->maxmarketordervolume(), output);
  }

  // optional int32 minMarketOrderVolume = 9;
  if (this->minmarketordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->minmarketordervolume(), output);
  }

  // optional int32 maxLimitOrderVolume = 10;
  if (this->maxlimitordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->maxlimitordervolume(), output);
  }

  // optional int32 minLimitOrderVolume = 11;
  if (this->minlimitordervolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->minlimitordervolume(), output);
  }

  // optional int32 volumeMultiple = 12;
  if (this->volumemultiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->volumemultiple(), output);
  }

  // optional double priceTick = 13;
  if (this->pricetick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->pricetick(), output);
  }

  // optional string createDate = 14;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.createDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->createdate(), output);
  }

  // optional string openDate = 15;
  if (this->opendate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opendate().data(), this->opendate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.openDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->opendate(), output);
  }

  // optional string expireDate = 16;
  if (this->expiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiredate().data(), this->expiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.expireDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->expiredate(), output);
  }

  // optional string startDelivDate = 17;
  if (this->startdelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->startdelivdate().data(), this->startdelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.startDelivDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->startdelivdate(), output);
  }

  // optional string endDelivDate = 18;
  if (this->enddelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enddelivdate().data(), this->enddelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.endDelivDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->enddelivdate(), output);
  }

  // optional int32 lifePhase = 19;
  if (this->lifephase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->lifephase(), output);
  }

  // optional bool isTrading = 20;
  if (this->istrading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->istrading(), output);
  }

  // optional int32 positionType = 21;
  if (this->positiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->positiontype(), output);
  }

  // optional int32 positionDateType = 22;
  if (this->positiondatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->positiondatetype(), output);
  }

  // optional double longMarginRatio = 23;
  if (this->longmarginratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->longmarginratio(), output);
  }

  // optional double shortMarginRatio = 24;
  if (this->shortmarginratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->shortmarginratio(), output);
  }

  // optional string underlyingExchange = 25;
  if (this->underlyingexchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyingexchange().data(), this->underlyingexchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.underlyingExchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->underlyingexchange(), output);
  }

  // optional string underlyingContract = 26;
  if (this->underlyingcontract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyingcontract().data(), this->underlyingcontract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.underlyingContract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->underlyingcontract(), output);
  }

  // optional int32 contractType = 27;
  if (this->contracttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->contracttype(), output);
  }

  // optional double strikePrice = 28;
  if (this->strikeprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->strikeprice(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractInfo)
}

::google::protobuf::uint8* PBContractInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractInfo)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // optional string productID = 4;
  if (this->productid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.productID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->productid(), target);
  }

  // optional int32 productType = 5;
  if (this->producttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->producttype(), target);
  }

  // optional int32 deliveryYear = 6;
  if (this->deliveryyear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->deliveryyear(), target);
  }

  // optional int32 deliveryMonth = 7;
  if (this->deliverymonth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->deliverymonth(), target);
  }

  // optional int32 maxMarketOrderVolume = 8;
  if (this->maxmarketordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->maxmarketordervolume(), target);
  }

  // optional int32 minMarketOrderVolume = 9;
  if (this->minmarketordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->minmarketordervolume(), target);
  }

  // optional int32 maxLimitOrderVolume = 10;
  if (this->maxlimitordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->maxlimitordervolume(), target);
  }

  // optional int32 minLimitOrderVolume = 11;
  if (this->minlimitordervolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->minlimitordervolume(), target);
  }

  // optional int32 volumeMultiple = 12;
  if (this->volumemultiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->volumemultiple(), target);
  }

  // optional double priceTick = 13;
  if (this->pricetick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->pricetick(), target);
  }

  // optional string createDate = 14;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.createDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->createdate(), target);
  }

  // optional string openDate = 15;
  if (this->opendate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opendate().data(), this->opendate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.openDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->opendate(), target);
  }

  // optional string expireDate = 16;
  if (this->expiredate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiredate().data(), this->expiredate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.expireDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->expiredate(), target);
  }

  // optional string startDelivDate = 17;
  if (this->startdelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->startdelivdate().data(), this->startdelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.startDelivDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->startdelivdate(), target);
  }

  // optional string endDelivDate = 18;
  if (this->enddelivdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enddelivdate().data(), this->enddelivdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.endDelivDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->enddelivdate(), target);
  }

  // optional int32 lifePhase = 19;
  if (this->lifephase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->lifephase(), target);
  }

  // optional bool isTrading = 20;
  if (this->istrading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->istrading(), target);
  }

  // optional int32 positionType = 21;
  if (this->positiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->positiontype(), target);
  }

  // optional int32 positionDateType = 22;
  if (this->positiondatetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->positiondatetype(), target);
  }

  // optional double longMarginRatio = 23;
  if (this->longmarginratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->longmarginratio(), target);
  }

  // optional double shortMarginRatio = 24;
  if (this->shortmarginratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->shortmarginratio(), target);
  }

  // optional string underlyingExchange = 25;
  if (this->underlyingexchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyingexchange().data(), this->underlyingexchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.underlyingExchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->underlyingexchange(), target);
  }

  // optional string underlyingContract = 26;
  if (this->underlyingcontract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlyingcontract().data(), this->underlyingcontract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBContractInfo.underlyingContract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->underlyingcontract(), target);
  }

  // optional int32 contractType = 27;
  if (this->contracttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->contracttype(), target);
  }

  // optional double strikePrice = 28;
  if (this->strikeprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(28, this->strikeprice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractInfo)
  return target;
}

int PBContractInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractInfo)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional string productID = 4;
  if (this->productid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productid());
  }

  // optional int32 productType = 5;
  if (this->producttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->producttype());
  }

  // optional int32 deliveryYear = 6;
  if (this->deliveryyear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deliveryyear());
  }

  // optional int32 deliveryMonth = 7;
  if (this->deliverymonth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deliverymonth());
  }

  // optional int32 maxMarketOrderVolume = 8;
  if (this->maxmarketordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxmarketordervolume());
  }

  // optional int32 minMarketOrderVolume = 9;
  if (this->minmarketordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minmarketordervolume());
  }

  // optional int32 maxLimitOrderVolume = 10;
  if (this->maxlimitordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlimitordervolume());
  }

  // optional int32 minLimitOrderVolume = 11;
  if (this->minlimitordervolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minlimitordervolume());
  }

  // optional int32 volumeMultiple = 12;
  if (this->volumemultiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumemultiple());
  }

  // optional double priceTick = 13;
  if (this->pricetick() != 0) {
    total_size += 1 + 8;
  }

  // optional string createDate = 14;
  if (this->createdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createdate());
  }

  // optional string openDate = 15;
  if (this->opendate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opendate());
  }

  // optional string expireDate = 16;
  if (this->expiredate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiredate());
  }

  // optional string startDelivDate = 17;
  if (this->startdelivdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->startdelivdate());
  }

  // optional string endDelivDate = 18;
  if (this->enddelivdate().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->enddelivdate());
  }

  // optional int32 lifePhase = 19;
  if (this->lifephase() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lifephase());
  }

  // optional bool isTrading = 20;
  if (this->istrading() != 0) {
    total_size += 2 + 1;
  }

  // optional int32 positionType = 21;
  if (this->positiontype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->positiontype());
  }

  // optional int32 positionDateType = 22;
  if (this->positiondatetype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->positiondatetype());
  }

  // optional double longMarginRatio = 23;
  if (this->longmarginratio() != 0) {
    total_size += 2 + 8;
  }

  // optional double shortMarginRatio = 24;
  if (this->shortmarginratio() != 0) {
    total_size += 2 + 8;
  }

  // optional string underlyingExchange = 25;
  if (this->underlyingexchange().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlyingexchange());
  }

  // optional string underlyingContract = 26;
  if (this->underlyingcontract().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlyingcontract());
  }

  // optional int32 contractType = 27;
  if (this->contracttype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contracttype());
  }

  // optional double strikePrice = 28;
  if (this->strikeprice() != 0) {
    total_size += 2 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractInfo)
    MergeFrom(*source);
  }
}

void PBContractInfo::MergeFrom(const PBContractInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.productid().size() > 0) {

    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  if (from.producttype() != 0) {
    set_producttype(from.producttype());
  }
  if (from.deliveryyear() != 0) {
    set_deliveryyear(from.deliveryyear());
  }
  if (from.deliverymonth() != 0) {
    set_deliverymonth(from.deliverymonth());
  }
  if (from.maxmarketordervolume() != 0) {
    set_maxmarketordervolume(from.maxmarketordervolume());
  }
  if (from.minmarketordervolume() != 0) {
    set_minmarketordervolume(from.minmarketordervolume());
  }
  if (from.maxlimitordervolume() != 0) {
    set_maxlimitordervolume(from.maxlimitordervolume());
  }
  if (from.minlimitordervolume() != 0) {
    set_minlimitordervolume(from.minlimitordervolume());
  }
  if (from.volumemultiple() != 0) {
    set_volumemultiple(from.volumemultiple());
  }
  if (from.pricetick() != 0) {
    set_pricetick(from.pricetick());
  }
  if (from.createdate().size() > 0) {

    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
  if (from.opendate().size() > 0) {

    opendate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opendate_);
  }
  if (from.expiredate().size() > 0) {

    expiredate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiredate_);
  }
  if (from.startdelivdate().size() > 0) {

    startdelivdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.startdelivdate_);
  }
  if (from.enddelivdate().size() > 0) {

    enddelivdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enddelivdate_);
  }
  if (from.lifephase() != 0) {
    set_lifephase(from.lifephase());
  }
  if (from.istrading() != 0) {
    set_istrading(from.istrading());
  }
  if (from.positiontype() != 0) {
    set_positiontype(from.positiontype());
  }
  if (from.positiondatetype() != 0) {
    set_positiondatetype(from.positiondatetype());
  }
  if (from.longmarginratio() != 0) {
    set_longmarginratio(from.longmarginratio());
  }
  if (from.shortmarginratio() != 0) {
    set_shortmarginratio(from.shortmarginratio());
  }
  if (from.underlyingexchange().size() > 0) {

    underlyingexchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlyingexchange_);
  }
  if (from.underlyingcontract().size() > 0) {

    underlyingcontract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlyingcontract_);
  }
  if (from.contracttype() != 0) {
    set_contracttype(from.contracttype());
  }
  if (from.strikeprice() != 0) {
    set_strikeprice(from.strikeprice());
  }
}

void PBContractInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractInfo::CopyFrom(const PBContractInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractInfo::IsInitialized() const {

  return true;
}

void PBContractInfo::Swap(PBContractInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractInfo::InternalSwap(PBContractInfo* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  name_.Swap(&other->name_);
  productid_.Swap(&other->productid_);
  std::swap(producttype_, other->producttype_);
  std::swap(deliveryyear_, other->deliveryyear_);
  std::swap(deliverymonth_, other->deliverymonth_);
  std::swap(maxmarketordervolume_, other->maxmarketordervolume_);
  std::swap(minmarketordervolume_, other->minmarketordervolume_);
  std::swap(maxlimitordervolume_, other->maxlimitordervolume_);
  std::swap(minlimitordervolume_, other->minlimitordervolume_);
  std::swap(volumemultiple_, other->volumemultiple_);
  std::swap(pricetick_, other->pricetick_);
  createdate_.Swap(&other->createdate_);
  opendate_.Swap(&other->opendate_);
  expiredate_.Swap(&other->expiredate_);
  startdelivdate_.Swap(&other->startdelivdate_);
  enddelivdate_.Swap(&other->enddelivdate_);
  std::swap(lifephase_, other->lifephase_);
  std::swap(istrading_, other->istrading_);
  std::swap(positiontype_, other->positiontype_);
  std::swap(positiondatetype_, other->positiondatetype_);
  std::swap(longmarginratio_, other->longmarginratio_);
  std::swap(shortmarginratio_, other->shortmarginratio_);
  underlyingexchange_.Swap(&other->underlyingexchange_);
  underlyingcontract_.Swap(&other->underlyingcontract_);
  std::swap(contracttype_, other->contracttype_);
  std::swap(strikeprice_, other->strikeprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractInfo_descriptor_;
  metadata.reflection = PBContractInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractInfo

// optional string exchange = 1;
void PBContractInfo::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.exchange)
}
 void PBContractInfo::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.exchange)
}
 void PBContractInfo::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.exchange)
}
 ::std::string* PBContractInfo::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.exchange)
}

// optional string contract = 2;
void PBContractInfo::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.contract)
}
 void PBContractInfo::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.contract)
}
 void PBContractInfo::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.contract)
}
 ::std::string* PBContractInfo::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.contract)
}

// optional bytes name = 3;
void PBContractInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::name() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.name)
}
 void PBContractInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.name)
}
 void PBContractInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.name)
}
 ::std::string* PBContractInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_name() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.name)
}

// optional string productID = 4;
void PBContractInfo::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::productid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.productID)
  return productid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_productid(const ::std::string& value) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.productID)
}
 void PBContractInfo::set_productid(const char* value) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.productID)
}
 void PBContractInfo::set_productid(const char* value, size_t size) {
  
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.productID)
}
 ::std::string* PBContractInfo::mutable_productid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.productID)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_productid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.productID)
  
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    
  } else {
    
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.productID)
}

// optional int32 productType = 5;
void PBContractInfo::clear_producttype() {
  producttype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::producttype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.productType)
  return producttype_;
}
 void PBContractInfo::set_producttype(::google::protobuf::int32 value) {
  
  producttype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.productType)
}

// optional int32 deliveryYear = 6;
void PBContractInfo::clear_deliveryyear() {
  deliveryyear_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::deliveryyear() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.deliveryYear)
  return deliveryyear_;
}
 void PBContractInfo::set_deliveryyear(::google::protobuf::int32 value) {
  
  deliveryyear_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.deliveryYear)
}

// optional int32 deliveryMonth = 7;
void PBContractInfo::clear_deliverymonth() {
  deliverymonth_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::deliverymonth() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.deliveryMonth)
  return deliverymonth_;
}
 void PBContractInfo::set_deliverymonth(::google::protobuf::int32 value) {
  
  deliverymonth_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.deliveryMonth)
}

// optional int32 maxMarketOrderVolume = 8;
void PBContractInfo::clear_maxmarketordervolume() {
  maxmarketordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::maxmarketordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.maxMarketOrderVolume)
  return maxmarketordervolume_;
}
 void PBContractInfo::set_maxmarketordervolume(::google::protobuf::int32 value) {
  
  maxmarketordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.maxMarketOrderVolume)
}

// optional int32 minMarketOrderVolume = 9;
void PBContractInfo::clear_minmarketordervolume() {
  minmarketordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::minmarketordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.minMarketOrderVolume)
  return minmarketordervolume_;
}
 void PBContractInfo::set_minmarketordervolume(::google::protobuf::int32 value) {
  
  minmarketordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.minMarketOrderVolume)
}

// optional int32 maxLimitOrderVolume = 10;
void PBContractInfo::clear_maxlimitordervolume() {
  maxlimitordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::maxlimitordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.maxLimitOrderVolume)
  return maxlimitordervolume_;
}
 void PBContractInfo::set_maxlimitordervolume(::google::protobuf::int32 value) {
  
  maxlimitordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.maxLimitOrderVolume)
}

// optional int32 minLimitOrderVolume = 11;
void PBContractInfo::clear_minlimitordervolume() {
  minlimitordervolume_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::minlimitordervolume() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.minLimitOrderVolume)
  return minlimitordervolume_;
}
 void PBContractInfo::set_minlimitordervolume(::google::protobuf::int32 value) {
  
  minlimitordervolume_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.minLimitOrderVolume)
}

// optional int32 volumeMultiple = 12;
void PBContractInfo::clear_volumemultiple() {
  volumemultiple_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::volumemultiple() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.volumeMultiple)
  return volumemultiple_;
}
 void PBContractInfo::set_volumemultiple(::google::protobuf::int32 value) {
  
  volumemultiple_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.volumeMultiple)
}

// optional double priceTick = 13;
void PBContractInfo::clear_pricetick() {
  pricetick_ = 0;
}
 double PBContractInfo::pricetick() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.priceTick)
  return pricetick_;
}
 void PBContractInfo::set_pricetick(double value) {
  
  pricetick_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.priceTick)
}

// optional string createDate = 14;
void PBContractInfo::clear_createdate() {
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::createdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.createDate)
  return createdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_createdate(const ::std::string& value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.createDate)
}
 void PBContractInfo::set_createdate(const char* value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.createDate)
}
 void PBContractInfo::set_createdate(const char* value, size_t size) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.createDate)
}
 ::std::string* PBContractInfo::mutable_createdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.createDate)
  return createdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_createdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.createDate)
  
  return createdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_createdate(::std::string* createdate) {
  if (createdate != NULL) {
    
  } else {
    
  }
  createdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.createDate)
}

// optional string openDate = 15;
void PBContractInfo::clear_opendate() {
  opendate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::opendate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.openDate)
  return opendate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_opendate(const ::std::string& value) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.openDate)
}
 void PBContractInfo::set_opendate(const char* value) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.openDate)
}
 void PBContractInfo::set_opendate(const char* value, size_t size) {
  
  opendate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.openDate)
}
 ::std::string* PBContractInfo::mutable_opendate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.openDate)
  return opendate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_opendate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.openDate)
  
  return opendate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_opendate(::std::string* opendate) {
  if (opendate != NULL) {
    
  } else {
    
  }
  opendate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opendate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.openDate)
}

// optional string expireDate = 16;
void PBContractInfo::clear_expiredate() {
  expiredate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::expiredate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.expireDate)
  return expiredate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_expiredate(const ::std::string& value) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.expireDate)
}
 void PBContractInfo::set_expiredate(const char* value) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.expireDate)
}
 void PBContractInfo::set_expiredate(const char* value, size_t size) {
  
  expiredate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.expireDate)
}
 ::std::string* PBContractInfo::mutable_expiredate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.expireDate)
  return expiredate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_expiredate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.expireDate)
  
  return expiredate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_expiredate(::std::string* expiredate) {
  if (expiredate != NULL) {
    
  } else {
    
  }
  expiredate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiredate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.expireDate)
}

// optional string startDelivDate = 17;
void PBContractInfo::clear_startdelivdate() {
  startdelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::startdelivdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
  return startdelivdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_startdelivdate(const ::std::string& value) {
  
  startdelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}
 void PBContractInfo::set_startdelivdate(const char* value) {
  
  startdelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}
 void PBContractInfo::set_startdelivdate(const char* value, size_t size) {
  
  startdelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}
 ::std::string* PBContractInfo::mutable_startdelivdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
  return startdelivdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_startdelivdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
  
  return startdelivdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_startdelivdate(::std::string* startdelivdate) {
  if (startdelivdate != NULL) {
    
  } else {
    
  }
  startdelivdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), startdelivdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.startDelivDate)
}

// optional string endDelivDate = 18;
void PBContractInfo::clear_enddelivdate() {
  enddelivdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::enddelivdate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
  return enddelivdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_enddelivdate(const ::std::string& value) {
  
  enddelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}
 void PBContractInfo::set_enddelivdate(const char* value) {
  
  enddelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}
 void PBContractInfo::set_enddelivdate(const char* value, size_t size) {
  
  enddelivdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}
 ::std::string* PBContractInfo::mutable_enddelivdate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
  return enddelivdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_enddelivdate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
  
  return enddelivdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_enddelivdate(::std::string* enddelivdate) {
  if (enddelivdate != NULL) {
    
  } else {
    
  }
  enddelivdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enddelivdate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.endDelivDate)
}

// optional int32 lifePhase = 19;
void PBContractInfo::clear_lifephase() {
  lifephase_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::lifephase() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.lifePhase)
  return lifephase_;
}
 void PBContractInfo::set_lifephase(::google::protobuf::int32 value) {
  
  lifephase_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.lifePhase)
}

// optional bool isTrading = 20;
void PBContractInfo::clear_istrading() {
  istrading_ = false;
}
 bool PBContractInfo::istrading() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.isTrading)
  return istrading_;
}
 void PBContractInfo::set_istrading(bool value) {
  
  istrading_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.isTrading)
}

// optional int32 positionType = 21;
void PBContractInfo::clear_positiontype() {
  positiontype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::positiontype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.positionType)
  return positiontype_;
}
 void PBContractInfo::set_positiontype(::google::protobuf::int32 value) {
  
  positiontype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.positionType)
}

// optional int32 positionDateType = 22;
void PBContractInfo::clear_positiondatetype() {
  positiondatetype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::positiondatetype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.positionDateType)
  return positiondatetype_;
}
 void PBContractInfo::set_positiondatetype(::google::protobuf::int32 value) {
  
  positiondatetype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.positionDateType)
}

// optional double longMarginRatio = 23;
void PBContractInfo::clear_longmarginratio() {
  longmarginratio_ = 0;
}
 double PBContractInfo::longmarginratio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.longMarginRatio)
  return longmarginratio_;
}
 void PBContractInfo::set_longmarginratio(double value) {
  
  longmarginratio_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.longMarginRatio)
}

// optional double shortMarginRatio = 24;
void PBContractInfo::clear_shortmarginratio() {
  shortmarginratio_ = 0;
}
 double PBContractInfo::shortmarginratio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.shortMarginRatio)
  return shortmarginratio_;
}
 void PBContractInfo::set_shortmarginratio(double value) {
  
  shortmarginratio_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.shortMarginRatio)
}

// optional string underlyingExchange = 25;
void PBContractInfo::clear_underlyingexchange() {
  underlyingexchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::underlyingexchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
  return underlyingexchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_underlyingexchange(const ::std::string& value) {
  
  underlyingexchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
}
 void PBContractInfo::set_underlyingexchange(const char* value) {
  
  underlyingexchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
}
 void PBContractInfo::set_underlyingexchange(const char* value, size_t size) {
  
  underlyingexchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
}
 ::std::string* PBContractInfo::mutable_underlyingexchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
  return underlyingexchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_underlyingexchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
  
  return underlyingexchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_underlyingexchange(::std::string* underlyingexchange) {
  if (underlyingexchange != NULL) {
    
  } else {
    
  }
  underlyingexchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlyingexchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.underlyingExchange)
}

// optional string underlyingContract = 26;
void PBContractInfo::clear_underlyingcontract() {
  underlyingcontract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBContractInfo::underlyingcontract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
  return underlyingcontract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_underlyingcontract(const ::std::string& value) {
  
  underlyingcontract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
}
 void PBContractInfo::set_underlyingcontract(const char* value) {
  
  underlyingcontract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
}
 void PBContractInfo::set_underlyingcontract(const char* value, size_t size) {
  
  underlyingcontract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
}
 ::std::string* PBContractInfo::mutable_underlyingcontract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
  return underlyingcontract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBContractInfo::release_underlyingcontract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
  
  return underlyingcontract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBContractInfo::set_allocated_underlyingcontract(::std::string* underlyingcontract) {
  if (underlyingcontract != NULL) {
    
  } else {
    
  }
  underlyingcontract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), underlyingcontract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfo.underlyingContract)
}

// optional int32 contractType = 27;
void PBContractInfo::clear_contracttype() {
  contracttype_ = 0;
}
 ::google::protobuf::int32 PBContractInfo::contracttype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.contractType)
  return contracttype_;
}
 void PBContractInfo::set_contracttype(::google::protobuf::int32 value) {
  
  contracttype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.contractType)
}

// optional double strikePrice = 28;
void PBContractInfo::clear_strikeprice() {
  strikeprice_ = 0;
}
 double PBContractInfo::strikeprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfo.strikePrice)
  return strikeprice_;
}
 void PBContractInfo::set_strikeprice(double value) {
  
  strikeprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBContractInfo.strikePrice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBContractInfoList::kHeaderFieldNumber;
const int PBContractInfoList::kContractInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBContractInfoList::PBContractInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBContractInfoList)
}

void PBContractInfoList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBContractInfoList::PBContractInfoList(const PBContractInfoList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBContractInfoList)
}

void PBContractInfoList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBContractInfoList::~PBContractInfoList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBContractInfoList)
  SharedDtor();
}

void PBContractInfoList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBContractInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBContractInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBContractInfoList_descriptor_;
}

const PBContractInfoList& PBContractInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBContractInfoList* PBContractInfoList::default_instance_ = NULL;

PBContractInfoList* PBContractInfoList::New(::google::protobuf::Arena* arena) const {
  PBContractInfoList* n = new PBContractInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBContractInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBContractInfoList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  contractinfo_.Clear();
}

bool PBContractInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBContractInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contractInfo;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_contractInfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_contractInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contractinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_contractInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBContractInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBContractInfoList)
  return false;
#undef DO_
}

void PBContractInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBContractInfoList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 2;
  for (unsigned int i = 0, n = this->contractinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->contractinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBContractInfoList)
}

::google::protobuf::uint8* PBContractInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBContractInfoList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 2;
  for (unsigned int i = 0, n = this->contractinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->contractinfo(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBContractInfoList)
  return target;
}

int PBContractInfoList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBContractInfoList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 2;
  total_size += 1 * this->contractinfo_size();
  for (int i = 0; i < this->contractinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contractinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBContractInfoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBContractInfoList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBContractInfoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBContractInfoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBContractInfoList)
    MergeFrom(*source);
  }
}

void PBContractInfoList::MergeFrom(const PBContractInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  contractinfo_.MergeFrom(from.contractinfo_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBContractInfoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBContractInfoList::CopyFrom(const PBContractInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBContractInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBContractInfoList::IsInitialized() const {

  return true;
}

void PBContractInfoList::Swap(PBContractInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBContractInfoList::InternalSwap(PBContractInfoList* other) {
  std::swap(header_, other->header_);
  contractinfo_.UnsafeArenaSwap(&other->contractinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBContractInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBContractInfoList_descriptor_;
  metadata.reflection = PBContractInfoList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBContractInfoList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBContractInfoList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBContractInfoList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBContractInfoList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfoList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBContractInfoList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfoList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBContractInfoList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBContractInfoList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBContractInfoList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBContractInfoList.header)
}

// repeated .Micro.Future.Message.Business.PBContractInfo contractInfo = 2;
int PBContractInfoList::contractinfo_size() const {
  return contractinfo_.size();
}
void PBContractInfoList::clear_contractinfo() {
  contractinfo_.Clear();
}
const ::Micro::Future::Message::Business::PBContractInfo& PBContractInfoList::contractinfo(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_.Get(index);
}
::Micro::Future::Message::Business::PBContractInfo* PBContractInfoList::mutable_contractinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_.Mutable(index);
}
::Micro::Future::Message::Business::PBContractInfo* PBContractInfoList::add_contractinfo() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractInfo >*
PBContractInfoList::mutable_contractinfo() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return &contractinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBContractInfo >&
PBContractInfoList::contractinfo() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBContractInfoList.contractInfo)
  return contractinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBankOpRequest::kHeaderFieldNumber;
const int PBBankOpRequest::kBankIDFieldNumber;
const int PBBankOpRequest::kBankBranchIDFieldNumber;
const int PBBankOpRequest::kBankPasswordFieldNumber;
const int PBBankOpRequest::kBankAccountFieldNumber;
const int PBBankOpRequest::kBrokerIDFieldNumber;
const int PBBankOpRequest::kBrokerBranchIDFieldNumber;
const int PBBankOpRequest::kAccountIDFieldNumber;
const int PBBankOpRequest::kPasswordFieldNumber;
const int PBBankOpRequest::kCurrencyIDFieldNumber;
const int PBBankOpRequest::kTradeAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBankOpRequest::PBBankOpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBBankOpRequest)
}

void PBBankOpRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBBankOpRequest::PBBankOpRequest(const PBBankOpRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBBankOpRequest)
}

void PBBankOpRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  bankid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeamount_ = 0;
}

PBBankOpRequest::~PBBankOpRequest() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBBankOpRequest)
  SharedDtor();
}

void PBBankOpRequest::SharedDtor() {
  bankid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBBankOpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBBankOpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBankOpRequest_descriptor_;
}

const PBBankOpRequest& PBBankOpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBBankOpRequest* PBBankOpRequest::default_instance_ = NULL;

PBBankOpRequest* PBBankOpRequest::New(::google::protobuf::Arena* arena) const {
  PBBankOpRequest* n = new PBBankOpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBBankOpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBBankOpRequest)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeamount_ = 0;
}

bool PBBankOpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBBankOpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bankID;
        break;
      }

      // optional string bankID = 2;
      case 2: {
        if (tag == 18) {
         parse_bankID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankid().data(), this->bankid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.bankID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bankBranchID;
        break;
      }

      // optional string bankBranchID = 3;
      case 3: {
        if (tag == 26) {
         parse_bankBranchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankbranchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankbranchid().data(), this->bankbranchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.bankBranchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bankPassword;
        break;
      }

      // optional string bankPassword = 4;
      case 4: {
        if (tag == 34) {
         parse_bankPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankpassword().data(), this->bankpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.bankPassword"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bankAccount;
        break;
      }

      // optional string bankAccount = 5;
      case 5: {
        if (tag == 42) {
         parse_bankAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankaccount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankaccount().data(), this->bankaccount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.bankAccount"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 6;
      case 6: {
        if (tag == 50) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_brokerBranchID;
        break;
      }

      // optional string brokerBranchID = 7;
      case 7: {
        if (tag == 58) {
         parse_brokerBranchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerbranchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerbranchid().data(), this->brokerbranchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_accountID;
        break;
      }

      // optional string accountID = 8;
      case 8: {
        if (tag == 66) {
         parse_accountID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountid().data(), this->accountid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.accountID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_password;
        break;
      }

      // optional string password = 9;
      case 9: {
        if (tag == 74) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_currencyID;
        break;
      }

      // optional string currencyID = 10;
      case 10: {
        if (tag == 82) {
         parse_currencyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currencyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currencyid().data(), this->currencyid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpRequest.currencyID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_tradeAmount;
        break;
      }

      // optional double tradeAmount = 11;
      case 11: {
        if (tag == 89) {
         parse_tradeAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tradeamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBBankOpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBBankOpRequest)
  return false;
#undef DO_
}

void PBBankOpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBBankOpRequest)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bankid(), output);
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankbranchid().data(), this->bankbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankBranchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bankbranchid(), output);
  }

  // optional string bankPassword = 4;
  if (this->bankpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankpassword().data(), this->bankpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bankpassword(), output);
  }

  // optional string bankAccount = 5;
  if (this->bankaccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankaccount().data(), this->bankaccount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankAccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bankaccount(), output);
  }

  // optional string brokerID = 6;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->brokerid(), output);
  }

  // optional string brokerBranchID = 7;
  if (this->brokerbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerbranchid().data(), this->brokerbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->brokerbranchid(), output);
  }

  // optional string accountID = 8;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.accountID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->accountid(), output);
  }

  // optional string password = 9;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->password(), output);
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currencyid().data(), this->currencyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.currencyID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->currencyid(), output);
  }

  // optional double tradeAmount = 11;
  if (this->tradeamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->tradeamount(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBBankOpRequest)
}

::google::protobuf::uint8* PBBankOpRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBBankOpRequest)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bankid(), target);
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankbranchid().data(), this->bankbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankBranchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bankbranchid(), target);
  }

  // optional string bankPassword = 4;
  if (this->bankpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankpassword().data(), this->bankpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bankpassword(), target);
  }

  // optional string bankAccount = 5;
  if (this->bankaccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankaccount().data(), this->bankaccount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.bankAccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bankaccount(), target);
  }

  // optional string brokerID = 6;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->brokerid(), target);
  }

  // optional string brokerBranchID = 7;
  if (this->brokerbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerbranchid().data(), this->brokerbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->brokerbranchid(), target);
  }

  // optional string accountID = 8;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.accountID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->accountid(), target);
  }

  // optional string password = 9;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->password(), target);
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currencyid().data(), this->currencyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpRequest.currencyID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->currencyid(), target);
  }

  // optional double tradeAmount = 11;
  if (this->tradeamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->tradeamount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBBankOpRequest)
  return target;
}

int PBBankOpRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBBankOpRequest)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankid());
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankbranchid());
  }

  // optional string bankPassword = 4;
  if (this->bankpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankpassword());
  }

  // optional string bankAccount = 5;
  if (this->bankaccount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankaccount());
  }

  // optional string brokerID = 6;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string brokerBranchID = 7;
  if (this->brokerbranchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerbranchid());
  }

  // optional string accountID = 8;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountid());
  }

  // optional string password = 9;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currencyid());
  }

  // optional double tradeAmount = 11;
  if (this->tradeamount() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBBankOpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBBankOpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBBankOpRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBankOpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBBankOpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBBankOpRequest)
    MergeFrom(*source);
  }
}

void PBBankOpRequest::MergeFrom(const PBBankOpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBBankOpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.bankid().size() > 0) {

    bankid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankid_);
  }
  if (from.bankbranchid().size() > 0) {

    bankbranchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankbranchid_);
  }
  if (from.bankpassword().size() > 0) {

    bankpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankpassword_);
  }
  if (from.bankaccount().size() > 0) {

    bankaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankaccount_);
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.brokerbranchid().size() > 0) {

    brokerbranchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerbranchid_);
  }
  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.currencyid().size() > 0) {

    currencyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currencyid_);
  }
  if (from.tradeamount() != 0) {
    set_tradeamount(from.tradeamount());
  }
}

void PBBankOpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBBankOpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBankOpRequest::CopyFrom(const PBBankOpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBBankOpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBankOpRequest::IsInitialized() const {

  return true;
}

void PBBankOpRequest::Swap(PBBankOpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBankOpRequest::InternalSwap(PBBankOpRequest* other) {
  std::swap(header_, other->header_);
  bankid_.Swap(&other->bankid_);
  bankbranchid_.Swap(&other->bankbranchid_);
  bankpassword_.Swap(&other->bankpassword_);
  bankaccount_.Swap(&other->bankaccount_);
  brokerid_.Swap(&other->brokerid_);
  brokerbranchid_.Swap(&other->brokerbranchid_);
  accountid_.Swap(&other->accountid_);
  password_.Swap(&other->password_);
  currencyid_.Swap(&other->currencyid_);
  std::swap(tradeamount_, other->tradeamount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBBankOpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBBankOpRequest_descriptor_;
  metadata.reflection = PBBankOpRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBBankOpRequest

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBBankOpRequest::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBBankOpRequest::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBBankOpRequest::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBBankOpRequest::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBBankOpRequest::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBBankOpRequest::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.header)
}

// optional string bankID = 2;
void PBBankOpRequest::clear_bankid() {
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::bankid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.bankID)
  return bankid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_bankid(const ::std::string& value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.bankID)
}
 void PBBankOpRequest::set_bankid(const char* value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.bankID)
}
 void PBBankOpRequest::set_bankid(const char* value, size_t size) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.bankID)
}
 ::std::string* PBBankOpRequest::mutable_bankid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.bankID)
  return bankid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_bankid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.bankID)
  
  return bankid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_bankid(::std::string* bankid) {
  if (bankid != NULL) {
    
  } else {
    
  }
  bankid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.bankID)
}

// optional string bankBranchID = 3;
void PBBankOpRequest::clear_bankbranchid() {
  bankbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::bankbranchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
  return bankbranchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_bankbranchid(const ::std::string& value) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
}
 void PBBankOpRequest::set_bankbranchid(const char* value) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
}
 void PBBankOpRequest::set_bankbranchid(const char* value, size_t size) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
}
 ::std::string* PBBankOpRequest::mutable_bankbranchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
  return bankbranchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_bankbranchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
  
  return bankbranchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_bankbranchid(::std::string* bankbranchid) {
  if (bankbranchid != NULL) {
    
  } else {
    
  }
  bankbranchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankbranchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.bankBranchID)
}

// optional string bankPassword = 4;
void PBBankOpRequest::clear_bankpassword() {
  bankpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::bankpassword() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
  return bankpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_bankpassword(const ::std::string& value) {
  
  bankpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
}
 void PBBankOpRequest::set_bankpassword(const char* value) {
  
  bankpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
}
 void PBBankOpRequest::set_bankpassword(const char* value, size_t size) {
  
  bankpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
}
 ::std::string* PBBankOpRequest::mutable_bankpassword() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
  return bankpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_bankpassword() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
  
  return bankpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_bankpassword(::std::string* bankpassword) {
  if (bankpassword != NULL) {
    
  } else {
    
  }
  bankpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankpassword);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.bankPassword)
}

// optional string bankAccount = 5;
void PBBankOpRequest::clear_bankaccount() {
  bankaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::bankaccount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
  return bankaccount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_bankaccount(const ::std::string& value) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
}
 void PBBankOpRequest::set_bankaccount(const char* value) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
}
 void PBBankOpRequest::set_bankaccount(const char* value, size_t size) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
}
 ::std::string* PBBankOpRequest::mutable_bankaccount() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
  return bankaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_bankaccount() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
  
  return bankaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_bankaccount(::std::string* bankaccount) {
  if (bankaccount != NULL) {
    
  } else {
    
  }
  bankaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankaccount);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.bankAccount)
}

// optional string brokerID = 6;
void PBBankOpRequest::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
}
 void PBBankOpRequest::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
}
 void PBBankOpRequest::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
}
 ::std::string* PBBankOpRequest::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.brokerID)
}

// optional string brokerBranchID = 7;
void PBBankOpRequest::clear_brokerbranchid() {
  brokerbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::brokerbranchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
  return brokerbranchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_brokerbranchid(const ::std::string& value) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
}
 void PBBankOpRequest::set_brokerbranchid(const char* value) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
}
 void PBBankOpRequest::set_brokerbranchid(const char* value, size_t size) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
}
 ::std::string* PBBankOpRequest::mutable_brokerbranchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
  return brokerbranchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_brokerbranchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
  
  return brokerbranchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_brokerbranchid(::std::string* brokerbranchid) {
  if (brokerbranchid != NULL) {
    
  } else {
    
  }
  brokerbranchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerbranchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.brokerBranchID)
}

// optional string accountID = 8;
void PBBankOpRequest::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::accountid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.accountID)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.accountID)
}
 void PBBankOpRequest::set_accountid(const char* value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.accountID)
}
 void PBBankOpRequest::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.accountID)
}
 ::std::string* PBBankOpRequest::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.accountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_accountid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.accountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.accountID)
}

// optional string password = 9;
void PBBankOpRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::password() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.password)
}
 void PBBankOpRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.password)
}
 void PBBankOpRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.password)
}
 ::std::string* PBBankOpRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_password() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.password)
}

// optional string currencyID = 10;
void PBBankOpRequest::clear_currencyid() {
  currencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpRequest::currencyid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
  return currencyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_currencyid(const ::std::string& value) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
}
 void PBBankOpRequest::set_currencyid(const char* value) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
}
 void PBBankOpRequest::set_currencyid(const char* value, size_t size) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
}
 ::std::string* PBBankOpRequest::mutable_currencyid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
  return currencyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpRequest::release_currencyid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
  
  return currencyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpRequest::set_allocated_currencyid(::std::string* currencyid) {
  if (currencyid != NULL) {
    
  } else {
    
  }
  currencyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currencyid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpRequest.currencyID)
}

// optional double tradeAmount = 11;
void PBBankOpRequest::clear_tradeamount() {
  tradeamount_ = 0;
}
 double PBBankOpRequest::tradeamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpRequest.tradeAmount)
  return tradeamount_;
}
 void PBBankOpRequest::set_tradeamount(double value) {
  
  tradeamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpRequest.tradeAmount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBankOpResult::kHeaderFieldNumber;
const int PBBankOpResult::kBankIDFieldNumber;
const int PBBankOpResult::kBankBranchIDFieldNumber;
const int PBBankOpResult::kBankPasswordFieldNumber;
const int PBBankOpResult::kBankAccountFieldNumber;
const int PBBankOpResult::kBrokerIDFieldNumber;
const int PBBankOpResult::kBrokerBranchIDFieldNumber;
const int PBBankOpResult::kAccountIDFieldNumber;
const int PBBankOpResult::kPasswordFieldNumber;
const int PBBankOpResult::kCurrencyIDFieldNumber;
const int PBBankOpResult::kTradeAmountFieldNumber;
const int PBBankOpResult::kSerialNumFieldNumber;
const int PBBankOpResult::kTradingDayFieldNumber;
const int PBBankOpResult::kTradeDateFieldNumber;
const int PBBankOpResult::kTradeTimeFieldNumber;
const int PBBankOpResult::kTradeCodeFieldNumber;
const int PBBankOpResult::kBankSerialFieldNumber;
const int PBBankOpResult::kFutureAccTypeFieldNumber;
const int PBBankOpResult::kBankAccTypeFieldNumber;
const int PBBankOpResult::kFutureSerialFieldNumber;
const int PBBankOpResult::kCustFeeFieldNumber;
const int PBBankOpResult::kBrokerFeeFieldNumber;
const int PBBankOpResult::kErrorIDFieldNumber;
const int PBBankOpResult::kErrorMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBankOpResult::PBBankOpResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBBankOpResult)
}

void PBBankOpResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBBankOpResult::PBBankOpResult(const PBBankOpResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBBankOpResult)
}

void PBBankOpResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  bankid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeamount_ = 0;
  serialnum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingday_ = 0;
  tradedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankserial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  futureacctype_ = 0;
  bankacctype_ = 0;
  futureserial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custfee_ = 0;
  brokerfee_ = 0;
  errorid_ = 0;
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBBankOpResult::~PBBankOpResult() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBBankOpResult)
  SharedDtor();
}

void PBBankOpResult::SharedDtor() {
  bankid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialnum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankserial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  futureserial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBBankOpResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBBankOpResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBankOpResult_descriptor_;
}

const PBBankOpResult& PBBankOpResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBBankOpResult* PBBankOpResult::default_instance_ = NULL;

PBBankOpResult* PBBankOpResult::New(::google::protobuf::Arena* arena) const {
  PBBankOpResult* n = new PBBankOpResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBBankOpResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBBankOpResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBBankOpResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBBankOpResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeamount_ = 0;
  serialnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradingday_ = 0;
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(custfee_, brokerfee_);
  bankserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  futureacctype_ = 0;
  futureserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBBankOpResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBBankOpResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bankID;
        break;
      }

      // optional string bankID = 2;
      case 2: {
        if (tag == 18) {
         parse_bankID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankid().data(), this->bankid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.bankID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bankBranchID;
        break;
      }

      // optional string bankBranchID = 3;
      case 3: {
        if (tag == 26) {
         parse_bankBranchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankbranchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankbranchid().data(), this->bankbranchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.bankBranchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bankPassword;
        break;
      }

      // optional string bankPassword = 4;
      case 4: {
        if (tag == 34) {
         parse_bankPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankpassword().data(), this->bankpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.bankPassword"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bankAccount;
        break;
      }

      // optional string bankAccount = 5;
      case 5: {
        if (tag == 42) {
         parse_bankAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankaccount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankaccount().data(), this->bankaccount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.bankAccount"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 6;
      case 6: {
        if (tag == 50) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_brokerBranchID;
        break;
      }

      // optional string brokerBranchID = 7;
      case 7: {
        if (tag == 58) {
         parse_brokerBranchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerbranchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerbranchid().data(), this->brokerbranchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.brokerBranchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_accountID;
        break;
      }

      // optional string accountID = 8;
      case 8: {
        if (tag == 66) {
         parse_accountID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountid().data(), this->accountid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.accountID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_password;
        break;
      }

      // optional string password = 9;
      case 9: {
        if (tag == 74) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_currencyID;
        break;
      }

      // optional string currencyID = 10;
      case 10: {
        if (tag == 82) {
         parse_currencyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currencyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currencyid().data(), this->currencyid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.currencyID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_tradeAmount;
        break;
      }

      // optional double tradeAmount = 11;
      case 11: {
        if (tag == 89) {
         parse_tradeAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tradeamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_serialNum;
        break;
      }

      // optional string serialNum = 12;
      case 12: {
        if (tag == 98) {
         parse_serialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serialnum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serialnum().data(), this->serialnum().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.serialNum"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_tradingDay;
        break;
      }

      // optional int32 tradingDay = 13;
      case 13: {
        if (tag == 104) {
         parse_tradingDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tradingday_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_tradeDate;
        break;
      }

      // optional string tradeDate = 14;
      case 14: {
        if (tag == 114) {
         parse_tradeDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradedate().data(), this->tradedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.tradeDate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_tradeTime;
        break;
      }

      // optional string tradeTime = 15;
      case 15: {
        if (tag == 122) {
         parse_tradeTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradetime().data(), this->tradetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.tradeTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_tradeCode;
        break;
      }

      // optional string tradeCode = 16;
      case 16: {
        if (tag == 130) {
         parse_tradeCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradecode().data(), this->tradecode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.tradeCode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_bankSerial;
        break;
      }

      // optional string bankSerial = 17;
      case 17: {
        if (tag == 138) {
         parse_bankSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankserial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankserial().data(), this->bankserial().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.bankSerial"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_futureAccType;
        break;
      }

      // optional int32 futureAccType = 18;
      case 18: {
        if (tag == 144) {
         parse_futureAccType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &futureacctype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_bankAccType;
        break;
      }

      // optional int32 bankAccType = 19;
      case 19: {
        if (tag == 152) {
         parse_bankAccType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bankacctype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_futureSerial;
        break;
      }

      // optional string futureSerial = 20;
      case 20: {
        if (tag == 162) {
         parse_futureSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_futureserial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->futureserial().data(), this->futureserial().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankOpResult.futureSerial"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_custFee;
        break;
      }

      // optional double custFee = 21;
      case 21: {
        if (tag == 169) {
         parse_custFee:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &custfee_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_brokerFee;
        break;
      }

      // optional double brokerFee = 22;
      case 22: {
        if (tag == 177) {
         parse_brokerFee:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &brokerfee_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_errorID;
        break;
      }

      // optional int32 errorID = 23;
      case 23: {
        if (tag == 184) {
         parse_errorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_errorMsg;
        break;
      }

      // optional bytes errorMsg = 24;
      case 24: {
        if (tag == 194) {
         parse_errorMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_errormsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBBankOpResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBBankOpResult)
  return false;
#undef DO_
}

void PBBankOpResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBBankOpResult)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bankid(), output);
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankbranchid().data(), this->bankbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankBranchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bankbranchid(), output);
  }

  // optional string bankPassword = 4;
  if (this->bankpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankpassword().data(), this->bankpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bankpassword(), output);
  }

  // optional string bankAccount = 5;
  if (this->bankaccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankaccount().data(), this->bankaccount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankAccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bankaccount(), output);
  }

  // optional string brokerID = 6;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->brokerid(), output);
  }

  // optional string brokerBranchID = 7;
  if (this->brokerbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerbranchid().data(), this->brokerbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.brokerBranchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->brokerbranchid(), output);
  }

  // optional string accountID = 8;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.accountID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->accountid(), output);
  }

  // optional string password = 9;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->password(), output);
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currencyid().data(), this->currencyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.currencyID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->currencyid(), output);
  }

  // optional double tradeAmount = 11;
  if (this->tradeamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->tradeamount(), output);
  }

  // optional string serialNum = 12;
  if (this->serialnum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serialnum().data(), this->serialnum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.serialNum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->serialnum(), output);
  }

  // optional int32 tradingDay = 13;
  if (this->tradingday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->tradingday(), output);
  }

  // optional string tradeDate = 14;
  if (this->tradedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.tradeDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->tradedate(), output);
  }

  // optional string tradeTime = 15;
  if (this->tradetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradetime().data(), this->tradetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.tradeTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->tradetime(), output);
  }

  // optional string tradeCode = 16;
  if (this->tradecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradecode().data(), this->tradecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.tradeCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->tradecode(), output);
  }

  // optional string bankSerial = 17;
  if (this->bankserial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankserial().data(), this->bankserial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankSerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->bankserial(), output);
  }

  // optional int32 futureAccType = 18;
  if (this->futureacctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->futureacctype(), output);
  }

  // optional int32 bankAccType = 19;
  if (this->bankacctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->bankacctype(), output);
  }

  // optional string futureSerial = 20;
  if (this->futureserial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->futureserial().data(), this->futureserial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.futureSerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->futureserial(), output);
  }

  // optional double custFee = 21;
  if (this->custfee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->custfee(), output);
  }

  // optional double brokerFee = 22;
  if (this->brokerfee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->brokerfee(), output);
  }

  // optional int32 errorID = 23;
  if (this->errorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->errorid(), output);
  }

  // optional bytes errorMsg = 24;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->errormsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBBankOpResult)
}

::google::protobuf::uint8* PBBankOpResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBBankOpResult)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bankid(), target);
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankbranchid().data(), this->bankbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankBranchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bankbranchid(), target);
  }

  // optional string bankPassword = 4;
  if (this->bankpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankpassword().data(), this->bankpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bankpassword(), target);
  }

  // optional string bankAccount = 5;
  if (this->bankaccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankaccount().data(), this->bankaccount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankAccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bankaccount(), target);
  }

  // optional string brokerID = 6;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->brokerid(), target);
  }

  // optional string brokerBranchID = 7;
  if (this->brokerbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerbranchid().data(), this->brokerbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.brokerBranchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->brokerbranchid(), target);
  }

  // optional string accountID = 8;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.accountID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->accountid(), target);
  }

  // optional string password = 9;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->password(), target);
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currencyid().data(), this->currencyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.currencyID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->currencyid(), target);
  }

  // optional double tradeAmount = 11;
  if (this->tradeamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->tradeamount(), target);
  }

  // optional string serialNum = 12;
  if (this->serialnum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serialnum().data(), this->serialnum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.serialNum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->serialnum(), target);
  }

  // optional int32 tradingDay = 13;
  if (this->tradingday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->tradingday(), target);
  }

  // optional string tradeDate = 14;
  if (this->tradedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradedate().data(), this->tradedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.tradeDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->tradedate(), target);
  }

  // optional string tradeTime = 15;
  if (this->tradetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradetime().data(), this->tradetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.tradeTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->tradetime(), target);
  }

  // optional string tradeCode = 16;
  if (this->tradecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradecode().data(), this->tradecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.tradeCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->tradecode(), target);
  }

  // optional string bankSerial = 17;
  if (this->bankserial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankserial().data(), this->bankserial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.bankSerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->bankserial(), target);
  }

  // optional int32 futureAccType = 18;
  if (this->futureacctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->futureacctype(), target);
  }

  // optional int32 bankAccType = 19;
  if (this->bankacctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->bankacctype(), target);
  }

  // optional string futureSerial = 20;
  if (this->futureserial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->futureserial().data(), this->futureserial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankOpResult.futureSerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->futureserial(), target);
  }

  // optional double custFee = 21;
  if (this->custfee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->custfee(), target);
  }

  // optional double brokerFee = 22;
  if (this->brokerfee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->brokerfee(), target);
  }

  // optional int32 errorID = 23;
  if (this->errorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->errorid(), target);
  }

  // optional bytes errorMsg = 24;
  if (this->errormsg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->errormsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBBankOpResult)
  return target;
}

int PBBankOpResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBBankOpResult)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankid());
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankbranchid());
  }

  // optional string bankPassword = 4;
  if (this->bankpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankpassword());
  }

  // optional string bankAccount = 5;
  if (this->bankaccount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankaccount());
  }

  // optional string brokerID = 6;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string brokerBranchID = 7;
  if (this->brokerbranchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerbranchid());
  }

  // optional string accountID = 8;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountid());
  }

  // optional string password = 9;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currencyid());
  }

  // optional double tradeAmount = 11;
  if (this->tradeamount() != 0) {
    total_size += 1 + 8;
  }

  // optional string serialNum = 12;
  if (this->serialnum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serialnum());
  }

  // optional int32 tradingDay = 13;
  if (this->tradingday() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tradingday());
  }

  // optional string tradeDate = 14;
  if (this->tradedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradedate());
  }

  // optional string tradeTime = 15;
  if (this->tradetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradetime());
  }

  // optional string tradeCode = 16;
  if (this->tradecode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradecode());
  }

  // optional string bankSerial = 17;
  if (this->bankserial().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankserial());
  }

  // optional int32 futureAccType = 18;
  if (this->futureacctype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->futureacctype());
  }

  // optional int32 bankAccType = 19;
  if (this->bankacctype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bankacctype());
  }

  // optional string futureSerial = 20;
  if (this->futureserial().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->futureserial());
  }

  // optional double custFee = 21;
  if (this->custfee() != 0) {
    total_size += 2 + 8;
  }

  // optional double brokerFee = 22;
  if (this->brokerfee() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 errorID = 23;
  if (this->errorid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorid());
  }

  // optional bytes errorMsg = 24;
  if (this->errormsg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->errormsg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBBankOpResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBBankOpResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBBankOpResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBankOpResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBBankOpResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBBankOpResult)
    MergeFrom(*source);
  }
}

void PBBankOpResult::MergeFrom(const PBBankOpResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBBankOpResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.bankid().size() > 0) {

    bankid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankid_);
  }
  if (from.bankbranchid().size() > 0) {

    bankbranchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankbranchid_);
  }
  if (from.bankpassword().size() > 0) {

    bankpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankpassword_);
  }
  if (from.bankaccount().size() > 0) {

    bankaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankaccount_);
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.brokerbranchid().size() > 0) {

    brokerbranchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerbranchid_);
  }
  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.currencyid().size() > 0) {

    currencyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currencyid_);
  }
  if (from.tradeamount() != 0) {
    set_tradeamount(from.tradeamount());
  }
  if (from.serialnum().size() > 0) {

    serialnum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialnum_);
  }
  if (from.tradingday() != 0) {
    set_tradingday(from.tradingday());
  }
  if (from.tradedate().size() > 0) {

    tradedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradedate_);
  }
  if (from.tradetime().size() > 0) {

    tradetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradetime_);
  }
  if (from.tradecode().size() > 0) {

    tradecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradecode_);
  }
  if (from.bankserial().size() > 0) {

    bankserial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankserial_);
  }
  if (from.futureacctype() != 0) {
    set_futureacctype(from.futureacctype());
  }
  if (from.bankacctype() != 0) {
    set_bankacctype(from.bankacctype());
  }
  if (from.futureserial().size() > 0) {

    futureserial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.futureserial_);
  }
  if (from.custfee() != 0) {
    set_custfee(from.custfee());
  }
  if (from.brokerfee() != 0) {
    set_brokerfee(from.brokerfee());
  }
  if (from.errorid() != 0) {
    set_errorid(from.errorid());
  }
  if (from.errormsg().size() > 0) {

    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
}

void PBBankOpResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBBankOpResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBankOpResult::CopyFrom(const PBBankOpResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBBankOpResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBankOpResult::IsInitialized() const {

  return true;
}

void PBBankOpResult::Swap(PBBankOpResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBankOpResult::InternalSwap(PBBankOpResult* other) {
  std::swap(header_, other->header_);
  bankid_.Swap(&other->bankid_);
  bankbranchid_.Swap(&other->bankbranchid_);
  bankpassword_.Swap(&other->bankpassword_);
  bankaccount_.Swap(&other->bankaccount_);
  brokerid_.Swap(&other->brokerid_);
  brokerbranchid_.Swap(&other->brokerbranchid_);
  accountid_.Swap(&other->accountid_);
  password_.Swap(&other->password_);
  currencyid_.Swap(&other->currencyid_);
  std::swap(tradeamount_, other->tradeamount_);
  serialnum_.Swap(&other->serialnum_);
  std::swap(tradingday_, other->tradingday_);
  tradedate_.Swap(&other->tradedate_);
  tradetime_.Swap(&other->tradetime_);
  tradecode_.Swap(&other->tradecode_);
  bankserial_.Swap(&other->bankserial_);
  std::swap(futureacctype_, other->futureacctype_);
  std::swap(bankacctype_, other->bankacctype_);
  futureserial_.Swap(&other->futureserial_);
  std::swap(custfee_, other->custfee_);
  std::swap(brokerfee_, other->brokerfee_);
  std::swap(errorid_, other->errorid_);
  errormsg_.Swap(&other->errormsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBBankOpResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBBankOpResult_descriptor_;
  metadata.reflection = PBBankOpResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBBankOpResult

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBBankOpResult::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBBankOpResult::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBBankOpResult::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBBankOpResult::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBBankOpResult::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBBankOpResult::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.header)
}

// optional string bankID = 2;
void PBBankOpResult::clear_bankid() {
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::bankid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.bankID)
  return bankid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_bankid(const ::std::string& value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.bankID)
}
 void PBBankOpResult::set_bankid(const char* value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.bankID)
}
 void PBBankOpResult::set_bankid(const char* value, size_t size) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.bankID)
}
 ::std::string* PBBankOpResult::mutable_bankid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.bankID)
  return bankid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_bankid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.bankID)
  
  return bankid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_bankid(::std::string* bankid) {
  if (bankid != NULL) {
    
  } else {
    
  }
  bankid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.bankID)
}

// optional string bankBranchID = 3;
void PBBankOpResult::clear_bankbranchid() {
  bankbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::bankbranchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
  return bankbranchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_bankbranchid(const ::std::string& value) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
}
 void PBBankOpResult::set_bankbranchid(const char* value) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
}
 void PBBankOpResult::set_bankbranchid(const char* value, size_t size) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
}
 ::std::string* PBBankOpResult::mutable_bankbranchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
  return bankbranchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_bankbranchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
  
  return bankbranchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_bankbranchid(::std::string* bankbranchid) {
  if (bankbranchid != NULL) {
    
  } else {
    
  }
  bankbranchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankbranchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.bankBranchID)
}

// optional string bankPassword = 4;
void PBBankOpResult::clear_bankpassword() {
  bankpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::bankpassword() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
  return bankpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_bankpassword(const ::std::string& value) {
  
  bankpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
}
 void PBBankOpResult::set_bankpassword(const char* value) {
  
  bankpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
}
 void PBBankOpResult::set_bankpassword(const char* value, size_t size) {
  
  bankpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
}
 ::std::string* PBBankOpResult::mutable_bankpassword() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
  return bankpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_bankpassword() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
  
  return bankpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_bankpassword(::std::string* bankpassword) {
  if (bankpassword != NULL) {
    
  } else {
    
  }
  bankpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankpassword);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.bankPassword)
}

// optional string bankAccount = 5;
void PBBankOpResult::clear_bankaccount() {
  bankaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::bankaccount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
  return bankaccount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_bankaccount(const ::std::string& value) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
}
 void PBBankOpResult::set_bankaccount(const char* value) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
}
 void PBBankOpResult::set_bankaccount(const char* value, size_t size) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
}
 ::std::string* PBBankOpResult::mutable_bankaccount() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
  return bankaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_bankaccount() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
  
  return bankaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_bankaccount(::std::string* bankaccount) {
  if (bankaccount != NULL) {
    
  } else {
    
  }
  bankaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankaccount);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.bankAccount)
}

// optional string brokerID = 6;
void PBBankOpResult::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.brokerID)
}
 void PBBankOpResult::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.brokerID)
}
 void PBBankOpResult::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.brokerID)
}
 ::std::string* PBBankOpResult::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.brokerID)
}

// optional string brokerBranchID = 7;
void PBBankOpResult::clear_brokerbranchid() {
  brokerbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::brokerbranchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
  return brokerbranchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_brokerbranchid(const ::std::string& value) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
}
 void PBBankOpResult::set_brokerbranchid(const char* value) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
}
 void PBBankOpResult::set_brokerbranchid(const char* value, size_t size) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
}
 ::std::string* PBBankOpResult::mutable_brokerbranchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
  return brokerbranchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_brokerbranchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
  
  return brokerbranchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_brokerbranchid(::std::string* brokerbranchid) {
  if (brokerbranchid != NULL) {
    
  } else {
    
  }
  brokerbranchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerbranchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.brokerBranchID)
}

// optional string accountID = 8;
void PBBankOpResult::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::accountid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.accountID)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.accountID)
}
 void PBBankOpResult::set_accountid(const char* value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.accountID)
}
 void PBBankOpResult::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.accountID)
}
 ::std::string* PBBankOpResult::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.accountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_accountid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.accountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.accountID)
}

// optional string password = 9;
void PBBankOpResult::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::password() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.password)
}
 void PBBankOpResult::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.password)
}
 void PBBankOpResult::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.password)
}
 ::std::string* PBBankOpResult::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_password() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.password)
}

// optional string currencyID = 10;
void PBBankOpResult::clear_currencyid() {
  currencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::currencyid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.currencyID)
  return currencyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_currencyid(const ::std::string& value) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.currencyID)
}
 void PBBankOpResult::set_currencyid(const char* value) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.currencyID)
}
 void PBBankOpResult::set_currencyid(const char* value, size_t size) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.currencyID)
}
 ::std::string* PBBankOpResult::mutable_currencyid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.currencyID)
  return currencyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_currencyid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.currencyID)
  
  return currencyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_currencyid(::std::string* currencyid) {
  if (currencyid != NULL) {
    
  } else {
    
  }
  currencyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currencyid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.currencyID)
}

// optional double tradeAmount = 11;
void PBBankOpResult::clear_tradeamount() {
  tradeamount_ = 0;
}
 double PBBankOpResult::tradeamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.tradeAmount)
  return tradeamount_;
}
 void PBBankOpResult::set_tradeamount(double value) {
  
  tradeamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.tradeAmount)
}

// optional string serialNum = 12;
void PBBankOpResult::clear_serialnum() {
  serialnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::serialnum() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.serialNum)
  return serialnum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_serialnum(const ::std::string& value) {
  
  serialnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.serialNum)
}
 void PBBankOpResult::set_serialnum(const char* value) {
  
  serialnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.serialNum)
}
 void PBBankOpResult::set_serialnum(const char* value, size_t size) {
  
  serialnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.serialNum)
}
 ::std::string* PBBankOpResult::mutable_serialnum() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.serialNum)
  return serialnum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_serialnum() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.serialNum)
  
  return serialnum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_serialnum(::std::string* serialnum) {
  if (serialnum != NULL) {
    
  } else {
    
  }
  serialnum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialnum);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.serialNum)
}

// optional int32 tradingDay = 13;
void PBBankOpResult::clear_tradingday() {
  tradingday_ = 0;
}
 ::google::protobuf::int32 PBBankOpResult::tradingday() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.tradingDay)
  return tradingday_;
}
 void PBBankOpResult::set_tradingday(::google::protobuf::int32 value) {
  
  tradingday_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.tradingDay)
}

// optional string tradeDate = 14;
void PBBankOpResult::clear_tradedate() {
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::tradedate() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
  return tradedate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_tradedate(const ::std::string& value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
}
 void PBBankOpResult::set_tradedate(const char* value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
}
 void PBBankOpResult::set_tradedate(const char* value, size_t size) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
}
 ::std::string* PBBankOpResult::mutable_tradedate() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
  return tradedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_tradedate() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
  
  return tradedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_tradedate(::std::string* tradedate) {
  if (tradedate != NULL) {
    
  } else {
    
  }
  tradedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradedate);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.tradeDate)
}

// optional string tradeTime = 15;
void PBBankOpResult::clear_tradetime() {
  tradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::tradetime() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
  return tradetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_tradetime(const ::std::string& value) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
}
 void PBBankOpResult::set_tradetime(const char* value) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
}
 void PBBankOpResult::set_tradetime(const char* value, size_t size) {
  
  tradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
}
 ::std::string* PBBankOpResult::mutable_tradetime() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
  return tradetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_tradetime() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
  
  return tradetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_tradetime(::std::string* tradetime) {
  if (tradetime != NULL) {
    
  } else {
    
  }
  tradetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradetime);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.tradeTime)
}

// optional string tradeCode = 16;
void PBBankOpResult::clear_tradecode() {
  tradecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::tradecode() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
  return tradecode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_tradecode(const ::std::string& value) {
  
  tradecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
}
 void PBBankOpResult::set_tradecode(const char* value) {
  
  tradecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
}
 void PBBankOpResult::set_tradecode(const char* value, size_t size) {
  
  tradecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
}
 ::std::string* PBBankOpResult::mutable_tradecode() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
  return tradecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_tradecode() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
  
  return tradecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_tradecode(::std::string* tradecode) {
  if (tradecode != NULL) {
    
  } else {
    
  }
  tradecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradecode);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.tradeCode)
}

// optional string bankSerial = 17;
void PBBankOpResult::clear_bankserial() {
  bankserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::bankserial() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
  return bankserial_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_bankserial(const ::std::string& value) {
  
  bankserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
}
 void PBBankOpResult::set_bankserial(const char* value) {
  
  bankserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
}
 void PBBankOpResult::set_bankserial(const char* value, size_t size) {
  
  bankserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
}
 ::std::string* PBBankOpResult::mutable_bankserial() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
  return bankserial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_bankserial() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
  
  return bankserial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_bankserial(::std::string* bankserial) {
  if (bankserial != NULL) {
    
  } else {
    
  }
  bankserial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankserial);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.bankSerial)
}

// optional int32 futureAccType = 18;
void PBBankOpResult::clear_futureacctype() {
  futureacctype_ = 0;
}
 ::google::protobuf::int32 PBBankOpResult::futureacctype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.futureAccType)
  return futureacctype_;
}
 void PBBankOpResult::set_futureacctype(::google::protobuf::int32 value) {
  
  futureacctype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.futureAccType)
}

// optional int32 bankAccType = 19;
void PBBankOpResult::clear_bankacctype() {
  bankacctype_ = 0;
}
 ::google::protobuf::int32 PBBankOpResult::bankacctype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.bankAccType)
  return bankacctype_;
}
 void PBBankOpResult::set_bankacctype(::google::protobuf::int32 value) {
  
  bankacctype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.bankAccType)
}

// optional string futureSerial = 20;
void PBBankOpResult::clear_futureserial() {
  futureserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::futureserial() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
  return futureserial_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_futureserial(const ::std::string& value) {
  
  futureserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
}
 void PBBankOpResult::set_futureserial(const char* value) {
  
  futureserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
}
 void PBBankOpResult::set_futureserial(const char* value, size_t size) {
  
  futureserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
}
 ::std::string* PBBankOpResult::mutable_futureserial() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
  return futureserial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_futureserial() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
  
  return futureserial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_futureserial(::std::string* futureserial) {
  if (futureserial != NULL) {
    
  } else {
    
  }
  futureserial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), futureserial);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.futureSerial)
}

// optional double custFee = 21;
void PBBankOpResult::clear_custfee() {
  custfee_ = 0;
}
 double PBBankOpResult::custfee() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.custFee)
  return custfee_;
}
 void PBBankOpResult::set_custfee(double value) {
  
  custfee_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.custFee)
}

// optional double brokerFee = 22;
void PBBankOpResult::clear_brokerfee() {
  brokerfee_ = 0;
}
 double PBBankOpResult::brokerfee() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.brokerFee)
  return brokerfee_;
}
 void PBBankOpResult::set_brokerfee(double value) {
  
  brokerfee_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.brokerFee)
}

// optional int32 errorID = 23;
void PBBankOpResult::clear_errorid() {
  errorid_ = 0;
}
 ::google::protobuf::int32 PBBankOpResult::errorid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.errorID)
  return errorid_;
}
 void PBBankOpResult::set_errorid(::google::protobuf::int32 value) {
  
  errorid_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.errorID)
}

// optional bytes errorMsg = 24;
void PBBankOpResult::clear_errormsg() {
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankOpResult::errormsg() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
  return errormsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_errormsg(const ::std::string& value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
}
 void PBBankOpResult::set_errormsg(const char* value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
}
 void PBBankOpResult::set_errormsg(const void* value, size_t size) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
}
 ::std::string* PBBankOpResult::mutable_errormsg() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
  return errormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankOpResult::release_errormsg() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
  
  return errormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankOpResult::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg != NULL) {
    
  } else {
    
  }
  errormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormsg);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankOpResult.errorMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBankInfo::kHeaderFieldNumber;
const int PBBankInfo::kBankIDFieldNumber;
const int PBBankInfo::kBranchIDFieldNumber;
const int PBBankInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBankInfo::PBBankInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBBankInfo)
}

void PBBankInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBBankInfo::PBBankInfo(const PBBankInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBBankInfo)
}

void PBBankInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  bankid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBBankInfo::~PBBankInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBBankInfo)
  SharedDtor();
}

void PBBankInfo::SharedDtor() {
  bankid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBBankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBBankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBankInfo_descriptor_;
}

const PBBankInfo& PBBankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBBankInfo* PBBankInfo::default_instance_ = NULL;

PBBankInfo* PBBankInfo::New(::google::protobuf::Arena* arena) const {
  PBBankInfo* n = new PBBankInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBBankInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBBankInfo)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PBBankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBBankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bankID;
        break;
      }

      // optional string bankID = 2;
      case 2: {
        if (tag == 18) {
         parse_bankID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankid().data(), this->bankid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankInfo.bankID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_branchID;
        break;
      }

      // optional string branchID = 3;
      case 3: {
        if (tag == 26) {
         parse_branchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branchid().data(), this->branchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBBankInfo.branchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional bytes name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBBankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBBankInfo)
  return false;
#undef DO_
}

void PBBankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBBankInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankInfo.bankID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bankid(), output);
  }

  // optional string branchID = 3;
  if (this->branchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branchid().data(), this->branchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankInfo.branchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->branchid(), output);
  }

  // optional bytes name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBBankInfo)
}

::google::protobuf::uint8* PBBankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBBankInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankInfo.bankID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bankid(), target);
  }

  // optional string branchID = 3;
  if (this->branchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branchid().data(), this->branchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBBankInfo.branchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->branchid(), target);
  }

  // optional bytes name = 4;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBBankInfo)
  return target;
}

int PBBankInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBBankInfo)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankid());
  }

  // optional string branchID = 3;
  if (this->branchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branchid());
  }

  // optional bytes name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBBankInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBBankInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBBankInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBankInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBBankInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBBankInfo)
    MergeFrom(*source);
  }
}

void PBBankInfo::MergeFrom(const PBBankInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBBankInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.bankid().size() > 0) {

    bankid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankid_);
  }
  if (from.branchid().size() > 0) {

    branchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branchid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PBBankInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBBankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBankInfo::CopyFrom(const PBBankInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBBankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBankInfo::IsInitialized() const {

  return true;
}

void PBBankInfo::Swap(PBBankInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBankInfo::InternalSwap(PBBankInfo* other) {
  std::swap(header_, other->header_);
  bankid_.Swap(&other->bankid_);
  branchid_.Swap(&other->branchid_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBBankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBBankInfo_descriptor_;
  metadata.reflection = PBBankInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBBankInfo

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBBankInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBBankInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBBankInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBBankInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBBankInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBBankInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankInfo.header)
}

// optional string bankID = 2;
void PBBankInfo::clear_bankid() {
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankInfo::bankid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankInfo.bankID)
  return bankid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankInfo::set_bankid(const ::std::string& value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankInfo.bankID)
}
 void PBBankInfo::set_bankid(const char* value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankInfo.bankID)
}
 void PBBankInfo::set_bankid(const char* value, size_t size) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankInfo.bankID)
}
 ::std::string* PBBankInfo::mutable_bankid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankInfo.bankID)
  return bankid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankInfo::release_bankid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankInfo.bankID)
  
  return bankid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankInfo::set_allocated_bankid(::std::string* bankid) {
  if (bankid != NULL) {
    
  } else {
    
  }
  bankid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankInfo.bankID)
}

// optional string branchID = 3;
void PBBankInfo::clear_branchid() {
  branchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankInfo::branchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankInfo.branchID)
  return branchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankInfo::set_branchid(const ::std::string& value) {
  
  branchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankInfo.branchID)
}
 void PBBankInfo::set_branchid(const char* value) {
  
  branchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankInfo.branchID)
}
 void PBBankInfo::set_branchid(const char* value, size_t size) {
  
  branchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankInfo.branchID)
}
 ::std::string* PBBankInfo::mutable_branchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankInfo.branchID)
  return branchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankInfo::release_branchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankInfo.branchID)
  
  return branchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankInfo::set_allocated_branchid(::std::string* branchid) {
  if (branchid != NULL) {
    
  } else {
    
  }
  branchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankInfo.branchID)
}

// optional bytes name = 4;
void PBBankInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBBankInfo::name() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBBankInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBBankInfo.name)
}
 void PBBankInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBBankInfo.name)
}
 void PBBankInfo::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBBankInfo.name)
}
 ::std::string* PBBankInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBBankInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBBankInfo::release_name() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBBankInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBBankInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBBankInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBUserAccountInfo::kHeaderFieldNumber;
const int PBUserAccountInfo::kBankIDFieldNumber;
const int PBUserAccountInfo::kBankBranchIDFieldNumber;
const int PBUserAccountInfo::kBankAccountFieldNumber;
const int PBUserAccountInfo::kBrokerIDFieldNumber;
const int PBUserAccountInfo::kBrokerBranchIDFieldNumber;
const int PBUserAccountInfo::kAccountIDFieldNumber;
const int PBUserAccountInfo::kIdCardNoFieldNumber;
const int PBUserAccountInfo::kCustomerNameFieldNumber;
const int PBUserAccountInfo::kCurrencyIDFieldNumber;
const int PBUserAccountInfo::kCustTypeFieldNumber;
const int PBUserAccountInfo::kBankAccTypeFieldNumber;
const int PBUserAccountInfo::kBankUseAmountFieldNumber;
const int PBUserAccountInfo::kBankFetchAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBUserAccountInfo::PBUserAccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBUserAccountInfo)
}

void PBUserAccountInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBUserAccountInfo::PBUserAccountInfo(const PBUserAccountInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBUserAccountInfo)
}

void PBUserAccountInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  bankid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idcardno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custtype_ = 0;
  bankacctype_ = 0;
  bankuseamount_ = 0;
  bankfetchamount_ = 0;
}

PBUserAccountInfo::~PBUserAccountInfo() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBUserAccountInfo)
  SharedDtor();
}

void PBUserAccountInfo::SharedDtor() {
  bankid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idcardno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBUserAccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBUserAccountInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBUserAccountInfo_descriptor_;
}

const PBUserAccountInfo& PBUserAccountInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBUserAccountInfo* PBUserAccountInfo::default_instance_ = NULL;

PBUserAccountInfo* PBUserAccountInfo::New(::google::protobuf::Arena* arena) const {
  PBUserAccountInfo* n = new PBUserAccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBUserAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBUserAccountInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBUserAccountInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBUserAccountInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idcardno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(custtype_, bankfetchamount_);
  customername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBUserAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBUserAccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bankID;
        break;
      }

      // optional string bankID = 2;
      case 2: {
        if (tag == 18) {
         parse_bankID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankid().data(), this->bankid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.bankID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bankBranchID;
        break;
      }

      // optional string bankBranchID = 3;
      case 3: {
        if (tag == 26) {
         parse_bankBranchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankbranchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankbranchid().data(), this->bankbranchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bankAccount;
        break;
      }

      // optional string bankAccount = 4;
      case 4: {
        if (tag == 34) {
         parse_bankAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankaccount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bankaccount().data(), this->bankaccount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.bankAccount"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_brokerID;
        break;
      }

      // optional string brokerID = 5;
      case 5: {
        if (tag == 42) {
         parse_brokerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), this->brokerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.brokerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_brokerBranchID;
        break;
      }

      // optional string brokerBranchID = 6;
      case 6: {
        if (tag == 50) {
         parse_brokerBranchID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerbranchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerbranchid().data(), this->brokerbranchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_accountID;
        break;
      }

      // optional string accountID = 7;
      case 7: {
        if (tag == 58) {
         parse_accountID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountid().data(), this->accountid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.accountID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_idCardNo;
        break;
      }

      // optional string idCardNo = 8;
      case 8: {
        if (tag == 66) {
         parse_idCardNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idcardno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->idcardno().data(), this->idcardno().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.idCardNo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_customerName;
        break;
      }

      // optional bytes customerName = 9;
      case 9: {
        if (tag == 74) {
         parse_customerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_customername()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_currencyID;
        break;
      }

      // optional string currencyID = 10;
      case 10: {
        if (tag == 82) {
         parse_currencyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currencyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currencyid().data(), this->currencyid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBUserAccountInfo.currencyID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_custType;
        break;
      }

      // optional int32 custType = 11;
      case 11: {
        if (tag == 88) {
         parse_custType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &custtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bankAccType;
        break;
      }

      // optional int32 bankAccType = 12;
      case 12: {
        if (tag == 96) {
         parse_bankAccType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bankacctype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_bankUseAmount;
        break;
      }

      // optional double bankUseAmount = 13;
      case 13: {
        if (tag == 105) {
         parse_bankUseAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bankuseamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_bankFetchAmount;
        break;
      }

      // optional double bankFetchAmount = 14;
      case 14: {
        if (tag == 113) {
         parse_bankFetchAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bankfetchamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBUserAccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBUserAccountInfo)
  return false;
#undef DO_
}

void PBUserAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBUserAccountInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.bankID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bankid(), output);
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankbranchid().data(), this->bankbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bankbranchid(), output);
  }

  // optional string bankAccount = 4;
  if (this->bankaccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankaccount().data(), this->bankaccount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.bankAccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bankaccount(), output);
  }

  // optional string brokerID = 5;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.brokerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->brokerid(), output);
  }

  // optional string brokerBranchID = 6;
  if (this->brokerbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerbranchid().data(), this->brokerbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->brokerbranchid(), output);
  }

  // optional string accountID = 7;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.accountID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->accountid(), output);
  }

  // optional string idCardNo = 8;
  if (this->idcardno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idcardno().data(), this->idcardno().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.idCardNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->idcardno(), output);
  }

  // optional bytes customerName = 9;
  if (this->customername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->customername(), output);
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currencyid().data(), this->currencyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.currencyID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->currencyid(), output);
  }

  // optional int32 custType = 11;
  if (this->custtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->custtype(), output);
  }

  // optional int32 bankAccType = 12;
  if (this->bankacctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->bankacctype(), output);
  }

  // optional double bankUseAmount = 13;
  if (this->bankuseamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->bankuseamount(), output);
  }

  // optional double bankFetchAmount = 14;
  if (this->bankfetchamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->bankfetchamount(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBUserAccountInfo)
}

::google::protobuf::uint8* PBUserAccountInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBUserAccountInfo)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankid().data(), this->bankid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.bankID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bankid(), target);
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankbranchid().data(), this->bankbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bankbranchid(), target);
  }

  // optional string bankAccount = 4;
  if (this->bankaccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bankaccount().data(), this->bankaccount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.bankAccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bankaccount(), target);
  }

  // optional string brokerID = 5;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), this->brokerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.brokerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->brokerid(), target);
  }

  // optional string brokerBranchID = 6;
  if (this->brokerbranchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerbranchid().data(), this->brokerbranchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->brokerbranchid(), target);
  }

  // optional string accountID = 7;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), this->accountid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.accountID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->accountid(), target);
  }

  // optional string idCardNo = 8;
  if (this->idcardno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idcardno().data(), this->idcardno().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.idCardNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->idcardno(), target);
  }

  // optional bytes customerName = 9;
  if (this->customername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->customername(), target);
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currencyid().data(), this->currencyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBUserAccountInfo.currencyID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->currencyid(), target);
  }

  // optional int32 custType = 11;
  if (this->custtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->custtype(), target);
  }

  // optional int32 bankAccType = 12;
  if (this->bankacctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->bankacctype(), target);
  }

  // optional double bankUseAmount = 13;
  if (this->bankuseamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->bankuseamount(), target);
  }

  // optional double bankFetchAmount = 14;
  if (this->bankfetchamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->bankfetchamount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBUserAccountInfo)
  return target;
}

int PBUserAccountInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBUserAccountInfo)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string bankID = 2;
  if (this->bankid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankid());
  }

  // optional string bankBranchID = 3;
  if (this->bankbranchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankbranchid());
  }

  // optional string bankAccount = 4;
  if (this->bankaccount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bankaccount());
  }

  // optional string brokerID = 5;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // optional string brokerBranchID = 6;
  if (this->brokerbranchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerbranchid());
  }

  // optional string accountID = 7;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountid());
  }

  // optional string idCardNo = 8;
  if (this->idcardno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->idcardno());
  }

  // optional bytes customerName = 9;
  if (this->customername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->customername());
  }

  // optional string currencyID = 10;
  if (this->currencyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currencyid());
  }

  // optional int32 custType = 11;
  if (this->custtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->custtype());
  }

  // optional int32 bankAccType = 12;
  if (this->bankacctype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bankacctype());
  }

  // optional double bankUseAmount = 13;
  if (this->bankuseamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double bankFetchAmount = 14;
  if (this->bankfetchamount() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBUserAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBUserAccountInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBUserAccountInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBUserAccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBUserAccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBUserAccountInfo)
    MergeFrom(*source);
  }
}

void PBUserAccountInfo::MergeFrom(const PBUserAccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBUserAccountInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.bankid().size() > 0) {

    bankid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankid_);
  }
  if (from.bankbranchid().size() > 0) {

    bankbranchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankbranchid_);
  }
  if (from.bankaccount().size() > 0) {

    bankaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankaccount_);
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.brokerbranchid().size() > 0) {

    brokerbranchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerbranchid_);
  }
  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.idcardno().size() > 0) {

    idcardno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idcardno_);
  }
  if (from.customername().size() > 0) {

    customername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customername_);
  }
  if (from.currencyid().size() > 0) {

    currencyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currencyid_);
  }
  if (from.custtype() != 0) {
    set_custtype(from.custtype());
  }
  if (from.bankacctype() != 0) {
    set_bankacctype(from.bankacctype());
  }
  if (from.bankuseamount() != 0) {
    set_bankuseamount(from.bankuseamount());
  }
  if (from.bankfetchamount() != 0) {
    set_bankfetchamount(from.bankfetchamount());
  }
}

void PBUserAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBUserAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBUserAccountInfo::CopyFrom(const PBUserAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBUserAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUserAccountInfo::IsInitialized() const {

  return true;
}

void PBUserAccountInfo::Swap(PBUserAccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBUserAccountInfo::InternalSwap(PBUserAccountInfo* other) {
  std::swap(header_, other->header_);
  bankid_.Swap(&other->bankid_);
  bankbranchid_.Swap(&other->bankbranchid_);
  bankaccount_.Swap(&other->bankaccount_);
  brokerid_.Swap(&other->brokerid_);
  brokerbranchid_.Swap(&other->brokerbranchid_);
  accountid_.Swap(&other->accountid_);
  idcardno_.Swap(&other->idcardno_);
  customername_.Swap(&other->customername_);
  currencyid_.Swap(&other->currencyid_);
  std::swap(custtype_, other->custtype_);
  std::swap(bankacctype_, other->bankacctype_);
  std::swap(bankuseamount_, other->bankuseamount_);
  std::swap(bankfetchamount_, other->bankfetchamount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBUserAccountInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBUserAccountInfo_descriptor_;
  metadata.reflection = PBUserAccountInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBUserAccountInfo

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBUserAccountInfo::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBUserAccountInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBUserAccountInfo::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBUserAccountInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBUserAccountInfo::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBUserAccountInfo::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.header)
}

// optional string bankID = 2;
void PBUserAccountInfo::clear_bankid() {
  bankid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::bankid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
  return bankid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_bankid(const ::std::string& value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
}
 void PBUserAccountInfo::set_bankid(const char* value) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
}
 void PBUserAccountInfo::set_bankid(const char* value, size_t size) {
  
  bankid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
}
 ::std::string* PBUserAccountInfo::mutable_bankid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
  return bankid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_bankid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
  
  return bankid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_bankid(::std::string* bankid) {
  if (bankid != NULL) {
    
  } else {
    
  }
  bankid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.bankID)
}

// optional string bankBranchID = 3;
void PBUserAccountInfo::clear_bankbranchid() {
  bankbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::bankbranchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
  return bankbranchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_bankbranchid(const ::std::string& value) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
}
 void PBUserAccountInfo::set_bankbranchid(const char* value) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
}
 void PBUserAccountInfo::set_bankbranchid(const char* value, size_t size) {
  
  bankbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
}
 ::std::string* PBUserAccountInfo::mutable_bankbranchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
  return bankbranchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_bankbranchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
  
  return bankbranchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_bankbranchid(::std::string* bankbranchid) {
  if (bankbranchid != NULL) {
    
  } else {
    
  }
  bankbranchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankbranchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.bankBranchID)
}

// optional string bankAccount = 4;
void PBUserAccountInfo::clear_bankaccount() {
  bankaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::bankaccount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
  return bankaccount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_bankaccount(const ::std::string& value) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
}
 void PBUserAccountInfo::set_bankaccount(const char* value) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
}
 void PBUserAccountInfo::set_bankaccount(const char* value, size_t size) {
  
  bankaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
}
 ::std::string* PBUserAccountInfo::mutable_bankaccount() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
  return bankaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_bankaccount() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
  
  return bankaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_bankaccount(::std::string* bankaccount) {
  if (bankaccount != NULL) {
    
  } else {
    
  }
  bankaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bankaccount);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.bankAccount)
}

// optional string brokerID = 5;
void PBUserAccountInfo::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::brokerid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
  return brokerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
}
 void PBUserAccountInfo::set_brokerid(const char* value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
}
 void PBUserAccountInfo::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
}
 ::std::string* PBUserAccountInfo::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_brokerid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.brokerID)
}

// optional string brokerBranchID = 6;
void PBUserAccountInfo::clear_brokerbranchid() {
  brokerbranchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::brokerbranchid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
  return brokerbranchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_brokerbranchid(const ::std::string& value) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
}
 void PBUserAccountInfo::set_brokerbranchid(const char* value) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
}
 void PBUserAccountInfo::set_brokerbranchid(const char* value, size_t size) {
  
  brokerbranchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
}
 ::std::string* PBUserAccountInfo::mutable_brokerbranchid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
  return brokerbranchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_brokerbranchid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
  
  return brokerbranchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_brokerbranchid(::std::string* brokerbranchid) {
  if (brokerbranchid != NULL) {
    
  } else {
    
  }
  brokerbranchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerbranchid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.brokerBranchID)
}

// optional string accountID = 7;
void PBUserAccountInfo::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::accountid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
  return accountid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
}
 void PBUserAccountInfo::set_accountid(const char* value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
}
 void PBUserAccountInfo::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
}
 ::std::string* PBUserAccountInfo::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_accountid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.accountID)
}

// optional string idCardNo = 8;
void PBUserAccountInfo::clear_idcardno() {
  idcardno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::idcardno() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
  return idcardno_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_idcardno(const ::std::string& value) {
  
  idcardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
}
 void PBUserAccountInfo::set_idcardno(const char* value) {
  
  idcardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
}
 void PBUserAccountInfo::set_idcardno(const char* value, size_t size) {
  
  idcardno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
}
 ::std::string* PBUserAccountInfo::mutable_idcardno() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
  return idcardno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_idcardno() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
  
  return idcardno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_idcardno(::std::string* idcardno) {
  if (idcardno != NULL) {
    
  } else {
    
  }
  idcardno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idcardno);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.idCardNo)
}

// optional bytes customerName = 9;
void PBUserAccountInfo::clear_customername() {
  customername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::customername() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
  return customername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_customername(const ::std::string& value) {
  
  customername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
}
 void PBUserAccountInfo::set_customername(const char* value) {
  
  customername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
}
 void PBUserAccountInfo::set_customername(const void* value, size_t size) {
  
  customername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
}
 ::std::string* PBUserAccountInfo::mutable_customername() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
  return customername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_customername() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
  
  return customername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_customername(::std::string* customername) {
  if (customername != NULL) {
    
  } else {
    
  }
  customername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customername);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.customerName)
}

// optional string currencyID = 10;
void PBUserAccountInfo::clear_currencyid() {
  currencyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBUserAccountInfo::currencyid() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
  return currencyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_currencyid(const ::std::string& value) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
}
 void PBUserAccountInfo::set_currencyid(const char* value) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
}
 void PBUserAccountInfo::set_currencyid(const char* value, size_t size) {
  
  currencyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
}
 ::std::string* PBUserAccountInfo::mutable_currencyid() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
  return currencyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBUserAccountInfo::release_currencyid() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
  
  return currencyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBUserAccountInfo::set_allocated_currencyid(::std::string* currencyid) {
  if (currencyid != NULL) {
    
  } else {
    
  }
  currencyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currencyid);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBUserAccountInfo.currencyID)
}

// optional int32 custType = 11;
void PBUserAccountInfo::clear_custtype() {
  custtype_ = 0;
}
 ::google::protobuf::int32 PBUserAccountInfo::custtype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.custType)
  return custtype_;
}
 void PBUserAccountInfo::set_custtype(::google::protobuf::int32 value) {
  
  custtype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.custType)
}

// optional int32 bankAccType = 12;
void PBUserAccountInfo::clear_bankacctype() {
  bankacctype_ = 0;
}
 ::google::protobuf::int32 PBUserAccountInfo::bankacctype() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.bankAccType)
  return bankacctype_;
}
 void PBUserAccountInfo::set_bankacctype(::google::protobuf::int32 value) {
  
  bankacctype_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.bankAccType)
}

// optional double bankUseAmount = 13;
void PBUserAccountInfo::clear_bankuseamount() {
  bankuseamount_ = 0;
}
 double PBUserAccountInfo::bankuseamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.bankUseAmount)
  return bankuseamount_;
}
 void PBUserAccountInfo::set_bankuseamount(double value) {
  
  bankuseamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.bankUseAmount)
}

// optional double bankFetchAmount = 14;
void PBUserAccountInfo::clear_bankfetchamount() {
  bankfetchamount_ = 0;
}
 double PBUserAccountInfo::bankfetchamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBUserAccountInfo.bankFetchAmount)
  return bankfetchamount_;
}
 void PBUserAccountInfo::set_bankfetchamount(double value) {
  
  bankfetchamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBUserAccountInfo.bankFetchAmount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPositionCompare::kContractFieldNumber;
const int PBPositionCompare::kPortfolioFieldNumber;
const int PBPositionCompare::kDirectionFieldNumber;
const int PBPositionCompare::kDbPositionFieldNumber;
const int PBPositionCompare::kSysPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPositionCompare::PBPositionCompare()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPositionCompare)
}

void PBPositionCompare::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBPositionCompare::PBPositionCompare(const PBPositionCompare& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPositionCompare)
}

void PBPositionCompare::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_ = 0;
  dbposition_ = 0;
  sysposition_ = 0;
}

PBPositionCompare::~PBPositionCompare() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPositionCompare)
  SharedDtor();
}

void PBPositionCompare::SharedDtor() {
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBPositionCompare::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPositionCompare::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPositionCompare_descriptor_;
}

const PBPositionCompare& PBPositionCompare::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPositionCompare* PBPositionCompare::default_instance_ = NULL;

PBPositionCompare* PBPositionCompare::New(::google::protobuf::Arena* arena) const {
  PBPositionCompare* n = new PBPositionCompare;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPositionCompare::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPositionCompare)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPositionCompare, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPositionCompare*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(direction_, sysposition_);
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBPositionCompare::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPositionCompare)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string contract = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPositionCompare.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 2;
      case 2: {
        if (tag == 18) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPositionCompare.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_direction;
        break;
      }

      // optional int32 direction = 3;
      case 3: {
        if (tag == 24) {
         parse_direction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dbPosition;
        break;
      }

      // optional int32 dbPosition = 4;
      case 4: {
        if (tag == 32) {
         parse_dbPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dbposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sysPosition;
        break;
      }

      // optional int32 sysPosition = 5;
      case 5: {
        if (tag == 40) {
         parse_sysPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sysposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPositionCompare)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPositionCompare)
  return false;
#undef DO_
}

void PBPositionCompare::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPositionCompare)
  // optional string contract = 1;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionCompare.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->contract(), output);
  }

  // optional string portfolio = 2;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionCompare.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->portfolio(), output);
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->direction(), output);
  }

  // optional int32 dbPosition = 4;
  if (this->dbposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dbposition(), output);
  }

  // optional int32 sysPosition = 5;
  if (this->sysposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sysposition(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPositionCompare)
}

::google::protobuf::uint8* PBPositionCompare::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPositionCompare)
  // optional string contract = 1;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionCompare.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contract(), target);
  }

  // optional string portfolio = 2;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionCompare.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->portfolio(), target);
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->direction(), target);
  }

  // optional int32 dbPosition = 4;
  if (this->dbposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dbposition(), target);
  }

  // optional int32 sysPosition = 5;
  if (this->sysposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sysposition(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPositionCompare)
  return target;
}

int PBPositionCompare::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPositionCompare)
  int total_size = 0;

  // optional string contract = 1;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string portfolio = 2;
  if (this->portfolio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // optional int32 direction = 3;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // optional int32 dbPosition = 4;
  if (this->dbposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dbposition());
  }

  // optional int32 sysPosition = 5;
  if (this->sysposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sysposition());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPositionCompare::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPositionCompare)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPositionCompare* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPositionCompare>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPositionCompare)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPositionCompare)
    MergeFrom(*source);
  }
}

void PBPositionCompare::MergeFrom(const PBPositionCompare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPositionCompare)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.dbposition() != 0) {
    set_dbposition(from.dbposition());
  }
  if (from.sysposition() != 0) {
    set_sysposition(from.sysposition());
  }
}

void PBPositionCompare::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPositionCompare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPositionCompare::CopyFrom(const PBPositionCompare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPositionCompare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPositionCompare::IsInitialized() const {

  return true;
}

void PBPositionCompare::Swap(PBPositionCompare* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPositionCompare::InternalSwap(PBPositionCompare* other) {
  contract_.Swap(&other->contract_);
  portfolio_.Swap(&other->portfolio_);
  std::swap(direction_, other->direction_);
  std::swap(dbposition_, other->dbposition_);
  std::swap(sysposition_, other->sysposition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPositionCompare::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPositionCompare_descriptor_;
  metadata.reflection = PBPositionCompare_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPositionCompare

// optional string contract = 1;
void PBPositionCompare::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPositionCompare::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompare.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionCompare::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionCompare.contract)
}
 void PBPositionCompare::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPositionCompare.contract)
}
 void PBPositionCompare::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPositionCompare.contract)
}
 ::std::string* PBPositionCompare::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionCompare.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPositionCompare::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionCompare.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionCompare::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionCompare.contract)
}

// optional string portfolio = 2;
void PBPositionCompare::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPositionCompare::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompare.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionCompare::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionCompare.portfolio)
}
 void PBPositionCompare::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPositionCompare.portfolio)
}
 void PBPositionCompare::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPositionCompare.portfolio)
}
 ::std::string* PBPositionCompare::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionCompare.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPositionCompare::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionCompare.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionCompare::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionCompare.portfolio)
}

// optional int32 direction = 3;
void PBPositionCompare::clear_direction() {
  direction_ = 0;
}
 ::google::protobuf::int32 PBPositionCompare::direction() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompare.direction)
  return direction_;
}
 void PBPositionCompare::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionCompare.direction)
}

// optional int32 dbPosition = 4;
void PBPositionCompare::clear_dbposition() {
  dbposition_ = 0;
}
 ::google::protobuf::int32 PBPositionCompare::dbposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompare.dbPosition)
  return dbposition_;
}
 void PBPositionCompare::set_dbposition(::google::protobuf::int32 value) {
  
  dbposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionCompare.dbPosition)
}

// optional int32 sysPosition = 5;
void PBPositionCompare::clear_sysposition() {
  sysposition_ = 0;
}
 ::google::protobuf::int32 PBPositionCompare::sysposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompare.sysPosition)
  return sysposition_;
}
 void PBPositionCompare::set_sysposition(::google::protobuf::int32 value) {
  
  sysposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionCompare.sysPosition)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPositionCompareList::kHeaderFieldNumber;
const int PBPositionCompareList::kPositionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPositionCompareList::PBPositionCompareList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPositionCompareList)
}

void PBPositionCompareList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPositionCompareList::PBPositionCompareList(const PBPositionCompareList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPositionCompareList)
}

void PBPositionCompareList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
}

PBPositionCompareList::~PBPositionCompareList() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPositionCompareList)
  SharedDtor();
}

void PBPositionCompareList::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPositionCompareList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPositionCompareList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPositionCompareList_descriptor_;
}

const PBPositionCompareList& PBPositionCompareList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPositionCompareList* PBPositionCompareList::default_instance_ = NULL;

PBPositionCompareList* PBPositionCompareList::New(::google::protobuf::Arena* arena) const {
  PBPositionCompareList* n = new PBPositionCompareList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPositionCompareList::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPositionCompareList)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  positions_.Clear();
}

bool PBPositionCompareList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPositionCompareList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_positions;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBPositionCompare positions = 2;
      case 2: {
        if (tag == 18) {
         parse_positions:
          DO_(input->IncrementRecursionDepth());
         parse_loop_positions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_positions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_positions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPositionCompareList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPositionCompareList)
  return false;
#undef DO_
}

void PBPositionCompareList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPositionCompareList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBPositionCompare positions = 2;
  for (unsigned int i = 0, n = this->positions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->positions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPositionCompareList)
}

::google::protobuf::uint8* PBPositionCompareList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPositionCompareList)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBPositionCompare positions = 2;
  for (unsigned int i = 0, n = this->positions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->positions(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPositionCompareList)
  return target;
}

int PBPositionCompareList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPositionCompareList)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // repeated .Micro.Future.Message.Business.PBPositionCompare positions = 2;
  total_size += 1 * this->positions_size();
  for (int i = 0; i < this->positions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->positions(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPositionCompareList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPositionCompareList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPositionCompareList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPositionCompareList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPositionCompareList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPositionCompareList)
    MergeFrom(*source);
  }
}

void PBPositionCompareList::MergeFrom(const PBPositionCompareList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPositionCompareList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  positions_.MergeFrom(from.positions_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
}

void PBPositionCompareList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPositionCompareList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPositionCompareList::CopyFrom(const PBPositionCompareList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPositionCompareList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPositionCompareList::IsInitialized() const {

  return true;
}

void PBPositionCompareList::Swap(PBPositionCompareList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPositionCompareList::InternalSwap(PBPositionCompareList* other) {
  std::swap(header_, other->header_);
  positions_.UnsafeArenaSwap(&other->positions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPositionCompareList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPositionCompareList_descriptor_;
  metadata.reflection = PBPositionCompareList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPositionCompareList

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBPositionCompareList::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPositionCompareList::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPositionCompareList::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompareList.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPositionCompareList::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionCompareList.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPositionCompareList::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionCompareList.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPositionCompareList::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionCompareList.header)
}

// repeated .Micro.Future.Message.Business.PBPositionCompare positions = 2;
int PBPositionCompareList::positions_size() const {
  return positions_.size();
}
void PBPositionCompareList::clear_positions() {
  positions_.Clear();
}
const ::Micro::Future::Message::Business::PBPositionCompare& PBPositionCompareList::positions(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionCompareList.positions)
  return positions_.Get(index);
}
::Micro::Future::Message::Business::PBPositionCompare* PBPositionCompareList::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionCompareList.positions)
  return positions_.Mutable(index);
}
::Micro::Future::Message::Business::PBPositionCompare* PBPositionCompareList::add_positions() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBPositionCompareList.positions)
  return positions_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPositionCompare >*
PBPositionCompareList::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBPositionCompareList.positions)
  return &positions_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBPositionCompare >&
PBPositionCompareList::positions() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBPositionCompareList.positions)
  return positions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBValuationContract::kExchangeFieldNumber;
const int PBValuationContract::kContractFieldNumber;
const int PBValuationContract::kPriceFieldNumber;
const int PBValuationContract::kVolatilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBValuationContract::PBValuationContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBValuationContract)
}

void PBValuationContract::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBValuationContract::PBValuationContract(const PBValuationContract& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBValuationContract)
}

void PBValuationContract::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
  volatility_ = 0;
}

PBValuationContract::~PBValuationContract() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBValuationContract)
  SharedDtor();
}

void PBValuationContract::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBValuationContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBValuationContract::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBValuationContract_descriptor_;
}

const PBValuationContract& PBValuationContract::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBValuationContract* PBValuationContract::default_instance_ = NULL;

PBValuationContract* PBValuationContract::New(::google::protobuf::Arena* arena) const {
  PBValuationContract* n = new PBValuationContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBValuationContract::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBValuationContract)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBValuationContract, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBValuationContract*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(price_, volatility_);
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBValuationContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBValuationContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string exchange = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBValuationContract.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contract;
        break;
      }

      // optional string contract = 2;
      case 2: {
        if (tag == 18) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBValuationContract.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_price;
        break;
      }

      // optional double price = 3;
      case 3: {
        if (tag == 25) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_volatility;
        break;
      }

      // optional double volatility = 4;
      case 4: {
        if (tag == 33) {
         parse_volatility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &volatility_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBValuationContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBValuationContract)
  return false;
#undef DO_
}

void PBValuationContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBValuationContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBValuationContract.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBValuationContract.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract(), output);
  }

  // optional double price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->price(), output);
  }

  // optional double volatility = 4;
  if (this->volatility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->volatility(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBValuationContract)
}

::google::protobuf::uint8* PBValuationContract::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBValuationContract)
  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBValuationContract.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBValuationContract.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract(), target);
  }

  // optional double price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->price(), target);
  }

  // optional double volatility = 4;
  if (this->volatility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->volatility(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBValuationContract)
  return target;
}

int PBValuationContract::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBValuationContract)
  int total_size = 0;

  // optional string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional double price = 3;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // optional double volatility = 4;
  if (this->volatility() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBValuationContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBValuationContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBValuationContract* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBValuationContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBValuationContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBValuationContract)
    MergeFrom(*source);
  }
}

void PBValuationContract::MergeFrom(const PBValuationContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBValuationContract)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volatility() != 0) {
    set_volatility(from.volatility());
  }
}

void PBValuationContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBValuationContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBValuationContract::CopyFrom(const PBValuationContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBValuationContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBValuationContract::IsInitialized() const {

  return true;
}

void PBValuationContract::Swap(PBValuationContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBValuationContract::InternalSwap(PBValuationContract* other) {
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  std::swap(price_, other->price_);
  std::swap(volatility_, other->volatility_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBValuationContract::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBValuationContract_descriptor_;
  metadata.reflection = PBValuationContract_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBValuationContract

// optional string exchange = 1;
void PBValuationContract::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBValuationContract::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationContract.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBValuationContract::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationContract.exchange)
}
 void PBValuationContract::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBValuationContract.exchange)
}
 void PBValuationContract::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBValuationContract.exchange)
}
 ::std::string* PBValuationContract::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBValuationContract.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBValuationContract::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBValuationContract.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBValuationContract::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBValuationContract.exchange)
}

// optional string contract = 2;
void PBValuationContract::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBValuationContract::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationContract.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBValuationContract::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationContract.contract)
}
 void PBValuationContract::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBValuationContract.contract)
}
 void PBValuationContract::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBValuationContract.contract)
}
 ::std::string* PBValuationContract::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBValuationContract.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBValuationContract::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBValuationContract.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBValuationContract::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBValuationContract.contract)
}

// optional double price = 3;
void PBValuationContract::clear_price() {
  price_ = 0;
}
 double PBValuationContract::price() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationContract.price)
  return price_;
}
 void PBValuationContract::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationContract.price)
}

// optional double volatility = 4;
void PBValuationContract::clear_volatility() {
  volatility_ = 0;
}
 double PBValuationContract::volatility() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationContract.volatility)
  return volatility_;
}
 void PBValuationContract::set_volatility(double value) {
  
  volatility_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationContract.volatility)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBValuationRisk::kHeaderFieldNumber;
const int PBValuationRisk::kContractValueFieldNumber;
const int PBValuationRisk::kDaysRemainFieldNumber;
const int PBValuationRisk::kInterestFieldNumber;
const int PBValuationRisk::kPortfolioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBValuationRisk::PBValuationRisk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBValuationRisk)
}

void PBValuationRisk::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBValuationRisk::PBValuationRisk(const PBValuationRisk& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBValuationRisk)
}

void PBValuationRisk::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  daysremain_ = 0;
  interest_ = 0;
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBValuationRisk::~PBValuationRisk() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBValuationRisk)
  SharedDtor();
}

void PBValuationRisk::SharedDtor() {
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBValuationRisk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBValuationRisk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBValuationRisk_descriptor_;
}

const PBValuationRisk& PBValuationRisk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBValuationRisk* PBValuationRisk::default_instance_ = NULL;

PBValuationRisk* PBValuationRisk::New(::google::protobuf::Arena* arena) const {
  PBValuationRisk* n = new PBValuationRisk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBValuationRisk::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBValuationRisk)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  daysremain_ = 0;
  interest_ = 0;
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractvalue_.Clear();
}

bool PBValuationRisk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBValuationRisk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contractValue;
        break;
      }

      // repeated .Micro.Future.Message.Business.PBValuationContract contractValue = 2;
      case 2: {
        if (tag == 18) {
         parse_contractValue:
          DO_(input->IncrementRecursionDepth());
         parse_loop_contractValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contractvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_contractValue;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_daysRemain;
        break;
      }

      // optional int32 daysRemain = 3;
      case 3: {
        if (tag == 24) {
         parse_daysRemain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daysremain_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_interest;
        break;
      }

      // optional double interest = 4;
      case 4: {
        if (tag == 33) {
         parse_interest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &interest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 5;
      case 5: {
        if (tag == 42) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBValuationRisk.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBValuationRisk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBValuationRisk)
  return false;
#undef DO_
}

void PBValuationRisk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBValuationRisk)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Micro.Future.Message.Business.PBValuationContract contractValue = 2;
  for (unsigned int i = 0, n = this->contractvalue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->contractvalue(i), output);
  }

  // optional int32 daysRemain = 3;
  if (this->daysremain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->daysremain(), output);
  }

  // optional double interest = 4;
  if (this->interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->interest(), output);
  }

  // optional string portfolio = 5;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBValuationRisk.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->portfolio(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBValuationRisk)
}

::google::protobuf::uint8* PBValuationRisk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBValuationRisk)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // repeated .Micro.Future.Message.Business.PBValuationContract contractValue = 2;
  for (unsigned int i = 0, n = this->contractvalue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->contractvalue(i), target);
  }

  // optional int32 daysRemain = 3;
  if (this->daysremain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->daysremain(), target);
  }

  // optional double interest = 4;
  if (this->interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->interest(), target);
  }

  // optional string portfolio = 5;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBValuationRisk.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->portfolio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBValuationRisk)
  return target;
}

int PBValuationRisk::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBValuationRisk)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional int32 daysRemain = 3;
  if (this->daysremain() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->daysremain());
  }

  // optional double interest = 4;
  if (this->interest() != 0) {
    total_size += 1 + 8;
  }

  // optional string portfolio = 5;
  if (this->portfolio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // repeated .Micro.Future.Message.Business.PBValuationContract contractValue = 2;
  total_size += 1 * this->contractvalue_size();
  for (int i = 0; i < this->contractvalue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contractvalue(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBValuationRisk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBValuationRisk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBValuationRisk* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBValuationRisk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBValuationRisk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBValuationRisk)
    MergeFrom(*source);
  }
}

void PBValuationRisk::MergeFrom(const PBValuationRisk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBValuationRisk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  contractvalue_.MergeFrom(from.contractvalue_);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.daysremain() != 0) {
    set_daysremain(from.daysremain());
  }
  if (from.interest() != 0) {
    set_interest(from.interest());
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
}

void PBValuationRisk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBValuationRisk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBValuationRisk::CopyFrom(const PBValuationRisk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBValuationRisk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBValuationRisk::IsInitialized() const {

  return true;
}

void PBValuationRisk::Swap(PBValuationRisk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBValuationRisk::InternalSwap(PBValuationRisk* other) {
  std::swap(header_, other->header_);
  contractvalue_.UnsafeArenaSwap(&other->contractvalue_);
  std::swap(daysremain_, other->daysremain_);
  std::swap(interest_, other->interest_);
  portfolio_.Swap(&other->portfolio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBValuationRisk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBValuationRisk_descriptor_;
  metadata.reflection = PBValuationRisk_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBValuationRisk

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBValuationRisk::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBValuationRisk::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBValuationRisk::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationRisk.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBValuationRisk::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBValuationRisk.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBValuationRisk::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBValuationRisk.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBValuationRisk::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBValuationRisk.header)
}

// repeated .Micro.Future.Message.Business.PBValuationContract contractValue = 2;
int PBValuationRisk::contractvalue_size() const {
  return contractvalue_.size();
}
void PBValuationRisk::clear_contractvalue() {
  contractvalue_.Clear();
}
const ::Micro::Future::Message::Business::PBValuationContract& PBValuationRisk::contractvalue(int index) const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationRisk.contractValue)
  return contractvalue_.Get(index);
}
::Micro::Future::Message::Business::PBValuationContract* PBValuationRisk::mutable_contractvalue(int index) {
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBValuationRisk.contractValue)
  return contractvalue_.Mutable(index);
}
::Micro::Future::Message::Business::PBValuationContract* PBValuationRisk::add_contractvalue() {
  // @@protoc_insertion_point(field_add:Micro.Future.Message.Business.PBValuationRisk.contractValue)
  return contractvalue_.Add();
}
::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBValuationContract >*
PBValuationRisk::mutable_contractvalue() {
  // @@protoc_insertion_point(field_mutable_list:Micro.Future.Message.Business.PBValuationRisk.contractValue)
  return &contractvalue_;
}
const ::google::protobuf::RepeatedPtrField< ::Micro::Future::Message::Business::PBValuationContract >&
PBValuationRisk::contractvalue() const {
  // @@protoc_insertion_point(field_list:Micro.Future.Message.Business.PBValuationRisk.contractValue)
  return contractvalue_;
}

// optional int32 daysRemain = 3;
void PBValuationRisk::clear_daysremain() {
  daysremain_ = 0;
}
 ::google::protobuf::int32 PBValuationRisk::daysremain() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationRisk.daysRemain)
  return daysremain_;
}
 void PBValuationRisk::set_daysremain(::google::protobuf::int32 value) {
  
  daysremain_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationRisk.daysRemain)
}

// optional double interest = 4;
void PBValuationRisk::clear_interest() {
  interest_ = 0;
}
 double PBValuationRisk::interest() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationRisk.interest)
  return interest_;
}
 void PBValuationRisk::set_interest(double value) {
  
  interest_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationRisk.interest)
}

// optional string portfolio = 5;
void PBValuationRisk::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBValuationRisk::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBValuationRisk.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBValuationRisk::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBValuationRisk.portfolio)
}
 void PBValuationRisk::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBValuationRisk.portfolio)
}
 void PBValuationRisk::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBValuationRisk.portfolio)
}
 ::std::string* PBValuationRisk::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBValuationRisk.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBValuationRisk::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBValuationRisk.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBValuationRisk::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBValuationRisk.portfolio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPositionPnL::kHeaderFieldNumber;
const int PBPositionPnL::kExchangeFieldNumber;
const int PBPositionPnL::kContractFieldNumber;
const int PBPositionPnL::kPortfolioFieldNumber;
const int PBPositionPnL::kTdBuyPositionFieldNumber;
const int PBPositionPnL::kYdBuyPositionFieldNumber;
const int PBPositionPnL::kTdSellPositionFieldNumber;
const int PBPositionPnL::kYdSellPositionFieldNumber;
const int PBPositionPnL::kTdBuyAmountFieldNumber;
const int PBPositionPnL::kTdSellAmountFieldNumber;
const int PBPositionPnL::kBuyProfitFieldNumber;
const int PBPositionPnL::kSellProfitFieldNumber;
const int PBPositionPnL::kLastPriceFieldNumber;
const int PBPositionPnL::kAvgBuyPriceFieldNumber;
const int PBPositionPnL::kAvgSellPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPositionPnL::PBPositionPnL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Micro.Future.Message.Business.PBPositionPnL)
}

void PBPositionPnL::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::Micro::Future::Message::DataHeader*>(&::Micro::Future::Message::DataHeader::default_instance());
}

PBPositionPnL::PBPositionPnL(const PBPositionPnL& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Micro.Future.Message.Business.PBPositionPnL)
}

void PBPositionPnL::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tdbuyposition_ = 0;
  ydbuyposition_ = 0;
  tdsellposition_ = 0;
  ydsellposition_ = 0;
  tdbuyamount_ = 0;
  tdsellamount_ = 0;
  buyprofit_ = 0;
  sellprofit_ = 0;
  lastprice_ = 0;
  avgbuyprice_ = 0;
  avgsellprice_ = 0;
}

PBPositionPnL::~PBPositionPnL() {
  // @@protoc_insertion_point(destructor:Micro.Future.Message.Business.PBPositionPnL)
  SharedDtor();
}

void PBPositionPnL::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void PBPositionPnL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPositionPnL::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPositionPnL_descriptor_;
}

const PBPositionPnL& PBPositionPnL::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_businessobj_2eproto();
  return *default_instance_;
}

PBPositionPnL* PBPositionPnL::default_instance_ = NULL;

PBPositionPnL* PBPositionPnL::New(::google::protobuf::Arena* arena) const {
  PBPositionPnL* n = new PBPositionPnL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPositionPnL::Clear() {
// @@protoc_insertion_point(message_clear_start:Micro.Future.Message.Business.PBPositionPnL)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPositionPnL, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPositionPnL*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tdbuyposition_, ydsellposition_);
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(tdbuyamount_, avgsellprice_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBPositionPnL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Micro.Future.Message.Business.PBPositionPnL)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Micro.Future.Message.DataHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exchange;
        break;
      }

      // optional string exchange = 2;
      case 2: {
        if (tag == 18) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), this->exchange().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPositionPnL.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contract;
        break;
      }

      // optional string contract = 3;
      case 3: {
        if (tag == 26) {
         parse_contract:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract().data(), this->contract().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPositionPnL.contract"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_portfolio;
        break;
      }

      // optional string portfolio = 4;
      case 4: {
        if (tag == 34) {
         parse_portfolio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio().data(), this->portfolio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Micro.Future.Message.Business.PBPositionPnL.portfolio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tdBuyPosition;
        break;
      }

      // optional int32 tdBuyPosition = 5;
      case 5: {
        if (tag == 40) {
         parse_tdBuyPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tdbuyposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ydBuyPosition;
        break;
      }

      // optional int32 ydBuyPosition = 6;
      case 6: {
        if (tag == 48) {
         parse_ydBuyPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ydbuyposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_tdSellPosition;
        break;
      }

      // optional int32 tdSellPosition = 7;
      case 7: {
        if (tag == 56) {
         parse_tdSellPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tdsellposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ydSellPosition;
        break;
      }

      // optional int32 ydSellPosition = 8;
      case 8: {
        if (tag == 64) {
         parse_ydSellPosition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ydsellposition_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_tdBuyAmount;
        break;
      }

      // optional double tdBuyAmount = 9;
      case 9: {
        if (tag == 73) {
         parse_tdBuyAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tdbuyamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_tdSellAmount;
        break;
      }

      // optional double tdSellAmount = 10;
      case 10: {
        if (tag == 81) {
         parse_tdSellAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tdsellamount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_buyProfit;
        break;
      }

      // optional double buyProfit = 11;
      case 11: {
        if (tag == 89) {
         parse_buyProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &buyprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_sellProfit;
        break;
      }

      // optional double sellProfit = 12;
      case 12: {
        if (tag == 97) {
         parse_sellProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sellprofit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_lastPrice;
        break;
      }

      // optional double lastPrice = 13;
      case 13: {
        if (tag == 105) {
         parse_lastPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_avgBuyPrice;
        break;
      }

      // optional double avgBuyPrice = 14;
      case 14: {
        if (tag == 113) {
         parse_avgBuyPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgbuyprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_avgSellPrice;
        break;
      }

      // optional double avgSellPrice = 15;
      case 15: {
        if (tag == 121) {
         parse_avgSellPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgsellprice_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Micro.Future.Message.Business.PBPositionPnL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Micro.Future.Message.Business.PBPositionPnL)
  return false;
#undef DO_
}

void PBPositionPnL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Micro.Future.Message.Business.PBPositionPnL)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionPnL.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exchange(), output);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionPnL.contract");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contract(), output);
  }

  // optional string portfolio = 4;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionPnL.portfolio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->portfolio(), output);
  }

  // optional int32 tdBuyPosition = 5;
  if (this->tdbuyposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tdbuyposition(), output);
  }

  // optional int32 ydBuyPosition = 6;
  if (this->ydbuyposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ydbuyposition(), output);
  }

  // optional int32 tdSellPosition = 7;
  if (this->tdsellposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->tdsellposition(), output);
  }

  // optional int32 ydSellPosition = 8;
  if (this->ydsellposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ydsellposition(), output);
  }

  // optional double tdBuyAmount = 9;
  if (this->tdbuyamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->tdbuyamount(), output);
  }

  // optional double tdSellAmount = 10;
  if (this->tdsellamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->tdsellamount(), output);
  }

  // optional double buyProfit = 11;
  if (this->buyprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->buyprofit(), output);
  }

  // optional double sellProfit = 12;
  if (this->sellprofit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->sellprofit(), output);
  }

  // optional double lastPrice = 13;
  if (this->lastprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->lastprice(), output);
  }

  // optional double avgBuyPrice = 14;
  if (this->avgbuyprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->avgbuyprice(), output);
  }

  // optional double avgSellPrice = 15;
  if (this->avgsellprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->avgsellprice(), output);
  }

  // @@protoc_insertion_point(serialize_end:Micro.Future.Message.Business.PBPositionPnL)
}

::google::protobuf::uint8* PBPositionPnL::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Micro.Future.Message.Business.PBPositionPnL)
  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->header_, target);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), this->exchange().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionPnL.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exchange(), target);
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract().data(), this->contract().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionPnL.contract");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contract(), target);
  }

  // optional string portfolio = 4;
  if (this->portfolio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio().data(), this->portfolio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Micro.Future.Message.Business.PBPositionPnL.portfolio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->portfolio(), target);
  }

  // optional int32 tdBuyPosition = 5;
  if (this->tdbuyposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tdbuyposition(), target);
  }

  // optional int32 ydBuyPosition = 6;
  if (this->ydbuyposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ydbuyposition(), target);
  }

  // optional int32 tdSellPosition = 7;
  if (this->tdsellposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->tdsellposition(), target);
  }

  // optional int32 ydSellPosition = 8;
  if (this->ydsellposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->ydsellposition(), target);
  }

  // optional double tdBuyAmount = 9;
  if (this->tdbuyamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->tdbuyamount(), target);
  }

  // optional double tdSellAmount = 10;
  if (this->tdsellamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->tdsellamount(), target);
  }

  // optional double buyProfit = 11;
  if (this->buyprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->buyprofit(), target);
  }

  // optional double sellProfit = 12;
  if (this->sellprofit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->sellprofit(), target);
  }

  // optional double lastPrice = 13;
  if (this->lastprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->lastprice(), target);
  }

  // optional double avgBuyPrice = 14;
  if (this->avgbuyprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->avgbuyprice(), target);
  }

  // optional double avgSellPrice = 15;
  if (this->avgsellprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->avgsellprice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Micro.Future.Message.Business.PBPositionPnL)
  return target;
}

int PBPositionPnL::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Micro.Future.Message.Business.PBPositionPnL)
  int total_size = 0;

  // optional .Micro.Future.Message.DataHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional string exchange = 2;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // optional string contract = 3;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract());
  }

  // optional string portfolio = 4;
  if (this->portfolio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio());
  }

  // optional int32 tdBuyPosition = 5;
  if (this->tdbuyposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tdbuyposition());
  }

  // optional int32 ydBuyPosition = 6;
  if (this->ydbuyposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ydbuyposition());
  }

  // optional int32 tdSellPosition = 7;
  if (this->tdsellposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tdsellposition());
  }

  // optional int32 ydSellPosition = 8;
  if (this->ydsellposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ydsellposition());
  }

  // optional double tdBuyAmount = 9;
  if (this->tdbuyamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double tdSellAmount = 10;
  if (this->tdsellamount() != 0) {
    total_size += 1 + 8;
  }

  // optional double buyProfit = 11;
  if (this->buyprofit() != 0) {
    total_size += 1 + 8;
  }

  // optional double sellProfit = 12;
  if (this->sellprofit() != 0) {
    total_size += 1 + 8;
  }

  // optional double lastPrice = 13;
  if (this->lastprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double avgBuyPrice = 14;
  if (this->avgbuyprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double avgSellPrice = 15;
  if (this->avgsellprice() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPositionPnL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Micro.Future.Message.Business.PBPositionPnL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPositionPnL* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPositionPnL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Micro.Future.Message.Business.PBPositionPnL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Micro.Future.Message.Business.PBPositionPnL)
    MergeFrom(*source);
  }
}

void PBPositionPnL::MergeFrom(const PBPositionPnL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Micro.Future.Message.Business.PBPositionPnL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_header()) {
    mutable_header()->::Micro::Future::Message::DataHeader::MergeFrom(from.header());
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.contract().size() > 0) {

    contract_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_);
  }
  if (from.portfolio().size() > 0) {

    portfolio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_);
  }
  if (from.tdbuyposition() != 0) {
    set_tdbuyposition(from.tdbuyposition());
  }
  if (from.ydbuyposition() != 0) {
    set_ydbuyposition(from.ydbuyposition());
  }
  if (from.tdsellposition() != 0) {
    set_tdsellposition(from.tdsellposition());
  }
  if (from.ydsellposition() != 0) {
    set_ydsellposition(from.ydsellposition());
  }
  if (from.tdbuyamount() != 0) {
    set_tdbuyamount(from.tdbuyamount());
  }
  if (from.tdsellamount() != 0) {
    set_tdsellamount(from.tdsellamount());
  }
  if (from.buyprofit() != 0) {
    set_buyprofit(from.buyprofit());
  }
  if (from.sellprofit() != 0) {
    set_sellprofit(from.sellprofit());
  }
  if (from.lastprice() != 0) {
    set_lastprice(from.lastprice());
  }
  if (from.avgbuyprice() != 0) {
    set_avgbuyprice(from.avgbuyprice());
  }
  if (from.avgsellprice() != 0) {
    set_avgsellprice(from.avgsellprice());
  }
}

void PBPositionPnL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Micro.Future.Message.Business.PBPositionPnL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPositionPnL::CopyFrom(const PBPositionPnL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Micro.Future.Message.Business.PBPositionPnL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPositionPnL::IsInitialized() const {

  return true;
}

void PBPositionPnL::Swap(PBPositionPnL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPositionPnL::InternalSwap(PBPositionPnL* other) {
  std::swap(header_, other->header_);
  exchange_.Swap(&other->exchange_);
  contract_.Swap(&other->contract_);
  portfolio_.Swap(&other->portfolio_);
  std::swap(tdbuyposition_, other->tdbuyposition_);
  std::swap(ydbuyposition_, other->ydbuyposition_);
  std::swap(tdsellposition_, other->tdsellposition_);
  std::swap(ydsellposition_, other->ydsellposition_);
  std::swap(tdbuyamount_, other->tdbuyamount_);
  std::swap(tdsellamount_, other->tdsellamount_);
  std::swap(buyprofit_, other->buyprofit_);
  std::swap(sellprofit_, other->sellprofit_);
  std::swap(lastprice_, other->lastprice_);
  std::swap(avgbuyprice_, other->avgbuyprice_);
  std::swap(avgsellprice_, other->avgsellprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPositionPnL::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPositionPnL_descriptor_;
  metadata.reflection = PBPositionPnL_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPositionPnL

// optional .Micro.Future.Message.DataHeader header = 1;
bool PBPositionPnL::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PBPositionPnL::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::Micro::Future::Message::DataHeader& PBPositionPnL::header() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::Micro::Future::Message::DataHeader* PBPositionPnL::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Micro::Future::Message::DataHeader;
  }
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionPnL.header)
  return header_;
}
::Micro::Future::Message::DataHeader* PBPositionPnL::release_header() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionPnL.header)
  
  ::Micro::Future::Message::DataHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void PBPositionPnL::set_allocated_header(::Micro::Future::Message::DataHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionPnL.header)
}

// optional string exchange = 2;
void PBPositionPnL::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPositionPnL::exchange() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.exchange)
  return exchange_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionPnL::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.exchange)
}
 void PBPositionPnL::set_exchange(const char* value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPositionPnL.exchange)
}
 void PBPositionPnL::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPositionPnL.exchange)
}
 ::std::string* PBPositionPnL::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionPnL.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPositionPnL::release_exchange() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionPnL.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionPnL::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionPnL.exchange)
}

// optional string contract = 3;
void PBPositionPnL::clear_contract() {
  contract_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPositionPnL::contract() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.contract)
  return contract_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionPnL::set_contract(const ::std::string& value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.contract)
}
 void PBPositionPnL::set_contract(const char* value) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPositionPnL.contract)
}
 void PBPositionPnL::set_contract(const char* value, size_t size) {
  
  contract_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPositionPnL.contract)
}
 ::std::string* PBPositionPnL::mutable_contract() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionPnL.contract)
  return contract_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPositionPnL::release_contract() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionPnL.contract)
  
  return contract_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionPnL::set_allocated_contract(::std::string* contract) {
  if (contract != NULL) {
    
  } else {
    
  }
  contract_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionPnL.contract)
}

// optional string portfolio = 4;
void PBPositionPnL::clear_portfolio() {
  portfolio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBPositionPnL::portfolio() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.portfolio)
  return portfolio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionPnL::set_portfolio(const ::std::string& value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.portfolio)
}
 void PBPositionPnL::set_portfolio(const char* value) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Micro.Future.Message.Business.PBPositionPnL.portfolio)
}
 void PBPositionPnL::set_portfolio(const char* value, size_t size) {
  
  portfolio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Micro.Future.Message.Business.PBPositionPnL.portfolio)
}
 ::std::string* PBPositionPnL::mutable_portfolio() {
  
  // @@protoc_insertion_point(field_mutable:Micro.Future.Message.Business.PBPositionPnL.portfolio)
  return portfolio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBPositionPnL::release_portfolio() {
  // @@protoc_insertion_point(field_release:Micro.Future.Message.Business.PBPositionPnL.portfolio)
  
  return portfolio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBPositionPnL::set_allocated_portfolio(::std::string* portfolio) {
  if (portfolio != NULL) {
    
  } else {
    
  }
  portfolio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portfolio);
  // @@protoc_insertion_point(field_set_allocated:Micro.Future.Message.Business.PBPositionPnL.portfolio)
}

// optional int32 tdBuyPosition = 5;
void PBPositionPnL::clear_tdbuyposition() {
  tdbuyposition_ = 0;
}
 ::google::protobuf::int32 PBPositionPnL::tdbuyposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.tdBuyPosition)
  return tdbuyposition_;
}
 void PBPositionPnL::set_tdbuyposition(::google::protobuf::int32 value) {
  
  tdbuyposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.tdBuyPosition)
}

// optional int32 ydBuyPosition = 6;
void PBPositionPnL::clear_ydbuyposition() {
  ydbuyposition_ = 0;
}
 ::google::protobuf::int32 PBPositionPnL::ydbuyposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.ydBuyPosition)
  return ydbuyposition_;
}
 void PBPositionPnL::set_ydbuyposition(::google::protobuf::int32 value) {
  
  ydbuyposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.ydBuyPosition)
}

// optional int32 tdSellPosition = 7;
void PBPositionPnL::clear_tdsellposition() {
  tdsellposition_ = 0;
}
 ::google::protobuf::int32 PBPositionPnL::tdsellposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.tdSellPosition)
  return tdsellposition_;
}
 void PBPositionPnL::set_tdsellposition(::google::protobuf::int32 value) {
  
  tdsellposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.tdSellPosition)
}

// optional int32 ydSellPosition = 8;
void PBPositionPnL::clear_ydsellposition() {
  ydsellposition_ = 0;
}
 ::google::protobuf::int32 PBPositionPnL::ydsellposition() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.ydSellPosition)
  return ydsellposition_;
}
 void PBPositionPnL::set_ydsellposition(::google::protobuf::int32 value) {
  
  ydsellposition_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.ydSellPosition)
}

// optional double tdBuyAmount = 9;
void PBPositionPnL::clear_tdbuyamount() {
  tdbuyamount_ = 0;
}
 double PBPositionPnL::tdbuyamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.tdBuyAmount)
  return tdbuyamount_;
}
 void PBPositionPnL::set_tdbuyamount(double value) {
  
  tdbuyamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.tdBuyAmount)
}

// optional double tdSellAmount = 10;
void PBPositionPnL::clear_tdsellamount() {
  tdsellamount_ = 0;
}
 double PBPositionPnL::tdsellamount() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.tdSellAmount)
  return tdsellamount_;
}
 void PBPositionPnL::set_tdsellamount(double value) {
  
  tdsellamount_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.tdSellAmount)
}

// optional double buyProfit = 11;
void PBPositionPnL::clear_buyprofit() {
  buyprofit_ = 0;
}
 double PBPositionPnL::buyprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.buyProfit)
  return buyprofit_;
}
 void PBPositionPnL::set_buyprofit(double value) {
  
  buyprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.buyProfit)
}

// optional double sellProfit = 12;
void PBPositionPnL::clear_sellprofit() {
  sellprofit_ = 0;
}
 double PBPositionPnL::sellprofit() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.sellProfit)
  return sellprofit_;
}
 void PBPositionPnL::set_sellprofit(double value) {
  
  sellprofit_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.sellProfit)
}

// optional double lastPrice = 13;
void PBPositionPnL::clear_lastprice() {
  lastprice_ = 0;
}
 double PBPositionPnL::lastprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.lastPrice)
  return lastprice_;
}
 void PBPositionPnL::set_lastprice(double value) {
  
  lastprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.lastPrice)
}

// optional double avgBuyPrice = 14;
void PBPositionPnL::clear_avgbuyprice() {
  avgbuyprice_ = 0;
}
 double PBPositionPnL::avgbuyprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.avgBuyPrice)
  return avgbuyprice_;
}
 void PBPositionPnL::set_avgbuyprice(double value) {
  
  avgbuyprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.avgBuyPrice)
}

// optional double avgSellPrice = 15;
void PBPositionPnL::clear_avgsellprice() {
  avgsellprice_ = 0;
}
 double PBPositionPnL::avgsellprice() const {
  // @@protoc_insertion_point(field_get:Micro.Future.Message.Business.PBPositionPnL.avgSellPrice)
  return avgsellprice_;
}
 void PBPositionPnL::set_avgsellprice(double value) {
  
  avgsellprice_ = value;
  // @@protoc_insertion_point(field_set:Micro.Future.Message.Business.PBPositionPnL.avgSellPrice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Business
}  // namespace Message
}  // namespace Future
}  // namespace Micro

// @@protoc_insertion_point(global_scope)
